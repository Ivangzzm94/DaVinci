Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 DAVINCI block
Rule 2     program1 -> funcs
Rule 3     program1 -> vars
Rule 4     program1 -> funcs vars
Rule 5     program1 -> vars funcs
Rule 6     program1 -> empty
Rule 7     block -> LBRACE b1 RBRACE
Rule 8     b1 -> vars b2
Rule 9     b1 -> b2
Rule 10    b2 -> b2 statute
Rule 11    b2 -> empty
Rule 12    vars -> VAR vars2
Rule 13    vars2 -> vars2 type vars3 SEMICOLON
Rule 14    vars2 -> empty
Rule 15    vars3 -> ID ASSIGN expression vars4
Rule 16    vars3 -> ID list vars4
Rule 17    vars3 -> ID vars4
Rule 18    vars4 -> COMMA vars3
Rule 19    vars4 -> empty
Rule 20    list -> LBRACKET expression RBRACKET
Rule 21    statute -> assignment
Rule 22    statute -> call
Rule 23    statute -> condition
Rule 24    statute -> triangle
Rule 25    statute -> rectangle
Rule 26    statute -> square
Rule 27    statute -> circle
Rule 28    statute -> poligon
Rule 29    statute -> color
Rule 30    statute -> pensize
Rule 31    statute -> penforward
Rule 32    statute -> penback
Rule 33    statute -> rotate
Rule 34    statute -> while
Rule 35    statute -> return
Rule 36    statute -> penon
Rule 37    statute -> penoff
Rule 38    while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
Rule 39    assignment -> ID ASSIGN expression SEMICOLON
Rule 40    assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 41    color_cte -> RED
Rule 42    color_cte -> BLUE
Rule 43    color_cte -> YELLOW
Rule 44    color_cte -> GREEN
Rule 45    color_cte -> PINK
Rule 46    color_cte -> PURPLE
Rule 47    st_cte -> STRING
Rule 48    st_cte -> cte_bool
Rule 49    funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 50    funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 51    funcs1 -> funcs1 COMMA type ID
Rule 52    funcs1 -> empty
Rule 53    funcs2 -> funcs2 vars
Rule 54    funcs2 -> funcs2 statute
Rule 55    funcs2 -> empty
Rule 56    funcs3 -> funcs
Rule 57    funcs3 -> empty
Rule 58    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 59    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 60    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 61    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 62    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 63    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 64    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 65    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 66    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 67    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 68    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 69    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 70    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 71    type -> INT
Rule 72    type -> FLOAT
Rule 73    type -> STRING
Rule 74    type -> BOOL
Rule 75    var_cte -> ID
Rule 76    var_cte -> CTE_INT
Rule 77    var_cte -> CTE_FLOAT
Rule 78    var_cte -> cte_bool
Rule 79    var_cte -> ID list
Rule 80    var_cte -> call
Rule 81    cte_bool -> TRUE
Rule 82    cte_bool -> FALSE
Rule 83    condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
Rule 84    condition1 -> ELSE LBRACE b2 RBRACE
Rule 85    condition1 -> empty
Rule 86    expression -> exp expression1
Rule 87    expression1 -> LESSER exp
Rule 88    expression1 -> GREATER exp
Rule 89    expression1 -> EQUAL exp
Rule 90    expression1 -> NOTEQUAL exp
Rule 91    expression1 -> GREATEROREQUAL exp
Rule 92    expression1 -> LESSEROREQUAL exp
Rule 93    expression1 -> empty
Rule 94    exp -> term exp1
Rule 95    exp1 -> MINUS exp
Rule 96    exp1 -> PLUS exp
Rule 97    exp1 -> empty
Rule 98    factor -> LPAREN expression RPAREN
Rule 99    factor -> var_cte
Rule 100   factor -> factor1 var_cte
Rule 101   factor1 -> MINUS
Rule 102   factor1 -> PLUS
Rule 103   factor1 -> empty
Rule 104   term -> factor term1
Rule 105   term1 -> DIVIDE term
Rule 106   term1 -> TIMES term
Rule 107   term1 -> empty
Rule 108   call -> ID LPAREN call1 RPAREN SEMICOLON
Rule 109   call1 -> ID COMMA call1
Rule 110   call1 -> exp
Rule 111   call1 -> st_cte
Rule 112   return -> RETURN var_cte SEMICOLON
Rule 113   return -> RETURN st_cte SEMICOLON
Rule 114   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 15 39 40
BLUE                 : 42
BOOL                 : 74
CIRCLE               : 59
COLOR                : 58
COMMA                : 18 51 61 62 63 109
CTE_BOOL             : 
CTE_FLOAT            : 77
CTE_INT              : 76
CTE_STRING           : 65
DAVINCI              : 1
DIVIDE               : 105
ELSE                 : 84
EQUAL                : 89
EXPRESSION           : 
FALSE                : 82
FLOAT                : 72
FUNC                 : 49 50
GREATER              : 88
GREATEROREQUAL       : 91
GREEN                : 44
ID                   : 1 15 16 17 39 40 49 49 50 50 51 75 79 108 109
IF                   : 83
INT                  : 71
LBRACE               : 7 38 49 50 83 84
LBRACKET             : 20 40
LESSER               : 87
LESSEROREQUAL        : 92
LPAREN               : 38 49 50 58 59 60 61 62 63 64 65 66 67 68 69 70 83 98 108
MINUS                : 95 101
NOT                  : 
NOTEQUAL             : 90
OR                   : 
PENBACK              : 68
PENFORWARD           : 67
PENOFF               : 70
PENON                : 69
PENSIZE              : 66
PINK                 : 45
PLUS                 : 96 102
POLIGON              : 63
PROGRAM              : 1
PURPLE               : 46
RBRACE               : 7 38 49 50 83 84
RBRACKET             : 20 40
RECTANGLE            : 62
RED                  : 41
RETURN               : 112 113
ROTATE               : 64 65
RPAREN               : 38 49 50 58 59 60 61 62 63 64 65 66 67 68 69 70 83 98 108
SEMICOLON            : 1 13 39 40 58 59 60 61 62 63 64 65 66 67 68 69 70 108 112 113
SIZE                 : 
SQUARE               : 60
STRING               : 47 73
ST_CTE               : 
TERM                 : 
TIMES                : 106
TRIANGLE             : 61
TRUE                 : 81
VAR                  : 12
VOID                 : 50
WHILE                : 38
YELLOW               : 43
error                : 

Nonterminals, with rules where they appear

assignment           : 21
b1                   : 7
b2                   : 8 9 10 38 83 84
block                : 1
call                 : 22 80
call1                : 108 109
circle               : 27
color                : 29
color_cte            : 58
condition            : 23
condition1           : 83
cte_bool             : 48 78
empty                : 6 11 14 19 52 55 57 85 93 97 103 107
exp                  : 40 59 60 61 61 62 62 63 63 64 66 67 68 86 87 88 89 90 91 92 95 96 110
exp1                 : 94
expression           : 15 20 38 39 40 83 98
expression1          : 86
factor               : 104
factor1              : 100
funcs                : 2 4 5 56
funcs1               : 49 50 51
funcs2               : 49 50 53 54
funcs3               : 49 50
list                 : 16 79
penback              : 32
penforward           : 31
penoff               : 37
penon                : 36
pensize              : 30
poligon              : 28
program              : 0
program1             : 1
rectangle            : 25
return               : 35
rotate               : 33
square               : 26
st_cte               : 111 113
statute              : 10 54
term                 : 94 105 106
term1                : 104
triangle             : 24
type                 : 13 49 49 50 51
var_cte              : 99 100 112
vars                 : 3 4 5 8 53
vars2                : 12 13
vars3                : 13 18
vars4                : 15 16 17
while                : 34

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 DAVINCI block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 DAVINCI block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 DAVINCI block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 DAVINCI block
    (2) program1 -> . funcs
    (3) program1 -> . vars
    (4) program1 -> . funcs vars
    (5) program1 -> . vars funcs
    (6) program1 -> . empty
    (49) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (12) vars -> . VAR vars2
    (114) empty -> .

    FUNC            shift and go to state 9
    VAR             shift and go to state 10
    DAVINCI         reduce using rule 114 (empty -> .)

    program1                       shift and go to state 5
    funcs                          shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . DAVINCI block

    DAVINCI         shift and go to state 11


state 6

    (2) program1 -> funcs .
    (4) program1 -> funcs . vars
    (12) vars -> . VAR vars2

    DAVINCI         reduce using rule 2 (program1 -> funcs .)
    VAR             shift and go to state 10

    vars                           shift and go to state 12

state 7

    (3) program1 -> vars .
    (5) program1 -> vars . funcs
    (49) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    DAVINCI         reduce using rule 3 (program1 -> vars .)
    FUNC            shift and go to state 9

    funcs                          shift and go to state 13

state 8

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)


state 9

    (49) funcs -> FUNC . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> FUNC . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . BOOL

    VOID            shift and go to state 15
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    type                           shift and go to state 14

state 10

    (12) vars -> VAR . vars2
    (13) vars2 -> . vars2 type vars3 SEMICOLON
    (14) vars2 -> . empty
    (114) empty -> .

    INT             reduce using rule 114 (empty -> .)
    FLOAT           reduce using rule 114 (empty -> .)
    STRING          reduce using rule 114 (empty -> .)
    BOOL            reduce using rule 114 (empty -> .)
    FUNC            reduce using rule 114 (empty -> .)
    DAVINCI         reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

    vars2                          shift and go to state 20
    empty                          shift and go to state 21

state 11

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI . block
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 12

    (4) program1 -> funcs vars .

    DAVINCI         reduce using rule 4 (program1 -> funcs vars .)


state 13

    (5) program1 -> vars funcs .

    DAVINCI         reduce using rule 5 (program1 -> vars funcs .)


state 14

    (49) funcs -> FUNC type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 24


state 15

    (50) funcs -> FUNC VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 25


state 16

    (71) type -> INT .

    ID              reduce using rule 71 (type -> INT .)


state 17

    (72) type -> FLOAT .

    ID              reduce using rule 72 (type -> FLOAT .)


state 18

    (73) type -> STRING .

    ID              reduce using rule 73 (type -> STRING .)


state 19

    (74) type -> BOOL .

    ID              reduce using rule 74 (type -> BOOL .)


state 20

    (12) vars -> VAR vars2 .
    (13) vars2 -> vars2 . type vars3 SEMICOLON
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . BOOL

    FUNC            reduce using rule 12 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 12 (vars -> VAR vars2 .)
    ID              reduce using rule 12 (vars -> VAR vars2 .)
    IF              reduce using rule 12 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 12 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 12 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 12 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 12 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 12 (vars -> VAR vars2 .)
    COLOR           reduce using rule 12 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 12 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 12 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 12 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 12 (vars -> VAR vars2 .)
    WHILE           reduce using rule 12 (vars -> VAR vars2 .)
    RETURN          reduce using rule 12 (vars -> VAR vars2 .)
    PENON           reduce using rule 12 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 12 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 12 (vars -> VAR vars2 .)
    VAR             reduce using rule 12 (vars -> VAR vars2 .)
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    type                           shift and go to state 26

state 21

    (14) vars2 -> empty .

    INT             reduce using rule 14 (vars2 -> empty .)
    FLOAT           reduce using rule 14 (vars2 -> empty .)
    STRING          reduce using rule 14 (vars2 -> empty .)
    BOOL            reduce using rule 14 (vars2 -> empty .)
    FUNC            reduce using rule 14 (vars2 -> empty .)
    DAVINCI         reduce using rule 14 (vars2 -> empty .)
    ID              reduce using rule 14 (vars2 -> empty .)
    IF              reduce using rule 14 (vars2 -> empty .)
    TRIANGLE        reduce using rule 14 (vars2 -> empty .)
    RECTANGLE       reduce using rule 14 (vars2 -> empty .)
    SQUARE          reduce using rule 14 (vars2 -> empty .)
    CIRCLE          reduce using rule 14 (vars2 -> empty .)
    POLIGON         reduce using rule 14 (vars2 -> empty .)
    COLOR           reduce using rule 14 (vars2 -> empty .)
    PENSIZE         reduce using rule 14 (vars2 -> empty .)
    PENFORWARD      reduce using rule 14 (vars2 -> empty .)
    PENBACK         reduce using rule 14 (vars2 -> empty .)
    ROTATE          reduce using rule 14 (vars2 -> empty .)
    WHILE           reduce using rule 14 (vars2 -> empty .)
    RETURN          reduce using rule 14 (vars2 -> empty .)
    PENON           reduce using rule 14 (vars2 -> empty .)
    PENOFF          reduce using rule 14 (vars2 -> empty .)
    RBRACE          reduce using rule 14 (vars2 -> empty .)
    VAR             reduce using rule 14 (vars2 -> empty .)


state 22

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 DAVINCI block .)


state 23

    (7) block -> LBRACE . b1 RBRACE
    (8) b1 -> . vars b2
    (9) b1 -> . b2
    (12) vars -> . VAR vars2
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (114) empty -> .

    VAR             shift and go to state 10
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)

    b1                             shift and go to state 27
    vars                           shift and go to state 28
    b2                             shift and go to state 29
    empty                          shift and go to state 30

state 24

    (49) funcs -> FUNC type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 31


state 25

    (50) funcs -> FUNC VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 32


state 26

    (13) vars2 -> vars2 type . vars3 SEMICOLON
    (15) vars3 -> . ID ASSIGN expression vars4
    (16) vars3 -> . ID list vars4
    (17) vars3 -> . ID vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 33

state 27

    (7) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 35


state 28

    (8) b1 -> vars . b2
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (114) empty -> .

    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)

    b2                             shift and go to state 36
    empty                          shift and go to state 30

state 29

    (9) b1 -> b2 .
    (10) b2 -> b2 . statute
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 9 (b1 -> b2 .)
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    statute                        shift and go to state 37
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 30

    (11) b2 -> empty .

    ID              reduce using rule 11 (b2 -> empty .)
    IF              reduce using rule 11 (b2 -> empty .)
    TRIANGLE        reduce using rule 11 (b2 -> empty .)
    RECTANGLE       reduce using rule 11 (b2 -> empty .)
    SQUARE          reduce using rule 11 (b2 -> empty .)
    CIRCLE          reduce using rule 11 (b2 -> empty .)
    POLIGON         reduce using rule 11 (b2 -> empty .)
    COLOR           reduce using rule 11 (b2 -> empty .)
    PENSIZE         reduce using rule 11 (b2 -> empty .)
    PENFORWARD      reduce using rule 11 (b2 -> empty .)
    PENBACK         reduce using rule 11 (b2 -> empty .)
    ROTATE          reduce using rule 11 (b2 -> empty .)
    WHILE           reduce using rule 11 (b2 -> empty .)
    RETURN          reduce using rule 11 (b2 -> empty .)
    PENON           reduce using rule 11 (b2 -> empty .)
    PENOFF          reduce using rule 11 (b2 -> empty .)
    RBRACE          reduce using rule 11 (b2 -> empty .)


state 31

    (49) funcs -> FUNC type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    type                           shift and go to state 71

state 32

    (50) funcs -> FUNC VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    type                           shift and go to state 72

state 33

    (13) vars2 -> vars2 type vars3 . SEMICOLON

    SEMICOLON       shift and go to state 73


state 34

    (15) vars3 -> ID . ASSIGN expression vars4
    (16) vars3 -> ID . list vars4
    (17) vars3 -> ID . vars4
    (20) list -> . LBRACKET expression RBRACKET
    (18) vars4 -> . COMMA vars3
    (19) vars4 -> . empty
    (114) empty -> .

    ASSIGN          shift and go to state 74
    LBRACKET        shift and go to state 77
    COMMA           shift and go to state 78
    SEMICOLON       reduce using rule 114 (empty -> .)

    vars4                          shift and go to state 75
    list                           shift and go to state 76
    empty                          shift and go to state 79

state 35

    (7) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 7 (block -> LBRACE b1 RBRACE .)


state 36

    (8) b1 -> vars b2 .
    (10) b2 -> b2 . statute
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 8 (b1 -> vars b2 .)
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    statute                        shift and go to state 37
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 37

    (10) b2 -> b2 statute .

    ID              reduce using rule 10 (b2 -> b2 statute .)
    IF              reduce using rule 10 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 10 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 10 (b2 -> b2 statute .)
    SQUARE          reduce using rule 10 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 10 (b2 -> b2 statute .)
    POLIGON         reduce using rule 10 (b2 -> b2 statute .)
    COLOR           reduce using rule 10 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 10 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 10 (b2 -> b2 statute .)
    PENBACK         reduce using rule 10 (b2 -> b2 statute .)
    ROTATE          reduce using rule 10 (b2 -> b2 statute .)
    WHILE           reduce using rule 10 (b2 -> b2 statute .)
    RETURN          reduce using rule 10 (b2 -> b2 statute .)
    PENON           reduce using rule 10 (b2 -> b2 statute .)
    PENOFF          reduce using rule 10 (b2 -> b2 statute .)
    RBRACE          reduce using rule 10 (b2 -> b2 statute .)


state 38

    (21) statute -> assignment .

    ID              reduce using rule 21 (statute -> assignment .)
    IF              reduce using rule 21 (statute -> assignment .)
    TRIANGLE        reduce using rule 21 (statute -> assignment .)
    RECTANGLE       reduce using rule 21 (statute -> assignment .)
    SQUARE          reduce using rule 21 (statute -> assignment .)
    CIRCLE          reduce using rule 21 (statute -> assignment .)
    POLIGON         reduce using rule 21 (statute -> assignment .)
    COLOR           reduce using rule 21 (statute -> assignment .)
    PENSIZE         reduce using rule 21 (statute -> assignment .)
    PENFORWARD      reduce using rule 21 (statute -> assignment .)
    PENBACK         reduce using rule 21 (statute -> assignment .)
    ROTATE          reduce using rule 21 (statute -> assignment .)
    WHILE           reduce using rule 21 (statute -> assignment .)
    RETURN          reduce using rule 21 (statute -> assignment .)
    PENON           reduce using rule 21 (statute -> assignment .)
    PENOFF          reduce using rule 21 (statute -> assignment .)
    RBRACE          reduce using rule 21 (statute -> assignment .)
    VAR             reduce using rule 21 (statute -> assignment .)


state 39

    (22) statute -> call .

    ID              reduce using rule 22 (statute -> call .)
    IF              reduce using rule 22 (statute -> call .)
    TRIANGLE        reduce using rule 22 (statute -> call .)
    RECTANGLE       reduce using rule 22 (statute -> call .)
    SQUARE          reduce using rule 22 (statute -> call .)
    CIRCLE          reduce using rule 22 (statute -> call .)
    POLIGON         reduce using rule 22 (statute -> call .)
    COLOR           reduce using rule 22 (statute -> call .)
    PENSIZE         reduce using rule 22 (statute -> call .)
    PENFORWARD      reduce using rule 22 (statute -> call .)
    PENBACK         reduce using rule 22 (statute -> call .)
    ROTATE          reduce using rule 22 (statute -> call .)
    WHILE           reduce using rule 22 (statute -> call .)
    RETURN          reduce using rule 22 (statute -> call .)
    PENON           reduce using rule 22 (statute -> call .)
    PENOFF          reduce using rule 22 (statute -> call .)
    RBRACE          reduce using rule 22 (statute -> call .)
    VAR             reduce using rule 22 (statute -> call .)


state 40

    (23) statute -> condition .

    ID              reduce using rule 23 (statute -> condition .)
    IF              reduce using rule 23 (statute -> condition .)
    TRIANGLE        reduce using rule 23 (statute -> condition .)
    RECTANGLE       reduce using rule 23 (statute -> condition .)
    SQUARE          reduce using rule 23 (statute -> condition .)
    CIRCLE          reduce using rule 23 (statute -> condition .)
    POLIGON         reduce using rule 23 (statute -> condition .)
    COLOR           reduce using rule 23 (statute -> condition .)
    PENSIZE         reduce using rule 23 (statute -> condition .)
    PENFORWARD      reduce using rule 23 (statute -> condition .)
    PENBACK         reduce using rule 23 (statute -> condition .)
    ROTATE          reduce using rule 23 (statute -> condition .)
    WHILE           reduce using rule 23 (statute -> condition .)
    RETURN          reduce using rule 23 (statute -> condition .)
    PENON           reduce using rule 23 (statute -> condition .)
    PENOFF          reduce using rule 23 (statute -> condition .)
    RBRACE          reduce using rule 23 (statute -> condition .)
    VAR             reduce using rule 23 (statute -> condition .)


state 41

    (24) statute -> triangle .

    ID              reduce using rule 24 (statute -> triangle .)
    IF              reduce using rule 24 (statute -> triangle .)
    TRIANGLE        reduce using rule 24 (statute -> triangle .)
    RECTANGLE       reduce using rule 24 (statute -> triangle .)
    SQUARE          reduce using rule 24 (statute -> triangle .)
    CIRCLE          reduce using rule 24 (statute -> triangle .)
    POLIGON         reduce using rule 24 (statute -> triangle .)
    COLOR           reduce using rule 24 (statute -> triangle .)
    PENSIZE         reduce using rule 24 (statute -> triangle .)
    PENFORWARD      reduce using rule 24 (statute -> triangle .)
    PENBACK         reduce using rule 24 (statute -> triangle .)
    ROTATE          reduce using rule 24 (statute -> triangle .)
    WHILE           reduce using rule 24 (statute -> triangle .)
    RETURN          reduce using rule 24 (statute -> triangle .)
    PENON           reduce using rule 24 (statute -> triangle .)
    PENOFF          reduce using rule 24 (statute -> triangle .)
    RBRACE          reduce using rule 24 (statute -> triangle .)
    VAR             reduce using rule 24 (statute -> triangle .)


state 42

    (25) statute -> rectangle .

    ID              reduce using rule 25 (statute -> rectangle .)
    IF              reduce using rule 25 (statute -> rectangle .)
    TRIANGLE        reduce using rule 25 (statute -> rectangle .)
    RECTANGLE       reduce using rule 25 (statute -> rectangle .)
    SQUARE          reduce using rule 25 (statute -> rectangle .)
    CIRCLE          reduce using rule 25 (statute -> rectangle .)
    POLIGON         reduce using rule 25 (statute -> rectangle .)
    COLOR           reduce using rule 25 (statute -> rectangle .)
    PENSIZE         reduce using rule 25 (statute -> rectangle .)
    PENFORWARD      reduce using rule 25 (statute -> rectangle .)
    PENBACK         reduce using rule 25 (statute -> rectangle .)
    ROTATE          reduce using rule 25 (statute -> rectangle .)
    WHILE           reduce using rule 25 (statute -> rectangle .)
    RETURN          reduce using rule 25 (statute -> rectangle .)
    PENON           reduce using rule 25 (statute -> rectangle .)
    PENOFF          reduce using rule 25 (statute -> rectangle .)
    RBRACE          reduce using rule 25 (statute -> rectangle .)
    VAR             reduce using rule 25 (statute -> rectangle .)


state 43

    (26) statute -> square .

    ID              reduce using rule 26 (statute -> square .)
    IF              reduce using rule 26 (statute -> square .)
    TRIANGLE        reduce using rule 26 (statute -> square .)
    RECTANGLE       reduce using rule 26 (statute -> square .)
    SQUARE          reduce using rule 26 (statute -> square .)
    CIRCLE          reduce using rule 26 (statute -> square .)
    POLIGON         reduce using rule 26 (statute -> square .)
    COLOR           reduce using rule 26 (statute -> square .)
    PENSIZE         reduce using rule 26 (statute -> square .)
    PENFORWARD      reduce using rule 26 (statute -> square .)
    PENBACK         reduce using rule 26 (statute -> square .)
    ROTATE          reduce using rule 26 (statute -> square .)
    WHILE           reduce using rule 26 (statute -> square .)
    RETURN          reduce using rule 26 (statute -> square .)
    PENON           reduce using rule 26 (statute -> square .)
    PENOFF          reduce using rule 26 (statute -> square .)
    RBRACE          reduce using rule 26 (statute -> square .)
    VAR             reduce using rule 26 (statute -> square .)


state 44

    (27) statute -> circle .

    ID              reduce using rule 27 (statute -> circle .)
    IF              reduce using rule 27 (statute -> circle .)
    TRIANGLE        reduce using rule 27 (statute -> circle .)
    RECTANGLE       reduce using rule 27 (statute -> circle .)
    SQUARE          reduce using rule 27 (statute -> circle .)
    CIRCLE          reduce using rule 27 (statute -> circle .)
    POLIGON         reduce using rule 27 (statute -> circle .)
    COLOR           reduce using rule 27 (statute -> circle .)
    PENSIZE         reduce using rule 27 (statute -> circle .)
    PENFORWARD      reduce using rule 27 (statute -> circle .)
    PENBACK         reduce using rule 27 (statute -> circle .)
    ROTATE          reduce using rule 27 (statute -> circle .)
    WHILE           reduce using rule 27 (statute -> circle .)
    RETURN          reduce using rule 27 (statute -> circle .)
    PENON           reduce using rule 27 (statute -> circle .)
    PENOFF          reduce using rule 27 (statute -> circle .)
    RBRACE          reduce using rule 27 (statute -> circle .)
    VAR             reduce using rule 27 (statute -> circle .)


state 45

    (28) statute -> poligon .

    ID              reduce using rule 28 (statute -> poligon .)
    IF              reduce using rule 28 (statute -> poligon .)
    TRIANGLE        reduce using rule 28 (statute -> poligon .)
    RECTANGLE       reduce using rule 28 (statute -> poligon .)
    SQUARE          reduce using rule 28 (statute -> poligon .)
    CIRCLE          reduce using rule 28 (statute -> poligon .)
    POLIGON         reduce using rule 28 (statute -> poligon .)
    COLOR           reduce using rule 28 (statute -> poligon .)
    PENSIZE         reduce using rule 28 (statute -> poligon .)
    PENFORWARD      reduce using rule 28 (statute -> poligon .)
    PENBACK         reduce using rule 28 (statute -> poligon .)
    ROTATE          reduce using rule 28 (statute -> poligon .)
    WHILE           reduce using rule 28 (statute -> poligon .)
    RETURN          reduce using rule 28 (statute -> poligon .)
    PENON           reduce using rule 28 (statute -> poligon .)
    PENOFF          reduce using rule 28 (statute -> poligon .)
    RBRACE          reduce using rule 28 (statute -> poligon .)
    VAR             reduce using rule 28 (statute -> poligon .)


state 46

    (29) statute -> color .

    ID              reduce using rule 29 (statute -> color .)
    IF              reduce using rule 29 (statute -> color .)
    TRIANGLE        reduce using rule 29 (statute -> color .)
    RECTANGLE       reduce using rule 29 (statute -> color .)
    SQUARE          reduce using rule 29 (statute -> color .)
    CIRCLE          reduce using rule 29 (statute -> color .)
    POLIGON         reduce using rule 29 (statute -> color .)
    COLOR           reduce using rule 29 (statute -> color .)
    PENSIZE         reduce using rule 29 (statute -> color .)
    PENFORWARD      reduce using rule 29 (statute -> color .)
    PENBACK         reduce using rule 29 (statute -> color .)
    ROTATE          reduce using rule 29 (statute -> color .)
    WHILE           reduce using rule 29 (statute -> color .)
    RETURN          reduce using rule 29 (statute -> color .)
    PENON           reduce using rule 29 (statute -> color .)
    PENOFF          reduce using rule 29 (statute -> color .)
    RBRACE          reduce using rule 29 (statute -> color .)
    VAR             reduce using rule 29 (statute -> color .)


state 47

    (30) statute -> pensize .

    ID              reduce using rule 30 (statute -> pensize .)
    IF              reduce using rule 30 (statute -> pensize .)
    TRIANGLE        reduce using rule 30 (statute -> pensize .)
    RECTANGLE       reduce using rule 30 (statute -> pensize .)
    SQUARE          reduce using rule 30 (statute -> pensize .)
    CIRCLE          reduce using rule 30 (statute -> pensize .)
    POLIGON         reduce using rule 30 (statute -> pensize .)
    COLOR           reduce using rule 30 (statute -> pensize .)
    PENSIZE         reduce using rule 30 (statute -> pensize .)
    PENFORWARD      reduce using rule 30 (statute -> pensize .)
    PENBACK         reduce using rule 30 (statute -> pensize .)
    ROTATE          reduce using rule 30 (statute -> pensize .)
    WHILE           reduce using rule 30 (statute -> pensize .)
    RETURN          reduce using rule 30 (statute -> pensize .)
    PENON           reduce using rule 30 (statute -> pensize .)
    PENOFF          reduce using rule 30 (statute -> pensize .)
    RBRACE          reduce using rule 30 (statute -> pensize .)
    VAR             reduce using rule 30 (statute -> pensize .)


state 48

    (31) statute -> penforward .

    ID              reduce using rule 31 (statute -> penforward .)
    IF              reduce using rule 31 (statute -> penforward .)
    TRIANGLE        reduce using rule 31 (statute -> penforward .)
    RECTANGLE       reduce using rule 31 (statute -> penforward .)
    SQUARE          reduce using rule 31 (statute -> penforward .)
    CIRCLE          reduce using rule 31 (statute -> penforward .)
    POLIGON         reduce using rule 31 (statute -> penforward .)
    COLOR           reduce using rule 31 (statute -> penforward .)
    PENSIZE         reduce using rule 31 (statute -> penforward .)
    PENFORWARD      reduce using rule 31 (statute -> penforward .)
    PENBACK         reduce using rule 31 (statute -> penforward .)
    ROTATE          reduce using rule 31 (statute -> penforward .)
    WHILE           reduce using rule 31 (statute -> penforward .)
    RETURN          reduce using rule 31 (statute -> penforward .)
    PENON           reduce using rule 31 (statute -> penforward .)
    PENOFF          reduce using rule 31 (statute -> penforward .)
    RBRACE          reduce using rule 31 (statute -> penforward .)
    VAR             reduce using rule 31 (statute -> penforward .)


state 49

    (32) statute -> penback .

    ID              reduce using rule 32 (statute -> penback .)
    IF              reduce using rule 32 (statute -> penback .)
    TRIANGLE        reduce using rule 32 (statute -> penback .)
    RECTANGLE       reduce using rule 32 (statute -> penback .)
    SQUARE          reduce using rule 32 (statute -> penback .)
    CIRCLE          reduce using rule 32 (statute -> penback .)
    POLIGON         reduce using rule 32 (statute -> penback .)
    COLOR           reduce using rule 32 (statute -> penback .)
    PENSIZE         reduce using rule 32 (statute -> penback .)
    PENFORWARD      reduce using rule 32 (statute -> penback .)
    PENBACK         reduce using rule 32 (statute -> penback .)
    ROTATE          reduce using rule 32 (statute -> penback .)
    WHILE           reduce using rule 32 (statute -> penback .)
    RETURN          reduce using rule 32 (statute -> penback .)
    PENON           reduce using rule 32 (statute -> penback .)
    PENOFF          reduce using rule 32 (statute -> penback .)
    RBRACE          reduce using rule 32 (statute -> penback .)
    VAR             reduce using rule 32 (statute -> penback .)


state 50

    (33) statute -> rotate .

    ID              reduce using rule 33 (statute -> rotate .)
    IF              reduce using rule 33 (statute -> rotate .)
    TRIANGLE        reduce using rule 33 (statute -> rotate .)
    RECTANGLE       reduce using rule 33 (statute -> rotate .)
    SQUARE          reduce using rule 33 (statute -> rotate .)
    CIRCLE          reduce using rule 33 (statute -> rotate .)
    POLIGON         reduce using rule 33 (statute -> rotate .)
    COLOR           reduce using rule 33 (statute -> rotate .)
    PENSIZE         reduce using rule 33 (statute -> rotate .)
    PENFORWARD      reduce using rule 33 (statute -> rotate .)
    PENBACK         reduce using rule 33 (statute -> rotate .)
    ROTATE          reduce using rule 33 (statute -> rotate .)
    WHILE           reduce using rule 33 (statute -> rotate .)
    RETURN          reduce using rule 33 (statute -> rotate .)
    PENON           reduce using rule 33 (statute -> rotate .)
    PENOFF          reduce using rule 33 (statute -> rotate .)
    RBRACE          reduce using rule 33 (statute -> rotate .)
    VAR             reduce using rule 33 (statute -> rotate .)


state 51

    (34) statute -> while .

    ID              reduce using rule 34 (statute -> while .)
    IF              reduce using rule 34 (statute -> while .)
    TRIANGLE        reduce using rule 34 (statute -> while .)
    RECTANGLE       reduce using rule 34 (statute -> while .)
    SQUARE          reduce using rule 34 (statute -> while .)
    CIRCLE          reduce using rule 34 (statute -> while .)
    POLIGON         reduce using rule 34 (statute -> while .)
    COLOR           reduce using rule 34 (statute -> while .)
    PENSIZE         reduce using rule 34 (statute -> while .)
    PENFORWARD      reduce using rule 34 (statute -> while .)
    PENBACK         reduce using rule 34 (statute -> while .)
    ROTATE          reduce using rule 34 (statute -> while .)
    WHILE           reduce using rule 34 (statute -> while .)
    RETURN          reduce using rule 34 (statute -> while .)
    PENON           reduce using rule 34 (statute -> while .)
    PENOFF          reduce using rule 34 (statute -> while .)
    RBRACE          reduce using rule 34 (statute -> while .)
    VAR             reduce using rule 34 (statute -> while .)


state 52

    (35) statute -> return .

    ID              reduce using rule 35 (statute -> return .)
    IF              reduce using rule 35 (statute -> return .)
    TRIANGLE        reduce using rule 35 (statute -> return .)
    RECTANGLE       reduce using rule 35 (statute -> return .)
    SQUARE          reduce using rule 35 (statute -> return .)
    CIRCLE          reduce using rule 35 (statute -> return .)
    POLIGON         reduce using rule 35 (statute -> return .)
    COLOR           reduce using rule 35 (statute -> return .)
    PENSIZE         reduce using rule 35 (statute -> return .)
    PENFORWARD      reduce using rule 35 (statute -> return .)
    PENBACK         reduce using rule 35 (statute -> return .)
    ROTATE          reduce using rule 35 (statute -> return .)
    WHILE           reduce using rule 35 (statute -> return .)
    RETURN          reduce using rule 35 (statute -> return .)
    PENON           reduce using rule 35 (statute -> return .)
    PENOFF          reduce using rule 35 (statute -> return .)
    RBRACE          reduce using rule 35 (statute -> return .)
    VAR             reduce using rule 35 (statute -> return .)


state 53

    (36) statute -> penon .

    ID              reduce using rule 36 (statute -> penon .)
    IF              reduce using rule 36 (statute -> penon .)
    TRIANGLE        reduce using rule 36 (statute -> penon .)
    RECTANGLE       reduce using rule 36 (statute -> penon .)
    SQUARE          reduce using rule 36 (statute -> penon .)
    CIRCLE          reduce using rule 36 (statute -> penon .)
    POLIGON         reduce using rule 36 (statute -> penon .)
    COLOR           reduce using rule 36 (statute -> penon .)
    PENSIZE         reduce using rule 36 (statute -> penon .)
    PENFORWARD      reduce using rule 36 (statute -> penon .)
    PENBACK         reduce using rule 36 (statute -> penon .)
    ROTATE          reduce using rule 36 (statute -> penon .)
    WHILE           reduce using rule 36 (statute -> penon .)
    RETURN          reduce using rule 36 (statute -> penon .)
    PENON           reduce using rule 36 (statute -> penon .)
    PENOFF          reduce using rule 36 (statute -> penon .)
    RBRACE          reduce using rule 36 (statute -> penon .)
    VAR             reduce using rule 36 (statute -> penon .)


state 54

    (37) statute -> penoff .

    ID              reduce using rule 37 (statute -> penoff .)
    IF              reduce using rule 37 (statute -> penoff .)
    TRIANGLE        reduce using rule 37 (statute -> penoff .)
    RECTANGLE       reduce using rule 37 (statute -> penoff .)
    SQUARE          reduce using rule 37 (statute -> penoff .)
    CIRCLE          reduce using rule 37 (statute -> penoff .)
    POLIGON         reduce using rule 37 (statute -> penoff .)
    COLOR           reduce using rule 37 (statute -> penoff .)
    PENSIZE         reduce using rule 37 (statute -> penoff .)
    PENFORWARD      reduce using rule 37 (statute -> penoff .)
    PENBACK         reduce using rule 37 (statute -> penoff .)
    ROTATE          reduce using rule 37 (statute -> penoff .)
    WHILE           reduce using rule 37 (statute -> penoff .)
    RETURN          reduce using rule 37 (statute -> penoff .)
    PENON           reduce using rule 37 (statute -> penoff .)
    PENOFF          reduce using rule 37 (statute -> penoff .)
    RBRACE          reduce using rule 37 (statute -> penoff .)
    VAR             reduce using rule 37 (statute -> penoff .)


state 55

    (39) assignment -> ID . ASSIGN expression SEMICOLON
    (40) assignment -> ID . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> ID . LPAREN call1 RPAREN SEMICOLON

    ASSIGN          shift and go to state 80
    LBRACKET        shift and go to state 81
    LPAREN          shift and go to state 82


state 56

    (83) condition -> IF . LPAREN expression RPAREN LBRACE b2 RBRACE condition1

    LPAREN          shift and go to state 83


state 57

    (61) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 58

    (62) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 59

    (60) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 60

    (59) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 61

    (63) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 62

    (58) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 63

    (66) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 64

    (67) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 65

    (68) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 66

    (64) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (65) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 67

    (38) while -> WHILE . LPAREN expression RPAREN LBRACE b2 RBRACE

    LPAREN          shift and go to state 94


state 68

    (112) return -> RETURN . var_cte SEMICOLON
    (113) return -> RETURN . st_cte SEMICOLON
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    STRING          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 95
    st_cte                         shift and go to state 96
    cte_bool                       shift and go to state 100
    call                           shift and go to state 101

state 69

    (69) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 70

    (70) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 71

    (49) funcs -> FUNC type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 107


state 72

    (50) funcs -> FUNC VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 108


state 73

    (13) vars2 -> vars2 type vars3 SEMICOLON .

    INT             reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    FLOAT           reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    STRING          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    BOOL            reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    FUNC            reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    DAVINCI         reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    ID              reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    IF              reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    SQUARE          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    POLIGON         reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    COLOR           reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    PENSIZE         reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    PENFORWARD      reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    PENBACK         reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    ROTATE          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    WHILE           reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    RETURN          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    PENON           reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    PENOFF          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    RBRACE          reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)
    VAR             reduce using rule 13 (vars2 -> vars2 type vars3 SEMICOLON .)


state 74

    (15) vars3 -> ID ASSIGN . expression vars4
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 109
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 75

    (17) vars3 -> ID vars4 .

    SEMICOLON       reduce using rule 17 (vars3 -> ID vars4 .)


state 76

    (16) vars3 -> ID list . vars4
    (18) vars4 -> . COMMA vars3
    (19) vars4 -> . empty
    (114) empty -> .

    COMMA           shift and go to state 78
    SEMICOLON       reduce using rule 114 (empty -> .)

    vars4                          shift and go to state 120
    empty                          shift and go to state 79

state 77

    (20) list -> LBRACKET . expression RBRACKET
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 121
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 78

    (18) vars4 -> COMMA . vars3
    (15) vars3 -> . ID ASSIGN expression vars4
    (16) vars3 -> . ID list vars4
    (17) vars3 -> . ID vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 122

state 79

    (19) vars4 -> empty .

    SEMICOLON       reduce using rule 19 (vars4 -> empty .)


state 80

    (39) assignment -> ID ASSIGN . expression SEMICOLON
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 123
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 81

    (40) assignment -> ID LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 124
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 82

    (108) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (109) call1 -> . ID COMMA call1
    (110) call1 -> . exp
    (111) call1 -> . st_cte
    (94) exp -> . term exp1
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (104) term -> . factor term1
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ID              shift and go to state 125
    STRING          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    LPAREN          shift and go to state 113
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    call1                          shift and go to state 126
    exp                            shift and go to state 127
    st_cte                         shift and go to state 128
    term                           shift and go to state 111
    cte_bool                       shift and go to state 129
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 83

    (83) condition -> IF LPAREN . expression RPAREN LBRACE b2 RBRACE condition1
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 130
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 84

    (61) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 131
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 85

    (62) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 132
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 86

    (60) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 133
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 87

    (59) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 134
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 88

    (63) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 135
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 89

    (58) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (41) color_cte -> . RED
    (42) color_cte -> . BLUE
    (43) color_cte -> . YELLOW
    (44) color_cte -> . GREEN
    (45) color_cte -> . PINK
    (46) color_cte -> . PURPLE

    RED             shift and go to state 137
    BLUE            shift and go to state 138
    YELLOW          shift and go to state 139
    GREEN           shift and go to state 140
    PINK            shift and go to state 141
    PURPLE          shift and go to state 142

    color_cte                      shift and go to state 136

state 90

    (66) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 143
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 91

    (67) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 144
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 92

    (68) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 145
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 93

    (64) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (65) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    CTE_STRING      shift and go to state 147
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 146
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 94

    (38) while -> WHILE LPAREN . expression RPAREN LBRACE b2 RBRACE
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 148
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 95

    (112) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 149


state 96

    (113) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 150


state 97

    (75) var_cte -> ID .
    (79) var_cte -> ID . list
    (108) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (20) list -> . LBRACKET expression RBRACKET

    SEMICOLON       reduce using rule 75 (var_cte -> ID .)
    DIVIDE          reduce using rule 75 (var_cte -> ID .)
    TIMES           reduce using rule 75 (var_cte -> ID .)
    MINUS           reduce using rule 75 (var_cte -> ID .)
    PLUS            reduce using rule 75 (var_cte -> ID .)
    LESSER          reduce using rule 75 (var_cte -> ID .)
    GREATER         reduce using rule 75 (var_cte -> ID .)
    EQUAL           reduce using rule 75 (var_cte -> ID .)
    NOTEQUAL        reduce using rule 75 (var_cte -> ID .)
    GREATEROREQUAL  reduce using rule 75 (var_cte -> ID .)
    LESSEROREQUAL   reduce using rule 75 (var_cte -> ID .)
    COMMA           reduce using rule 75 (var_cte -> ID .)
    RBRACKET        reduce using rule 75 (var_cte -> ID .)
    RPAREN          reduce using rule 75 (var_cte -> ID .)
    LPAREN          shift and go to state 82
    LBRACKET        shift and go to state 77

    list                           shift and go to state 151

state 98

    (76) var_cte -> CTE_INT .

    SEMICOLON       reduce using rule 76 (var_cte -> CTE_INT .)
    DIVIDE          reduce using rule 76 (var_cte -> CTE_INT .)
    TIMES           reduce using rule 76 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 76 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 76 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 76 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 76 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 76 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 76 (var_cte -> CTE_INT .)
    GREATEROREQUAL  reduce using rule 76 (var_cte -> CTE_INT .)
    LESSEROREQUAL   reduce using rule 76 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 76 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 76 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 76 (var_cte -> CTE_INT .)


state 99

    (77) var_cte -> CTE_FLOAT .

    SEMICOLON       reduce using rule 77 (var_cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 77 (var_cte -> CTE_FLOAT .)
    TIMES           reduce using rule 77 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 77 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 77 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 77 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 77 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 77 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 77 (var_cte -> CTE_FLOAT .)
    GREATEROREQUAL  reduce using rule 77 (var_cte -> CTE_FLOAT .)
    LESSEROREQUAL   reduce using rule 77 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 77 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 77 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 77 (var_cte -> CTE_FLOAT .)


state 100

    (78) var_cte -> cte_bool .
    (48) st_cte -> cte_bool .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 48 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 48 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 78 (var_cte -> cte_bool .) ]


state 101

    (80) var_cte -> call .

    SEMICOLON       reduce using rule 80 (var_cte -> call .)
    DIVIDE          reduce using rule 80 (var_cte -> call .)
    TIMES           reduce using rule 80 (var_cte -> call .)
    MINUS           reduce using rule 80 (var_cte -> call .)
    PLUS            reduce using rule 80 (var_cte -> call .)
    LESSER          reduce using rule 80 (var_cte -> call .)
    GREATER         reduce using rule 80 (var_cte -> call .)
    EQUAL           reduce using rule 80 (var_cte -> call .)
    NOTEQUAL        reduce using rule 80 (var_cte -> call .)
    GREATEROREQUAL  reduce using rule 80 (var_cte -> call .)
    LESSEROREQUAL   reduce using rule 80 (var_cte -> call .)
    COMMA           reduce using rule 80 (var_cte -> call .)
    RBRACKET        reduce using rule 80 (var_cte -> call .)
    RPAREN          reduce using rule 80 (var_cte -> call .)


state 102

    (47) st_cte -> STRING .

    SEMICOLON       reduce using rule 47 (st_cte -> STRING .)
    RPAREN          reduce using rule 47 (st_cte -> STRING .)


state 103

    (81) cte_bool -> TRUE .

    SEMICOLON       reduce using rule 81 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 81 (cte_bool -> TRUE .)
    TIMES           reduce using rule 81 (cte_bool -> TRUE .)
    MINUS           reduce using rule 81 (cte_bool -> TRUE .)
    PLUS            reduce using rule 81 (cte_bool -> TRUE .)
    LESSER          reduce using rule 81 (cte_bool -> TRUE .)
    GREATER         reduce using rule 81 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 81 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 81 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 81 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 81 (cte_bool -> TRUE .)
    COMMA           reduce using rule 81 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 81 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 81 (cte_bool -> TRUE .)


state 104

    (82) cte_bool -> FALSE .

    SEMICOLON       reduce using rule 82 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 82 (cte_bool -> FALSE .)
    TIMES           reduce using rule 82 (cte_bool -> FALSE .)
    MINUS           reduce using rule 82 (cte_bool -> FALSE .)
    PLUS            reduce using rule 82 (cte_bool -> FALSE .)
    LESSER          reduce using rule 82 (cte_bool -> FALSE .)
    GREATER         reduce using rule 82 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 82 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 82 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 82 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 82 (cte_bool -> FALSE .)
    COMMA           reduce using rule 82 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 82 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 82 (cte_bool -> FALSE .)


state 105

    (69) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 106

    (70) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 153


state 107

    (49) funcs -> FUNC type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> . funcs1 COMMA type ID
    (52) funcs1 -> . empty
    (114) empty -> .

    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    funcs1                         shift and go to state 154
    empty                          shift and go to state 155

state 108

    (50) funcs -> FUNC VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> . funcs1 COMMA type ID
    (52) funcs1 -> . empty
    (114) empty -> .

    RPAREN          reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)

    funcs1                         shift and go to state 156
    empty                          shift and go to state 155

state 109

    (15) vars3 -> ID ASSIGN expression . vars4
    (18) vars4 -> . COMMA vars3
    (19) vars4 -> . empty
    (114) empty -> .

    COMMA           shift and go to state 78
    SEMICOLON       reduce using rule 114 (empty -> .)

    vars4                          shift and go to state 157
    empty                          shift and go to state 79

state 110

    (86) expression -> exp . expression1
    (87) expression1 -> . LESSER exp
    (88) expression1 -> . GREATER exp
    (89) expression1 -> . EQUAL exp
    (90) expression1 -> . NOTEQUAL exp
    (91) expression1 -> . GREATEROREQUAL exp
    (92) expression1 -> . LESSEROREQUAL exp
    (93) expression1 -> . empty
    (114) empty -> .

    LESSER          shift and go to state 159
    GREATER         shift and go to state 160
    EQUAL           shift and go to state 161
    NOTEQUAL        shift and go to state 162
    GREATEROREQUAL  shift and go to state 163
    LESSEROREQUAL   shift and go to state 164
    COMMA           reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    RBRACKET        reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    expression1                    shift and go to state 158
    empty                          shift and go to state 165

state 111

    (94) exp -> term . exp1
    (95) exp1 -> . MINUS exp
    (96) exp1 -> . PLUS exp
    (97) exp1 -> . empty
    (114) empty -> .

    MINUS           shift and go to state 167
    PLUS            shift and go to state 168
    LESSER          reduce using rule 114 (empty -> .)
    GREATER         reduce using rule 114 (empty -> .)
    EQUAL           reduce using rule 114 (empty -> .)
    NOTEQUAL        reduce using rule 114 (empty -> .)
    GREATEROREQUAL  reduce using rule 114 (empty -> .)
    LESSEROREQUAL   reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    RBRACKET        reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    exp1                           shift and go to state 166
    empty                          shift and go to state 169

state 112

    (104) term -> factor . term1
    (105) term1 -> . DIVIDE term
    (106) term1 -> . TIMES term
    (107) term1 -> . empty
    (114) empty -> .

    DIVIDE          shift and go to state 171
    TIMES           shift and go to state 172
    MINUS           reduce using rule 114 (empty -> .)
    PLUS            reduce using rule 114 (empty -> .)
    LESSER          reduce using rule 114 (empty -> .)
    GREATER         reduce using rule 114 (empty -> .)
    EQUAL           reduce using rule 114 (empty -> .)
    NOTEQUAL        reduce using rule 114 (empty -> .)
    GREATEROREQUAL  reduce using rule 114 (empty -> .)
    LESSEROREQUAL   reduce using rule 114 (empty -> .)
    COMMA           reduce using rule 114 (empty -> .)
    SEMICOLON       reduce using rule 114 (empty -> .)
    RBRACKET        reduce using rule 114 (empty -> .)
    RPAREN          reduce using rule 114 (empty -> .)

    term1                          shift and go to state 170
    empty                          shift and go to state 173

state 113

    (98) factor -> LPAREN . expression RPAREN
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    expression                     shift and go to state 174
    exp                            shift and go to state 110
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 114

    (99) factor -> var_cte .

    DIVIDE          reduce using rule 99 (factor -> var_cte .)
    TIMES           reduce using rule 99 (factor -> var_cte .)
    MINUS           reduce using rule 99 (factor -> var_cte .)
    PLUS            reduce using rule 99 (factor -> var_cte .)
    LESSER          reduce using rule 99 (factor -> var_cte .)
    GREATER         reduce using rule 99 (factor -> var_cte .)
    EQUAL           reduce using rule 99 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 99 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 99 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 99 (factor -> var_cte .)
    COMMA           reduce using rule 99 (factor -> var_cte .)
    SEMICOLON       reduce using rule 99 (factor -> var_cte .)
    RBRACKET        reduce using rule 99 (factor -> var_cte .)
    RPAREN          reduce using rule 99 (factor -> var_cte .)


state 115

    (100) factor -> factor1 . var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

    var_cte                        shift and go to state 175
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101

state 116

    (78) var_cte -> cte_bool .

    DIVIDE          reduce using rule 78 (var_cte -> cte_bool .)
    TIMES           reduce using rule 78 (var_cte -> cte_bool .)
    MINUS           reduce using rule 78 (var_cte -> cte_bool .)
    PLUS            reduce using rule 78 (var_cte -> cte_bool .)
    LESSER          reduce using rule 78 (var_cte -> cte_bool .)
    GREATER         reduce using rule 78 (var_cte -> cte_bool .)
    EQUAL           reduce using rule 78 (var_cte -> cte_bool .)
    NOTEQUAL        reduce using rule 78 (var_cte -> cte_bool .)
    GREATEROREQUAL  reduce using rule 78 (var_cte -> cte_bool .)
    LESSEROREQUAL   reduce using rule 78 (var_cte -> cte_bool .)
    COMMA           reduce using rule 78 (var_cte -> cte_bool .)
    SEMICOLON       reduce using rule 78 (var_cte -> cte_bool .)
    RBRACKET        reduce using rule 78 (var_cte -> cte_bool .)
    RPAREN          reduce using rule 78 (var_cte -> cte_bool .)


state 117

    (101) factor1 -> MINUS .

    ID              reduce using rule 101 (factor1 -> MINUS .)
    CTE_INT         reduce using rule 101 (factor1 -> MINUS .)
    CTE_FLOAT       reduce using rule 101 (factor1 -> MINUS .)
    TRUE            reduce using rule 101 (factor1 -> MINUS .)
    FALSE           reduce using rule 101 (factor1 -> MINUS .)


state 118

    (102) factor1 -> PLUS .

    ID              reduce using rule 102 (factor1 -> PLUS .)
    CTE_INT         reduce using rule 102 (factor1 -> PLUS .)
    CTE_FLOAT       reduce using rule 102 (factor1 -> PLUS .)
    TRUE            reduce using rule 102 (factor1 -> PLUS .)
    FALSE           reduce using rule 102 (factor1 -> PLUS .)


state 119

    (103) factor1 -> empty .

    ID              reduce using rule 103 (factor1 -> empty .)
    CTE_INT         reduce using rule 103 (factor1 -> empty .)
    CTE_FLOAT       reduce using rule 103 (factor1 -> empty .)
    TRUE            reduce using rule 103 (factor1 -> empty .)
    FALSE           reduce using rule 103 (factor1 -> empty .)


state 120

    (16) vars3 -> ID list vars4 .

    SEMICOLON       reduce using rule 16 (vars3 -> ID list vars4 .)


state 121

    (20) list -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 176


state 122

    (18) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 18 (vars4 -> COMMA vars3 .)


state 123

    (39) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 177


state 124

    (40) assignment -> ID LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 178


state 125

    (109) call1 -> ID . COMMA call1
    (75) var_cte -> ID .
    (79) var_cte -> ID . list
    (108) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (20) list -> . LBRACKET expression RBRACKET

    COMMA           shift and go to state 179
    DIVIDE          reduce using rule 75 (var_cte -> ID .)
    TIMES           reduce using rule 75 (var_cte -> ID .)
    MINUS           reduce using rule 75 (var_cte -> ID .)
    PLUS            reduce using rule 75 (var_cte -> ID .)
    RPAREN          reduce using rule 75 (var_cte -> ID .)
    LPAREN          shift and go to state 82
    LBRACKET        shift and go to state 77

    list                           shift and go to state 151

state 126

    (108) call -> ID LPAREN call1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 127

    (110) call1 -> exp .

    RPAREN          reduce using rule 110 (call1 -> exp .)


state 128

    (111) call1 -> st_cte .

    RPAREN          reduce using rule 111 (call1 -> st_cte .)


state 129

    (48) st_cte -> cte_bool .
    (78) var_cte -> cte_bool .

  ! reduce/reduce conflict for RPAREN resolved using rule 48 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 48 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 78 (var_cte -> cte_bool .)
    TIMES           reduce using rule 78 (var_cte -> cte_bool .)
    MINUS           reduce using rule 78 (var_cte -> cte_bool .)
    PLUS            reduce using rule 78 (var_cte -> cte_bool .)

  ! RPAREN          [ reduce using rule 78 (var_cte -> cte_bool .) ]


state 130

    (83) condition -> IF LPAREN expression . RPAREN LBRACE b2 RBRACE condition1

    RPAREN          shift and go to state 181


state 131

    (61) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 182


state 132

    (62) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 183


state 133

    (60) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 134

    (59) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 135

    (63) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 186


state 136

    (58) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 137

    (41) color_cte -> RED .

    RPAREN          reduce using rule 41 (color_cte -> RED .)


state 138

    (42) color_cte -> BLUE .

    RPAREN          reduce using rule 42 (color_cte -> BLUE .)


state 139

    (43) color_cte -> YELLOW .

    RPAREN          reduce using rule 43 (color_cte -> YELLOW .)


state 140

    (44) color_cte -> GREEN .

    RPAREN          reduce using rule 44 (color_cte -> GREEN .)


state 141

    (45) color_cte -> PINK .

    RPAREN          reduce using rule 45 (color_cte -> PINK .)


state 142

    (46) color_cte -> PURPLE .

    RPAREN          reduce using rule 46 (color_cte -> PURPLE .)


state 143

    (66) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 144

    (67) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 145

    (68) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 146

    (64) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 147

    (65) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 192


state 148

    (38) while -> WHILE LPAREN expression . RPAREN LBRACE b2 RBRACE

    RPAREN          shift and go to state 193


state 149

    (112) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 112 (return -> RETURN var_cte SEMICOLON .)


state 150

    (113) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 113 (return -> RETURN st_cte SEMICOLON .)


state 151

    (79) var_cte -> ID list .

    SEMICOLON       reduce using rule 79 (var_cte -> ID list .)
    DIVIDE          reduce using rule 79 (var_cte -> ID list .)
    TIMES           reduce using rule 79 (var_cte -> ID list .)
    MINUS           reduce using rule 79 (var_cte -> ID list .)
    PLUS            reduce using rule 79 (var_cte -> ID list .)
    LESSER          reduce using rule 79 (var_cte -> ID list .)
    GREATER         reduce using rule 79 (var_cte -> ID list .)
    EQUAL           reduce using rule 79 (var_cte -> ID list .)
    NOTEQUAL        reduce using rule 79 (var_cte -> ID list .)
    GREATEROREQUAL  reduce using rule 79 (var_cte -> ID list .)
    LESSEROREQUAL   reduce using rule 79 (var_cte -> ID list .)
    COMMA           reduce using rule 79 (var_cte -> ID list .)
    RBRACKET        reduce using rule 79 (var_cte -> ID list .)
    RPAREN          reduce using rule 79 (var_cte -> ID list .)


state 152

    (69) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 153

    (70) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 154

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 196
    COMMA           shift and go to state 197


state 155

    (52) funcs1 -> empty .

    RPAREN          reduce using rule 52 (funcs1 -> empty .)
    COMMA           reduce using rule 52 (funcs1 -> empty .)


state 156

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 198
    COMMA           shift and go to state 197


state 157

    (15) vars3 -> ID ASSIGN expression vars4 .

    SEMICOLON       reduce using rule 15 (vars3 -> ID ASSIGN expression vars4 .)


state 158

    (86) expression -> exp expression1 .

    COMMA           reduce using rule 86 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 86 (expression -> exp expression1 .)
    RBRACKET        reduce using rule 86 (expression -> exp expression1 .)
    RPAREN          reduce using rule 86 (expression -> exp expression1 .)


state 159

    (87) expression1 -> LESSER . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 199
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 160

    (88) expression1 -> GREATER . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 200
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 161

    (89) expression1 -> EQUAL . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 201
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 162

    (90) expression1 -> NOTEQUAL . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 202
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 163

    (91) expression1 -> GREATEROREQUAL . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 203
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 164

    (92) expression1 -> LESSEROREQUAL . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 204
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 165

    (93) expression1 -> empty .

    COMMA           reduce using rule 93 (expression1 -> empty .)
    SEMICOLON       reduce using rule 93 (expression1 -> empty .)
    RBRACKET        reduce using rule 93 (expression1 -> empty .)
    RPAREN          reduce using rule 93 (expression1 -> empty .)


state 166

    (94) exp -> term exp1 .

    LESSER          reduce using rule 94 (exp -> term exp1 .)
    GREATER         reduce using rule 94 (exp -> term exp1 .)
    EQUAL           reduce using rule 94 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 94 (exp -> term exp1 .)
    GREATEROREQUAL  reduce using rule 94 (exp -> term exp1 .)
    LESSEROREQUAL   reduce using rule 94 (exp -> term exp1 .)
    COMMA           reduce using rule 94 (exp -> term exp1 .)
    SEMICOLON       reduce using rule 94 (exp -> term exp1 .)
    RBRACKET        reduce using rule 94 (exp -> term exp1 .)
    RPAREN          reduce using rule 94 (exp -> term exp1 .)


state 167

    (95) exp1 -> MINUS . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 205
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 168

    (96) exp1 -> PLUS . exp
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 206
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 169

    (97) exp1 -> empty .

    LESSER          reduce using rule 97 (exp1 -> empty .)
    GREATER         reduce using rule 97 (exp1 -> empty .)
    EQUAL           reduce using rule 97 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 97 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 97 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 97 (exp1 -> empty .)
    COMMA           reduce using rule 97 (exp1 -> empty .)
    SEMICOLON       reduce using rule 97 (exp1 -> empty .)
    RBRACKET        reduce using rule 97 (exp1 -> empty .)
    RPAREN          reduce using rule 97 (exp1 -> empty .)


state 170

    (104) term -> factor term1 .

    MINUS           reduce using rule 104 (term -> factor term1 .)
    PLUS            reduce using rule 104 (term -> factor term1 .)
    LESSER          reduce using rule 104 (term -> factor term1 .)
    GREATER         reduce using rule 104 (term -> factor term1 .)
    EQUAL           reduce using rule 104 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 104 (term -> factor term1 .)
    GREATEROREQUAL  reduce using rule 104 (term -> factor term1 .)
    LESSEROREQUAL   reduce using rule 104 (term -> factor term1 .)
    COMMA           reduce using rule 104 (term -> factor term1 .)
    SEMICOLON       reduce using rule 104 (term -> factor term1 .)
    RBRACKET        reduce using rule 104 (term -> factor term1 .)
    RPAREN          reduce using rule 104 (term -> factor term1 .)


state 171

    (105) term1 -> DIVIDE . term
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    term                           shift and go to state 207
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 172

    (106) term1 -> TIMES . term
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    term                           shift and go to state 208
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 173

    (107) term1 -> empty .

    MINUS           reduce using rule 107 (term1 -> empty .)
    PLUS            reduce using rule 107 (term1 -> empty .)
    LESSER          reduce using rule 107 (term1 -> empty .)
    GREATER         reduce using rule 107 (term1 -> empty .)
    EQUAL           reduce using rule 107 (term1 -> empty .)
    NOTEQUAL        reduce using rule 107 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 107 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 107 (term1 -> empty .)
    COMMA           reduce using rule 107 (term1 -> empty .)
    SEMICOLON       reduce using rule 107 (term1 -> empty .)
    RBRACKET        reduce using rule 107 (term1 -> empty .)
    RPAREN          reduce using rule 107 (term1 -> empty .)


state 174

    (98) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 209


state 175

    (100) factor -> factor1 var_cte .

    DIVIDE          reduce using rule 100 (factor -> factor1 var_cte .)
    TIMES           reduce using rule 100 (factor -> factor1 var_cte .)
    MINUS           reduce using rule 100 (factor -> factor1 var_cte .)
    PLUS            reduce using rule 100 (factor -> factor1 var_cte .)
    LESSER          reduce using rule 100 (factor -> factor1 var_cte .)
    GREATER         reduce using rule 100 (factor -> factor1 var_cte .)
    EQUAL           reduce using rule 100 (factor -> factor1 var_cte .)
    NOTEQUAL        reduce using rule 100 (factor -> factor1 var_cte .)
    GREATEROREQUAL  reduce using rule 100 (factor -> factor1 var_cte .)
    LESSEROREQUAL   reduce using rule 100 (factor -> factor1 var_cte .)
    COMMA           reduce using rule 100 (factor -> factor1 var_cte .)
    SEMICOLON       reduce using rule 100 (factor -> factor1 var_cte .)
    RBRACKET        reduce using rule 100 (factor -> factor1 var_cte .)
    RPAREN          reduce using rule 100 (factor -> factor1 var_cte .)


state 176

    (20) list -> LBRACKET expression RBRACKET .

    COMMA           reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    LESSER          reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    GREATER         reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    EQUAL           reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    NOTEQUAL        reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    GREATEROREQUAL  reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    LESSEROREQUAL   reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 20 (list -> LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 20 (list -> LBRACKET expression RBRACKET .)


state 177

    (39) assignment -> ID ASSIGN expression SEMICOLON .

    ID              reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)


state 178

    (40) assignment -> ID LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 210


state 179

    (109) call1 -> ID COMMA . call1
    (109) call1 -> . ID COMMA call1
    (110) call1 -> . exp
    (111) call1 -> . st_cte
    (94) exp -> . term exp1
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (104) term -> . factor term1
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    ID              shift and go to state 125
    STRING          shift and go to state 102
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104
    LPAREN          shift and go to state 113
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    call1                          shift and go to state 211
    exp                            shift and go to state 127
    st_cte                         shift and go to state 128
    term                           shift and go to state 111
    cte_bool                       shift and go to state 129
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 180

    (108) call -> ID LPAREN call1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 212


state 181

    (83) condition -> IF LPAREN expression RPAREN . LBRACE b2 RBRACE condition1

    LBRACE          shift and go to state 213


state 182

    (61) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 214
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 183

    (62) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 215
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 184

    (60) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 185

    (59) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 186

    (63) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 218
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 187

    (58) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 188

    (66) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 220


state 189

    (67) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 221


state 190

    (68) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 191

    (64) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 192

    (65) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 193

    (38) while -> WHILE LPAREN expression RPAREN . LBRACE b2 RBRACE

    LBRACE          shift and go to state 225


state 194

    (69) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 195

    (70) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 196

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 226


state 197

    (51) funcs1 -> funcs1 COMMA . type ID
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . STRING
    (74) type -> . BOOL

    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING          shift and go to state 18
    BOOL            shift and go to state 19

    type                           shift and go to state 227

state 198

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 228


state 199

    (87) expression1 -> LESSER exp .

    COMMA           reduce using rule 87 (expression1 -> LESSER exp .)
    SEMICOLON       reduce using rule 87 (expression1 -> LESSER exp .)
    RBRACKET        reduce using rule 87 (expression1 -> LESSER exp .)
    RPAREN          reduce using rule 87 (expression1 -> LESSER exp .)


state 200

    (88) expression1 -> GREATER exp .

    COMMA           reduce using rule 88 (expression1 -> GREATER exp .)
    SEMICOLON       reduce using rule 88 (expression1 -> GREATER exp .)
    RBRACKET        reduce using rule 88 (expression1 -> GREATER exp .)
    RPAREN          reduce using rule 88 (expression1 -> GREATER exp .)


state 201

    (89) expression1 -> EQUAL exp .

    COMMA           reduce using rule 89 (expression1 -> EQUAL exp .)
    SEMICOLON       reduce using rule 89 (expression1 -> EQUAL exp .)
    RBRACKET        reduce using rule 89 (expression1 -> EQUAL exp .)
    RPAREN          reduce using rule 89 (expression1 -> EQUAL exp .)


state 202

    (90) expression1 -> NOTEQUAL exp .

    COMMA           reduce using rule 90 (expression1 -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 90 (expression1 -> NOTEQUAL exp .)
    RBRACKET        reduce using rule 90 (expression1 -> NOTEQUAL exp .)
    RPAREN          reduce using rule 90 (expression1 -> NOTEQUAL exp .)


state 203

    (91) expression1 -> GREATEROREQUAL exp .

    COMMA           reduce using rule 91 (expression1 -> GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 91 (expression1 -> GREATEROREQUAL exp .)
    RBRACKET        reduce using rule 91 (expression1 -> GREATEROREQUAL exp .)
    RPAREN          reduce using rule 91 (expression1 -> GREATEROREQUAL exp .)


state 204

    (92) expression1 -> LESSEROREQUAL exp .

    COMMA           reduce using rule 92 (expression1 -> LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 92 (expression1 -> LESSEROREQUAL exp .)
    RBRACKET        reduce using rule 92 (expression1 -> LESSEROREQUAL exp .)
    RPAREN          reduce using rule 92 (expression1 -> LESSEROREQUAL exp .)


state 205

    (95) exp1 -> MINUS exp .

    LESSER          reduce using rule 95 (exp1 -> MINUS exp .)
    GREATER         reduce using rule 95 (exp1 -> MINUS exp .)
    EQUAL           reduce using rule 95 (exp1 -> MINUS exp .)
    NOTEQUAL        reduce using rule 95 (exp1 -> MINUS exp .)
    GREATEROREQUAL  reduce using rule 95 (exp1 -> MINUS exp .)
    LESSEROREQUAL   reduce using rule 95 (exp1 -> MINUS exp .)
    COMMA           reduce using rule 95 (exp1 -> MINUS exp .)
    SEMICOLON       reduce using rule 95 (exp1 -> MINUS exp .)
    RBRACKET        reduce using rule 95 (exp1 -> MINUS exp .)
    RPAREN          reduce using rule 95 (exp1 -> MINUS exp .)


state 206

    (96) exp1 -> PLUS exp .

    LESSER          reduce using rule 96 (exp1 -> PLUS exp .)
    GREATER         reduce using rule 96 (exp1 -> PLUS exp .)
    EQUAL           reduce using rule 96 (exp1 -> PLUS exp .)
    NOTEQUAL        reduce using rule 96 (exp1 -> PLUS exp .)
    GREATEROREQUAL  reduce using rule 96 (exp1 -> PLUS exp .)
    LESSEROREQUAL   reduce using rule 96 (exp1 -> PLUS exp .)
    COMMA           reduce using rule 96 (exp1 -> PLUS exp .)
    SEMICOLON       reduce using rule 96 (exp1 -> PLUS exp .)
    RBRACKET        reduce using rule 96 (exp1 -> PLUS exp .)
    RPAREN          reduce using rule 96 (exp1 -> PLUS exp .)


state 207

    (105) term1 -> DIVIDE term .

    MINUS           reduce using rule 105 (term1 -> DIVIDE term .)
    PLUS            reduce using rule 105 (term1 -> DIVIDE term .)
    LESSER          reduce using rule 105 (term1 -> DIVIDE term .)
    GREATER         reduce using rule 105 (term1 -> DIVIDE term .)
    EQUAL           reduce using rule 105 (term1 -> DIVIDE term .)
    NOTEQUAL        reduce using rule 105 (term1 -> DIVIDE term .)
    GREATEROREQUAL  reduce using rule 105 (term1 -> DIVIDE term .)
    LESSEROREQUAL   reduce using rule 105 (term1 -> DIVIDE term .)
    COMMA           reduce using rule 105 (term1 -> DIVIDE term .)
    SEMICOLON       reduce using rule 105 (term1 -> DIVIDE term .)
    RBRACKET        reduce using rule 105 (term1 -> DIVIDE term .)
    RPAREN          reduce using rule 105 (term1 -> DIVIDE term .)


state 208

    (106) term1 -> TIMES term .

    MINUS           reduce using rule 106 (term1 -> TIMES term .)
    PLUS            reduce using rule 106 (term1 -> TIMES term .)
    LESSER          reduce using rule 106 (term1 -> TIMES term .)
    GREATER         reduce using rule 106 (term1 -> TIMES term .)
    EQUAL           reduce using rule 106 (term1 -> TIMES term .)
    NOTEQUAL        reduce using rule 106 (term1 -> TIMES term .)
    GREATEROREQUAL  reduce using rule 106 (term1 -> TIMES term .)
    LESSEROREQUAL   reduce using rule 106 (term1 -> TIMES term .)
    COMMA           reduce using rule 106 (term1 -> TIMES term .)
    SEMICOLON       reduce using rule 106 (term1 -> TIMES term .)
    RBRACKET        reduce using rule 106 (term1 -> TIMES term .)
    RPAREN          reduce using rule 106 (term1 -> TIMES term .)


state 209

    (98) factor -> LPAREN expression RPAREN .

    DIVIDE          reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    LESSER          reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    GREATER         reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    EQUAL           reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    NOTEQUAL        reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    GREATEROREQUAL  reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    LESSEROREQUAL   reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 98 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 98 (factor -> LPAREN expression RPAREN .)


state 210

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (86) expression -> . exp expression1
    (94) exp -> . term exp1
    (104) term -> . factor term1
    (98) factor -> . LPAREN expression RPAREN
    (99) factor -> . var_cte
    (100) factor -> . factor1 var_cte
    (75) var_cte -> . ID
    (76) var_cte -> . CTE_INT
    (77) var_cte -> . CTE_FLOAT
    (78) var_cte -> . cte_bool
    (79) var_cte -> . ID list
    (80) var_cte -> . call
    (101) factor1 -> . MINUS
    (102) factor1 -> . PLUS
    (103) factor1 -> . empty
    (81) cte_bool -> . TRUE
    (82) cte_bool -> . FALSE
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (114) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
    LPAREN          shift and go to state 113
    ID              shift and go to state 97
    CTE_INT         shift and go to state 98
    CTE_FLOAT       shift and go to state 99
    MINUS           shift and go to state 117
    PLUS            shift and go to state 118
    TRUE            shift and go to state 103
    FALSE           shift and go to state 104

  ! ID              [ reduce using rule 114 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 114 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 114 (empty -> .) ]
  ! TRUE            [ reduce using rule 114 (empty -> .) ]
  ! FALSE           [ reduce using rule 114 (empty -> .) ]

    exp                            shift and go to state 110
    expression                     shift and go to state 229
    term                           shift and go to state 111
    factor                         shift and go to state 112
    var_cte                        shift and go to state 114
    factor1                        shift and go to state 115
    cte_bool                       shift and go to state 116
    call                           shift and go to state 101
    empty                          shift and go to state 119

state 211

    (109) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 109 (call1 -> ID COMMA call1 .)


state 212

    (108) call -> ID LPAREN call1 RPAREN SEMICOLON .

    ID              reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    IF              reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SQUARE          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    POLIGON         reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COLOR           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENBACK         reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ROTATE          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENON           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENOFF          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TIMES           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    MINUS           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PLUS            reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSER          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATER         reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    EQUAL           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COMMA           reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    VAR             reduce using rule 108 (call -> ID LPAREN call1 RPAREN SEMICOLON .)


state 213

    (83) condition -> IF LPAREN expression RPAREN LBRACE . b2 RBRACE condition1
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)

    b2                             shift and go to state 230
    empty                          shift and go to state 30

state 214

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 231


state 215

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 232


state 216

    (60) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 217

    (59) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 218

    (63) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 233


state 219

    (58) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 220

    (66) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 221

    (67) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 222

    (68) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 223

    (64) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 224

    (65) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 225

    (38) while -> WHILE LPAREN expression RPAREN LBRACE . b2 RBRACE
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)

    b2                             shift and go to state 234
    empty                          shift and go to state 30

state 226

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (53) funcs2 -> . funcs2 vars
    (54) funcs2 -> . funcs2 statute
    (55) funcs2 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)

    funcs2                         shift and go to state 235
    empty                          shift and go to state 236

state 227

    (51) funcs1 -> funcs1 COMMA type . ID

    ID              shift and go to state 237


state 228

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (53) funcs2 -> . funcs2 vars
    (54) funcs2 -> . funcs2 statute
    (55) funcs2 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)

    funcs2                         shift and go to state 238
    empty                          shift and go to state 236

state 229

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 239


state 230

    (83) condition -> IF LPAREN expression RPAREN LBRACE b2 . RBRACE condition1
    (10) b2 -> b2 . statute
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 240
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    statute                        shift and go to state 37
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 231

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 241


state 232

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 242


state 233

    (63) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 234

    (38) while -> WHILE LPAREN expression RPAREN LBRACE b2 . RBRACE
    (10) b2 -> b2 . statute
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 244
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    statute                        shift and go to state 37
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 235

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (53) funcs2 -> funcs2 . vars
    (54) funcs2 -> funcs2 . statute
    (12) vars -> . VAR vars2
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 245
    VAR             shift and go to state 10
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    vars                           shift and go to state 246
    statute                        shift and go to state 247
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 236

    (55) funcs2 -> empty .

    RBRACE          reduce using rule 55 (funcs2 -> empty .)
    VAR             reduce using rule 55 (funcs2 -> empty .)
    ID              reduce using rule 55 (funcs2 -> empty .)
    IF              reduce using rule 55 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 55 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 55 (funcs2 -> empty .)
    SQUARE          reduce using rule 55 (funcs2 -> empty .)
    CIRCLE          reduce using rule 55 (funcs2 -> empty .)
    POLIGON         reduce using rule 55 (funcs2 -> empty .)
    COLOR           reduce using rule 55 (funcs2 -> empty .)
    PENSIZE         reduce using rule 55 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 55 (funcs2 -> empty .)
    PENBACK         reduce using rule 55 (funcs2 -> empty .)
    ROTATE          reduce using rule 55 (funcs2 -> empty .)
    WHILE           reduce using rule 55 (funcs2 -> empty .)
    RETURN          reduce using rule 55 (funcs2 -> empty .)
    PENON           reduce using rule 55 (funcs2 -> empty .)
    PENOFF          reduce using rule 55 (funcs2 -> empty .)


state 237

    (51) funcs1 -> funcs1 COMMA type ID .

    RPAREN          reduce using rule 51 (funcs1 -> funcs1 COMMA type ID .)
    COMMA           reduce using rule 51 (funcs1 -> funcs1 COMMA type ID .)


state 238

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (53) funcs2 -> funcs2 . vars
    (54) funcs2 -> funcs2 . statute
    (12) vars -> . VAR vars2
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 248
    VAR             shift and go to state 10
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    vars                           shift and go to state 246
    statute                        shift and go to state 247
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 239

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 240

    (83) condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE . condition1
    (84) condition1 -> . ELSE LBRACE b2 RBRACE
    (85) condition1 -> . empty
    (114) empty -> .

    ELSE            shift and go to state 250
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)
    RBRACE          reduce using rule 114 (empty -> .)
    VAR             reduce using rule 114 (empty -> .)

    condition1                     shift and go to state 249
    empty                          shift and go to state 251

state 241

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 242

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 243

    (63) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 244

    (38) while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .

    ID              reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    IF              reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    COLOR           reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    WHILE           reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RETURN          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENON           reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    VAR             reduce using rule 38 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)


state 245

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (56) funcs3 -> . funcs
    (57) funcs3 -> . empty
    (49) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (114) empty -> .

    FUNC            shift and go to state 9
    VAR             reduce using rule 114 (empty -> .)
    DAVINCI         reduce using rule 114 (empty -> .)

    funcs3                         shift and go to state 252
    funcs                          shift and go to state 253
    empty                          shift and go to state 254

state 246

    (53) funcs2 -> funcs2 vars .

    RBRACE          reduce using rule 53 (funcs2 -> funcs2 vars .)
    VAR             reduce using rule 53 (funcs2 -> funcs2 vars .)
    ID              reduce using rule 53 (funcs2 -> funcs2 vars .)
    IF              reduce using rule 53 (funcs2 -> funcs2 vars .)
    TRIANGLE        reduce using rule 53 (funcs2 -> funcs2 vars .)
    RECTANGLE       reduce using rule 53 (funcs2 -> funcs2 vars .)
    SQUARE          reduce using rule 53 (funcs2 -> funcs2 vars .)
    CIRCLE          reduce using rule 53 (funcs2 -> funcs2 vars .)
    POLIGON         reduce using rule 53 (funcs2 -> funcs2 vars .)
    COLOR           reduce using rule 53 (funcs2 -> funcs2 vars .)
    PENSIZE         reduce using rule 53 (funcs2 -> funcs2 vars .)
    PENFORWARD      reduce using rule 53 (funcs2 -> funcs2 vars .)
    PENBACK         reduce using rule 53 (funcs2 -> funcs2 vars .)
    ROTATE          reduce using rule 53 (funcs2 -> funcs2 vars .)
    WHILE           reduce using rule 53 (funcs2 -> funcs2 vars .)
    RETURN          reduce using rule 53 (funcs2 -> funcs2 vars .)
    PENON           reduce using rule 53 (funcs2 -> funcs2 vars .)
    PENOFF          reduce using rule 53 (funcs2 -> funcs2 vars .)


state 247

    (54) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 54 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 54 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 54 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 54 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 54 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 54 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 54 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 54 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 54 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 54 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 54 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 54 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 54 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 54 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 54 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 54 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 54 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 54 (funcs2 -> funcs2 statute .)


state 248

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (56) funcs3 -> . funcs
    (57) funcs3 -> . empty
    (49) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (114) empty -> .

    FUNC            shift and go to state 9
    VAR             reduce using rule 114 (empty -> .)
    DAVINCI         reduce using rule 114 (empty -> .)

    funcs3                         shift and go to state 255
    funcs                          shift and go to state 253
    empty                          shift and go to state 254

state 249

    (83) condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .

    ID              reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    IF              reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    TRIANGLE        reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RECTANGLE       reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    SQUARE          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    CIRCLE          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    POLIGON         reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    COLOR           reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENSIZE         reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENFORWARD      reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENBACK         reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    ROTATE          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    WHILE           reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RETURN          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENON           reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENOFF          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RBRACE          reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    VAR             reduce using rule 83 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)


state 250

    (84) condition1 -> ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 256


state 251

    (85) condition1 -> empty .

    ID              reduce using rule 85 (condition1 -> empty .)
    IF              reduce using rule 85 (condition1 -> empty .)
    TRIANGLE        reduce using rule 85 (condition1 -> empty .)
    RECTANGLE       reduce using rule 85 (condition1 -> empty .)
    SQUARE          reduce using rule 85 (condition1 -> empty .)
    CIRCLE          reduce using rule 85 (condition1 -> empty .)
    POLIGON         reduce using rule 85 (condition1 -> empty .)
    COLOR           reduce using rule 85 (condition1 -> empty .)
    PENSIZE         reduce using rule 85 (condition1 -> empty .)
    PENFORWARD      reduce using rule 85 (condition1 -> empty .)
    PENBACK         reduce using rule 85 (condition1 -> empty .)
    ROTATE          reduce using rule 85 (condition1 -> empty .)
    WHILE           reduce using rule 85 (condition1 -> empty .)
    RETURN          reduce using rule 85 (condition1 -> empty .)
    PENON           reduce using rule 85 (condition1 -> empty .)
    PENOFF          reduce using rule 85 (condition1 -> empty .)
    RBRACE          reduce using rule 85 (condition1 -> empty .)
    VAR             reduce using rule 85 (condition1 -> empty .)


state 252

    (49) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 49 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 49 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 253

    (56) funcs3 -> funcs .

    VAR             reduce using rule 56 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 56 (funcs3 -> funcs .)


state 254

    (57) funcs3 -> empty .

    VAR             reduce using rule 57 (funcs3 -> empty .)
    DAVINCI         reduce using rule 57 (funcs3 -> empty .)


state 255

    (50) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 50 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 50 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 256

    (84) condition1 -> ELSE LBRACE . b2 RBRACE
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (114) empty -> .

    RBRACE          reduce using rule 114 (empty -> .)
    ID              reduce using rule 114 (empty -> .)
    IF              reduce using rule 114 (empty -> .)
    TRIANGLE        reduce using rule 114 (empty -> .)
    RECTANGLE       reduce using rule 114 (empty -> .)
    SQUARE          reduce using rule 114 (empty -> .)
    CIRCLE          reduce using rule 114 (empty -> .)
    POLIGON         reduce using rule 114 (empty -> .)
    COLOR           reduce using rule 114 (empty -> .)
    PENSIZE         reduce using rule 114 (empty -> .)
    PENFORWARD      reduce using rule 114 (empty -> .)
    PENBACK         reduce using rule 114 (empty -> .)
    ROTATE          reduce using rule 114 (empty -> .)
    WHILE           reduce using rule 114 (empty -> .)
    RETURN          reduce using rule 114 (empty -> .)
    PENON           reduce using rule 114 (empty -> .)
    PENOFF          reduce using rule 114 (empty -> .)

    b2                             shift and go to state 257
    empty                          shift and go to state 30

state 257

    (84) condition1 -> ELSE LBRACE b2 . RBRACE
    (10) b2 -> b2 . statute
    (21) statute -> . assignment
    (22) statute -> . call
    (23) statute -> . condition
    (24) statute -> . triangle
    (25) statute -> . rectangle
    (26) statute -> . square
    (27) statute -> . circle
    (28) statute -> . poligon
    (29) statute -> . color
    (30) statute -> . pensize
    (31) statute -> . penforward
    (32) statute -> . penback
    (33) statute -> . rotate
    (34) statute -> . while
    (35) statute -> . return
    (36) statute -> . penon
    (37) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (108) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (83) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (38) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (112) return -> . RETURN var_cte SEMICOLON
    (113) return -> . RETURN st_cte SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 258
    ID              shift and go to state 55
    IF              shift and go to state 56
    TRIANGLE        shift and go to state 57
    RECTANGLE       shift and go to state 58
    SQUARE          shift and go to state 59
    CIRCLE          shift and go to state 60
    POLIGON         shift and go to state 61
    COLOR           shift and go to state 62
    PENSIZE         shift and go to state 63
    PENFORWARD      shift and go to state 64
    PENBACK         shift and go to state 65
    ROTATE          shift and go to state 66
    WHILE           shift and go to state 67
    RETURN          shift and go to state 68
    PENON           shift and go to state 69
    PENOFF          shift and go to state 70

    statute                        shift and go to state 37
    assignment                     shift and go to state 38
    call                           shift and go to state 39
    condition                      shift and go to state 40
    triangle                       shift and go to state 41
    rectangle                      shift and go to state 42
    square                         shift and go to state 43
    circle                         shift and go to state 44
    poligon                        shift and go to state 45
    color                          shift and go to state 46
    pensize                        shift and go to state 47
    penforward                     shift and go to state 48
    penback                        shift and go to state 49
    rotate                         shift and go to state 50
    while                          shift and go to state 51
    return                         shift and go to state 52
    penon                          shift and go to state 53
    penoff                         shift and go to state 54

state 258

    (84) condition1 -> ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 84 (condition1 -> ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 74 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 74 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 74 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 77 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 77 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 77 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 77 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 77 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 80 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 81 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 81 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 81 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 81 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 81 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 82 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 82 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 83 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 83 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 84 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 84 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 85 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 85 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 86 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 86 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 87 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 87 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 87 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 87 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 87 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 88 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 88 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 88 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 90 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 90 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 90 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 91 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 91 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 91 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 92 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 92 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 92 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 92 resolved as shift
WARNING: shift/reduce conflict for ID in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 93 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 93 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 93 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 93 resolved as shift
WARNING: shift/reduce conflict for ID in state 94 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 94 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 94 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 94 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 94 resolved as shift
WARNING: shift/reduce conflict for ID in state 113 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 113 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 113 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 113 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 113 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 159 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 160 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 161 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 161 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 161 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 162 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 162 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 163 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 163 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 164 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 164 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 167 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 167 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 168 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 168 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 171 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 171 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 171 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 172 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 172 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 179 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 179 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 179 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 182 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 182 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 182 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 183 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 183 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 183 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 186 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 186 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 186 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 186 resolved as shift
WARNING: shift/reduce conflict for ID in state 210 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 210 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 210 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 210 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 210 resolved as shift
WARNING: reduce/reduce conflict in state 100 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 100
WARNING: reduce/reduce conflict in state 129 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 129
