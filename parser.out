Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    LIST
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block
Rule 2     fillmain -> <empty>
Rule 3     gotomain -> <empty>
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     save_funcs -> <empty>
Rule 8     global_vars -> <empty>
Rule 9     block -> LBRACE b1 RBRACE
Rule 10    b1 -> vars local_vars b2
Rule 11    b1 -> b2
Rule 12    local_vars -> <empty>
Rule 13    b2 -> b2 statute
Rule 14    b2 -> empty
Rule 15    vars -> VAR vars2
Rule 16    vars2 -> type save_type vars3 SEMICOLON vars2
Rule 17    vars2 -> empty
Rule 18    vars3 -> ID ASSIGN expression saveassign vars4
Rule 19    vars3 -> ID list savelist vars4
Rule 20    vars3 -> ID saveid vars4
Rule 21    savelist -> <empty>
Rule 22    saveassign -> <empty>
Rule 23    saveid -> <empty>
Rule 24    vars4 -> COMMA vars3
Rule 25    vars4 -> empty
Rule 26    save_type -> <empty>
Rule 27    list -> LBRACKET CTE_INT RBRACKET
Rule 28    statute -> assignment
Rule 29    statute -> call
Rule 30    statute -> condition
Rule 31    statute -> triangle
Rule 32    statute -> rectangle
Rule 33    statute -> square
Rule 34    statute -> circle
Rule 35    statute -> poligon
Rule 36    statute -> color
Rule 37    statute -> pensize
Rule 38    statute -> penforward
Rule 39    statute -> penback
Rule 40    statute -> rotate
Rule 41    statute -> while
Rule 42    statute -> return
Rule 43    statute -> penon
Rule 44    statute -> penoff
Rule 45    while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
Rule 46    while_return -> <empty>
Rule 47    end_while -> <empty>
Rule 48    assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON
Rule 49    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 50    verify_id -> <empty>
Rule 51    set_value -> <empty>
Rule 52    cte_id -> <empty>
Rule 53    color_cte -> RED
Rule 54    color_cte -> BLUE
Rule 55    color_cte -> YELLOW
Rule 56    color_cte -> GREEN
Rule 57    color_cte -> PINK
Rule 58    color_cte -> PURPLE
Rule 59    st_cte -> STRING
Rule 60    st_cte -> cte_bool
Rule 61    funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 62    funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 63    funcs1 -> funcs1 COMMA type ID
Rule 64    funcs1 -> empty
Rule 65    funcs2 -> funcs2 vars
Rule 66    funcs2 -> funcs2 statute
Rule 67    funcs2 -> empty
Rule 68    funcs3 -> funcs
Rule 69    funcs3 -> empty
Rule 70    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 71    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 72    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 73    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 74    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 75    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 76    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 77    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 78    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 79    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 80    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 81    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 82    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 83    type -> INT
Rule 84    type -> FLOAT
Rule 85    type -> STRING
Rule 86    type -> BOOL
Rule 87    getarrayvalue -> <empty>
Rule 88    getcallvalue -> <empty>
Rule 89    cte_bool -> TRUE
Rule 90    cte_bool -> FALSE
Rule 91    condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 92    condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 93    condition1 -> empty
Rule 94    type_check -> <empty>
Rule 95    gotoElse -> <empty>
Rule 96    end_if -> <empty>
Rule 97    expression -> exp expression1
Rule 98    expression1 -> LESSER relop exp top_relop
Rule 99    expression1 -> GREATER relop exp top_relop
Rule 100   expression1 -> EQUAL relop exp top_relop
Rule 101   expression1 -> NOTEQUAL relop exp top_relop
Rule 102   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 103   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 104   expression1 -> empty
Rule 105   exp -> term top_exp exp1
Rule 106   exp1 -> MINUS push_sign exp
Rule 107   exp1 -> PLUS push_sign exp
Rule 108   exp1 -> empty
Rule 109   top_exp -> <empty>
Rule 110   term -> factor top_factor term1
Rule 111   term1 -> DIVIDE push_sign term
Rule 112   term1 -> TIMES push_sign term
Rule 113   term1 -> empty
Rule 114   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 115   factor -> var_cte
Rule 116   factor -> ID push_id
Rule 117   top_factor -> <empty>
Rule 118   var_cte -> ID getidvalue
Rule 119   var_cte -> CTE_INT getvalue_i
Rule 120   var_cte -> CTE_FLOAT getvalue_f
Rule 121   var_cte -> cte_bool getvalue_b
Rule 122   var_cte -> ID list getarrayvalue
Rule 123   var_cte -> call getcallvalue
Rule 124   getidvalue -> <empty>
Rule 125   getvalue_i -> <empty>
Rule 126   getvalue_f -> <empty>
Rule 127   getvalue_b -> <empty>
Rule 128   relop -> <empty>
Rule 129   top_relop -> <empty>
Rule 130   push_sign -> <empty>
Rule 131   false_bottom -> <empty>
Rule 132   end_par -> <empty>
Rule 133   push_id -> <empty>
Rule 134   call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
Rule 135   check_name -> <empty>
Rule 136   create_era -> <empty>
Rule 137   gosub -> <empty>
Rule 138   call1 -> ID COMMA call1
Rule 139   call1 -> exp
Rule 140   call1 -> st_cte
Rule 141   return -> RETURN var_cte SEMICOLON
Rule 142   return -> RETURN st_cte SEMICOLON
Rule 143   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 18 48 49
BLUE                 : 54
BOOL                 : 86
CIRCLE               : 71
COLOR                : 70
COMMA                : 24 63 73 74 75 138
CTE_BOOL             : 
CTE_FLOAT            : 120
CTE_INT              : 27 119
CTE_STRING           : 77
DAVINCI              : 1
DIVIDE               : 111
ELSE                 : 92
EQUAL                : 100
EXPRESSION           : 
FALSE                : 90
FLOAT                : 84
FUNC                 : 61 62
GREATER              : 99
GREATEROREQUAL       : 102
GREEN                : 56
ID                   : 1 18 19 20 48 49 61 61 62 62 63 116 118 122 134 138
IF                   : 91
INT                  : 83
LBRACE               : 9 45 61 62 91 92
LBRACKET             : 27 49
LESSER               : 98
LESSEROREQUAL        : 103
LIST                 : 
LPAREN               : 45 61 62 70 71 72 73 74 75 76 77 78 79 80 81 82 91 114 134
MINUS                : 106
NOT                  : 
NOTEQUAL             : 101
OR                   : 
PENBACK              : 80
PENFORWARD           : 79
PENOFF               : 82
PENON                : 81
PENSIZE              : 78
PINK                 : 57
PLUS                 : 107
POLIGON              : 75
PROGRAM              : 1
PURPLE               : 58
RBRACE               : 9 45 61 62 91 92
RBRACKET             : 27 49
RECTANGLE            : 74
RED                  : 53
RETURN               : 141 142
ROTATE               : 76 77
RPAREN               : 45 61 62 70 71 72 73 74 75 76 77 78 79 80 81 82 91 114 134
SEMICOLON            : 1 16 48 49 70 71 72 73 74 75 76 77 78 79 80 81 82 134 141 142
SIZE                 : 
SQUARE               : 72
STRING               : 59 85
ST_CTE               : 
TERM                 : 
TIMES                : 112
TRIANGLE             : 73
TRUE                 : 89
VAR                  : 15
VOID                 : 62
WHILE                : 45
YELLOW               : 55
error                : 

Nonterminals, with rules where they appear

assignment           : 28
b1                   : 9
b2                   : 10 11 13 45 91 92
block                : 1
call                 : 29 123
call1                : 134 138
check_name           : 134
circle               : 34
color                : 36
color_cte            : 70
condition            : 30
condition1           : 91
create_era           : 134
cte_bool             : 60 121
cte_id               : 49
empty                : 6 14 17 25 64 67 69 93 104 108 113
end_if               : 91
end_par              : 114
end_while            : 45
exp                  : 49 71 72 73 73 74 74 75 75 76 78 79 80 97 98 99 100 101 102 103 106 107 139
exp1                 : 105
expression           : 18 45 48 49 91 114
expression1          : 97
factor               : 110
false_bottom         : 114
fillmain             : 1
funcs                : 4 68
funcs1               : 61 62 63
funcs2               : 61 62 65 66
funcs3               : 61 62
getarrayvalue        : 122
getcallvalue         : 123
getidvalue           : 118
getvalue_b           : 121
getvalue_f           : 120
getvalue_i           : 119
global_vars          : 5
gosub                : 134
gotoElse             : 92
gotomain             : 1
list                 : 19 122
local_vars           : 10
penback              : 39
penforward           : 38
penoff               : 44
penon                : 43
pensize              : 37
poligon              : 35
program              : 0
program1             : 1 4 5
push_id              : 116
push_sign            : 48 106 107 111 112
rectangle            : 32
relop                : 98 99 100 101 102 103
return               : 42
rotate               : 40
save_funcs           : 4
save_type            : 16
saveassign           : 18
saveid               : 20
savelist             : 19
set_value            : 48
square               : 33
st_cte               : 140 142
statute              : 13 66
term                 : 105 111 112
term1                : 110
top_exp              : 105
top_factor           : 110
top_relop            : 98 99 100 101 102 103
triangle             : 31
type                 : 16 61 61 62 63
type_check           : 45 91
var_cte              : 115 141
vars                 : 5 10 65
vars2                : 15 16
vars3                : 16 24
vars4                : 18 19 20
verify_id            : 48
while                : 41
while_return         : 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 DAVINCI fillmain block
    (3) gotomain -> .

    DAVINCI         reduce using rule 3 (gotomain -> .)
    FUNC            reduce using rule 3 (gotomain -> .)
    VAR             reduce using rule 3 (gotomain -> .)

    gotomain                       shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (143) empty -> .

    DAVINCI         reduce using rule 143 (empty -> .)
    FUNC            reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)

    program1                       shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (61) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (62) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (15) vars -> . VAR vars2

    DAVINCI         shift and go to state 8
    FUNC            shift and go to state 11
    VAR             shift and go to state 12

    funcs                          shift and go to state 9
    vars                           shift and go to state 10

state 7

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)
    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI . fillmain block
    (2) fillmain -> .

    LBRACE          reduce using rule 2 (fillmain -> .)

    fillmain                       shift and go to state 13

state 9

    (4) program1 -> program1 funcs . save_funcs
    (7) save_funcs -> .

    DAVINCI         reduce using rule 7 (save_funcs -> .)
    FUNC            reduce using rule 7 (save_funcs -> .)
    VAR             reduce using rule 7 (save_funcs -> .)

    save_funcs                     shift and go to state 14

state 10

    (5) program1 -> program1 vars . global_vars
    (8) global_vars -> .

    DAVINCI         reduce using rule 8 (global_vars -> .)
    FUNC            reduce using rule 8 (global_vars -> .)
    VAR             reduce using rule 8 (global_vars -> .)

    global_vars                    shift and go to state 15

state 11

    (61) funcs -> FUNC . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (62) funcs -> FUNC . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 16

state 12

    (15) vars -> VAR . vars2
    (16) vars2 -> . type save_type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL
    (143) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 143 (empty -> .)
    FUNC            reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)
    RBRACE          reduce using rule 143 (empty -> .)

    vars2                          shift and go to state 22
    type                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain . block
    (9) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 25

state 14

    (4) program1 -> program1 funcs save_funcs .

    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 15

    (5) program1 -> program1 vars global_vars .

    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)
    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)


state 16

    (61) funcs -> FUNC type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 27


state 17

    (62) funcs -> FUNC VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 28


state 18

    (83) type -> INT .

    ID              reduce using rule 83 (type -> INT .)


state 19

    (84) type -> FLOAT .

    ID              reduce using rule 84 (type -> FLOAT .)


state 20

    (85) type -> STRING .

    ID              reduce using rule 85 (type -> STRING .)


state 21

    (86) type -> BOOL .

    ID              reduce using rule 86 (type -> BOOL .)


state 22

    (15) vars -> VAR vars2 .

    DAVINCI         reduce using rule 15 (vars -> VAR vars2 .)
    FUNC            reduce using rule 15 (vars -> VAR vars2 .)
    VAR             reduce using rule 15 (vars -> VAR vars2 .)
    ID              reduce using rule 15 (vars -> VAR vars2 .)
    IF              reduce using rule 15 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 15 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 15 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 15 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 15 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 15 (vars -> VAR vars2 .)
    COLOR           reduce using rule 15 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 15 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 15 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 15 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 15 (vars -> VAR vars2 .)
    WHILE           reduce using rule 15 (vars -> VAR vars2 .)
    RETURN          reduce using rule 15 (vars -> VAR vars2 .)
    PENON           reduce using rule 15 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 15 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 15 (vars -> VAR vars2 .)


state 23

    (16) vars2 -> type . save_type vars3 SEMICOLON vars2
    (26) save_type -> .

    ID              reduce using rule 26 (save_type -> .)

    save_type                      shift and go to state 29

state 24

    (17) vars2 -> empty .

    DAVINCI         reduce using rule 17 (vars2 -> empty .)
    FUNC            reduce using rule 17 (vars2 -> empty .)
    VAR             reduce using rule 17 (vars2 -> empty .)
    ID              reduce using rule 17 (vars2 -> empty .)
    IF              reduce using rule 17 (vars2 -> empty .)
    TRIANGLE        reduce using rule 17 (vars2 -> empty .)
    RECTANGLE       reduce using rule 17 (vars2 -> empty .)
    SQUARE          reduce using rule 17 (vars2 -> empty .)
    CIRCLE          reduce using rule 17 (vars2 -> empty .)
    POLIGON         reduce using rule 17 (vars2 -> empty .)
    COLOR           reduce using rule 17 (vars2 -> empty .)
    PENSIZE         reduce using rule 17 (vars2 -> empty .)
    PENFORWARD      reduce using rule 17 (vars2 -> empty .)
    PENBACK         reduce using rule 17 (vars2 -> empty .)
    ROTATE          reduce using rule 17 (vars2 -> empty .)
    WHILE           reduce using rule 17 (vars2 -> empty .)
    RETURN          reduce using rule 17 (vars2 -> empty .)
    PENON           reduce using rule 17 (vars2 -> empty .)
    PENOFF          reduce using rule 17 (vars2 -> empty .)
    RBRACE          reduce using rule 17 (vars2 -> empty .)


state 25

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .)


state 26

    (9) block -> LBRACE . b1 RBRACE
    (10) b1 -> . vars local_vars b2
    (11) b1 -> . b2
    (15) vars -> . VAR vars2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (143) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)
    RBRACE          reduce using rule 143 (empty -> .)

    b1                             shift and go to state 30
    vars                           shift and go to state 31
    b2                             shift and go to state 32
    empty                          shift and go to state 33

state 27

    (61) funcs -> FUNC type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 34


state 28

    (62) funcs -> FUNC VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 35


state 29

    (16) vars2 -> type save_type . vars3 SEMICOLON vars2
    (18) vars3 -> . ID ASSIGN expression saveassign vars4
    (19) vars3 -> . ID list savelist vars4
    (20) vars3 -> . ID saveid vars4

    ID              shift and go to state 37

    vars3                          shift and go to state 36

state 30

    (9) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 38


state 31

    (10) b1 -> vars . local_vars b2
    (12) local_vars -> .

    ID              reduce using rule 12 (local_vars -> .)
    IF              reduce using rule 12 (local_vars -> .)
    TRIANGLE        reduce using rule 12 (local_vars -> .)
    RECTANGLE       reduce using rule 12 (local_vars -> .)
    SQUARE          reduce using rule 12 (local_vars -> .)
    CIRCLE          reduce using rule 12 (local_vars -> .)
    POLIGON         reduce using rule 12 (local_vars -> .)
    COLOR           reduce using rule 12 (local_vars -> .)
    PENSIZE         reduce using rule 12 (local_vars -> .)
    PENFORWARD      reduce using rule 12 (local_vars -> .)
    PENBACK         reduce using rule 12 (local_vars -> .)
    ROTATE          reduce using rule 12 (local_vars -> .)
    WHILE           reduce using rule 12 (local_vars -> .)
    RETURN          reduce using rule 12 (local_vars -> .)
    PENON           reduce using rule 12 (local_vars -> .)
    PENOFF          reduce using rule 12 (local_vars -> .)
    RBRACE          reduce using rule 12 (local_vars -> .)

    local_vars                     shift and go to state 39

state 32

    (11) b1 -> b2 .
    (13) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 11 (b1 -> b2 .)
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 33

    (14) b2 -> empty .

    ID              reduce using rule 14 (b2 -> empty .)
    IF              reduce using rule 14 (b2 -> empty .)
    TRIANGLE        reduce using rule 14 (b2 -> empty .)
    RECTANGLE       reduce using rule 14 (b2 -> empty .)
    SQUARE          reduce using rule 14 (b2 -> empty .)
    CIRCLE          reduce using rule 14 (b2 -> empty .)
    POLIGON         reduce using rule 14 (b2 -> empty .)
    COLOR           reduce using rule 14 (b2 -> empty .)
    PENSIZE         reduce using rule 14 (b2 -> empty .)
    PENFORWARD      reduce using rule 14 (b2 -> empty .)
    PENBACK         reduce using rule 14 (b2 -> empty .)
    ROTATE          reduce using rule 14 (b2 -> empty .)
    WHILE           reduce using rule 14 (b2 -> empty .)
    RETURN          reduce using rule 14 (b2 -> empty .)
    PENON           reduce using rule 14 (b2 -> empty .)
    PENOFF          reduce using rule 14 (b2 -> empty .)
    RBRACE          reduce using rule 14 (b2 -> empty .)


state 34

    (61) funcs -> FUNC type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 74

state 35

    (62) funcs -> FUNC VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 75

state 36

    (16) vars2 -> type save_type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 76


state 37

    (18) vars3 -> ID . ASSIGN expression saveassign vars4
    (19) vars3 -> ID . list savelist vars4
    (20) vars3 -> ID . saveid vars4
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (23) saveid -> .

    ASSIGN          shift and go to state 77
    LBRACKET        shift and go to state 80
    COMMA           reduce using rule 23 (saveid -> .)
    SEMICOLON       reduce using rule 23 (saveid -> .)

    list                           shift and go to state 78
    saveid                         shift and go to state 79

state 38

    (9) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 9 (block -> LBRACE b1 RBRACE .)


state 39

    (10) b1 -> vars local_vars . b2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (143) empty -> .

    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)
    RBRACE          reduce using rule 143 (empty -> .)

    b2                             shift and go to state 81
    empty                          shift and go to state 33

state 40

    (13) b2 -> b2 statute .

    ID              reduce using rule 13 (b2 -> b2 statute .)
    IF              reduce using rule 13 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 13 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 13 (b2 -> b2 statute .)
    SQUARE          reduce using rule 13 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 13 (b2 -> b2 statute .)
    POLIGON         reduce using rule 13 (b2 -> b2 statute .)
    COLOR           reduce using rule 13 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 13 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 13 (b2 -> b2 statute .)
    PENBACK         reduce using rule 13 (b2 -> b2 statute .)
    ROTATE          reduce using rule 13 (b2 -> b2 statute .)
    WHILE           reduce using rule 13 (b2 -> b2 statute .)
    RETURN          reduce using rule 13 (b2 -> b2 statute .)
    PENON           reduce using rule 13 (b2 -> b2 statute .)
    PENOFF          reduce using rule 13 (b2 -> b2 statute .)
    RBRACE          reduce using rule 13 (b2 -> b2 statute .)


state 41

    (28) statute -> assignment .

    ID              reduce using rule 28 (statute -> assignment .)
    IF              reduce using rule 28 (statute -> assignment .)
    TRIANGLE        reduce using rule 28 (statute -> assignment .)
    RECTANGLE       reduce using rule 28 (statute -> assignment .)
    SQUARE          reduce using rule 28 (statute -> assignment .)
    CIRCLE          reduce using rule 28 (statute -> assignment .)
    POLIGON         reduce using rule 28 (statute -> assignment .)
    COLOR           reduce using rule 28 (statute -> assignment .)
    PENSIZE         reduce using rule 28 (statute -> assignment .)
    PENFORWARD      reduce using rule 28 (statute -> assignment .)
    PENBACK         reduce using rule 28 (statute -> assignment .)
    ROTATE          reduce using rule 28 (statute -> assignment .)
    WHILE           reduce using rule 28 (statute -> assignment .)
    RETURN          reduce using rule 28 (statute -> assignment .)
    PENON           reduce using rule 28 (statute -> assignment .)
    PENOFF          reduce using rule 28 (statute -> assignment .)
    RBRACE          reduce using rule 28 (statute -> assignment .)
    VAR             reduce using rule 28 (statute -> assignment .)


state 42

    (29) statute -> call .

    ID              reduce using rule 29 (statute -> call .)
    IF              reduce using rule 29 (statute -> call .)
    TRIANGLE        reduce using rule 29 (statute -> call .)
    RECTANGLE       reduce using rule 29 (statute -> call .)
    SQUARE          reduce using rule 29 (statute -> call .)
    CIRCLE          reduce using rule 29 (statute -> call .)
    POLIGON         reduce using rule 29 (statute -> call .)
    COLOR           reduce using rule 29 (statute -> call .)
    PENSIZE         reduce using rule 29 (statute -> call .)
    PENFORWARD      reduce using rule 29 (statute -> call .)
    PENBACK         reduce using rule 29 (statute -> call .)
    ROTATE          reduce using rule 29 (statute -> call .)
    WHILE           reduce using rule 29 (statute -> call .)
    RETURN          reduce using rule 29 (statute -> call .)
    PENON           reduce using rule 29 (statute -> call .)
    PENOFF          reduce using rule 29 (statute -> call .)
    RBRACE          reduce using rule 29 (statute -> call .)
    VAR             reduce using rule 29 (statute -> call .)


state 43

    (30) statute -> condition .

    ID              reduce using rule 30 (statute -> condition .)
    IF              reduce using rule 30 (statute -> condition .)
    TRIANGLE        reduce using rule 30 (statute -> condition .)
    RECTANGLE       reduce using rule 30 (statute -> condition .)
    SQUARE          reduce using rule 30 (statute -> condition .)
    CIRCLE          reduce using rule 30 (statute -> condition .)
    POLIGON         reduce using rule 30 (statute -> condition .)
    COLOR           reduce using rule 30 (statute -> condition .)
    PENSIZE         reduce using rule 30 (statute -> condition .)
    PENFORWARD      reduce using rule 30 (statute -> condition .)
    PENBACK         reduce using rule 30 (statute -> condition .)
    ROTATE          reduce using rule 30 (statute -> condition .)
    WHILE           reduce using rule 30 (statute -> condition .)
    RETURN          reduce using rule 30 (statute -> condition .)
    PENON           reduce using rule 30 (statute -> condition .)
    PENOFF          reduce using rule 30 (statute -> condition .)
    RBRACE          reduce using rule 30 (statute -> condition .)
    VAR             reduce using rule 30 (statute -> condition .)


state 44

    (31) statute -> triangle .

    ID              reduce using rule 31 (statute -> triangle .)
    IF              reduce using rule 31 (statute -> triangle .)
    TRIANGLE        reduce using rule 31 (statute -> triangle .)
    RECTANGLE       reduce using rule 31 (statute -> triangle .)
    SQUARE          reduce using rule 31 (statute -> triangle .)
    CIRCLE          reduce using rule 31 (statute -> triangle .)
    POLIGON         reduce using rule 31 (statute -> triangle .)
    COLOR           reduce using rule 31 (statute -> triangle .)
    PENSIZE         reduce using rule 31 (statute -> triangle .)
    PENFORWARD      reduce using rule 31 (statute -> triangle .)
    PENBACK         reduce using rule 31 (statute -> triangle .)
    ROTATE          reduce using rule 31 (statute -> triangle .)
    WHILE           reduce using rule 31 (statute -> triangle .)
    RETURN          reduce using rule 31 (statute -> triangle .)
    PENON           reduce using rule 31 (statute -> triangle .)
    PENOFF          reduce using rule 31 (statute -> triangle .)
    RBRACE          reduce using rule 31 (statute -> triangle .)
    VAR             reduce using rule 31 (statute -> triangle .)


state 45

    (32) statute -> rectangle .

    ID              reduce using rule 32 (statute -> rectangle .)
    IF              reduce using rule 32 (statute -> rectangle .)
    TRIANGLE        reduce using rule 32 (statute -> rectangle .)
    RECTANGLE       reduce using rule 32 (statute -> rectangle .)
    SQUARE          reduce using rule 32 (statute -> rectangle .)
    CIRCLE          reduce using rule 32 (statute -> rectangle .)
    POLIGON         reduce using rule 32 (statute -> rectangle .)
    COLOR           reduce using rule 32 (statute -> rectangle .)
    PENSIZE         reduce using rule 32 (statute -> rectangle .)
    PENFORWARD      reduce using rule 32 (statute -> rectangle .)
    PENBACK         reduce using rule 32 (statute -> rectangle .)
    ROTATE          reduce using rule 32 (statute -> rectangle .)
    WHILE           reduce using rule 32 (statute -> rectangle .)
    RETURN          reduce using rule 32 (statute -> rectangle .)
    PENON           reduce using rule 32 (statute -> rectangle .)
    PENOFF          reduce using rule 32 (statute -> rectangle .)
    RBRACE          reduce using rule 32 (statute -> rectangle .)
    VAR             reduce using rule 32 (statute -> rectangle .)


state 46

    (33) statute -> square .

    ID              reduce using rule 33 (statute -> square .)
    IF              reduce using rule 33 (statute -> square .)
    TRIANGLE        reduce using rule 33 (statute -> square .)
    RECTANGLE       reduce using rule 33 (statute -> square .)
    SQUARE          reduce using rule 33 (statute -> square .)
    CIRCLE          reduce using rule 33 (statute -> square .)
    POLIGON         reduce using rule 33 (statute -> square .)
    COLOR           reduce using rule 33 (statute -> square .)
    PENSIZE         reduce using rule 33 (statute -> square .)
    PENFORWARD      reduce using rule 33 (statute -> square .)
    PENBACK         reduce using rule 33 (statute -> square .)
    ROTATE          reduce using rule 33 (statute -> square .)
    WHILE           reduce using rule 33 (statute -> square .)
    RETURN          reduce using rule 33 (statute -> square .)
    PENON           reduce using rule 33 (statute -> square .)
    PENOFF          reduce using rule 33 (statute -> square .)
    RBRACE          reduce using rule 33 (statute -> square .)
    VAR             reduce using rule 33 (statute -> square .)


state 47

    (34) statute -> circle .

    ID              reduce using rule 34 (statute -> circle .)
    IF              reduce using rule 34 (statute -> circle .)
    TRIANGLE        reduce using rule 34 (statute -> circle .)
    RECTANGLE       reduce using rule 34 (statute -> circle .)
    SQUARE          reduce using rule 34 (statute -> circle .)
    CIRCLE          reduce using rule 34 (statute -> circle .)
    POLIGON         reduce using rule 34 (statute -> circle .)
    COLOR           reduce using rule 34 (statute -> circle .)
    PENSIZE         reduce using rule 34 (statute -> circle .)
    PENFORWARD      reduce using rule 34 (statute -> circle .)
    PENBACK         reduce using rule 34 (statute -> circle .)
    ROTATE          reduce using rule 34 (statute -> circle .)
    WHILE           reduce using rule 34 (statute -> circle .)
    RETURN          reduce using rule 34 (statute -> circle .)
    PENON           reduce using rule 34 (statute -> circle .)
    PENOFF          reduce using rule 34 (statute -> circle .)
    RBRACE          reduce using rule 34 (statute -> circle .)
    VAR             reduce using rule 34 (statute -> circle .)


state 48

    (35) statute -> poligon .

    ID              reduce using rule 35 (statute -> poligon .)
    IF              reduce using rule 35 (statute -> poligon .)
    TRIANGLE        reduce using rule 35 (statute -> poligon .)
    RECTANGLE       reduce using rule 35 (statute -> poligon .)
    SQUARE          reduce using rule 35 (statute -> poligon .)
    CIRCLE          reduce using rule 35 (statute -> poligon .)
    POLIGON         reduce using rule 35 (statute -> poligon .)
    COLOR           reduce using rule 35 (statute -> poligon .)
    PENSIZE         reduce using rule 35 (statute -> poligon .)
    PENFORWARD      reduce using rule 35 (statute -> poligon .)
    PENBACK         reduce using rule 35 (statute -> poligon .)
    ROTATE          reduce using rule 35 (statute -> poligon .)
    WHILE           reduce using rule 35 (statute -> poligon .)
    RETURN          reduce using rule 35 (statute -> poligon .)
    PENON           reduce using rule 35 (statute -> poligon .)
    PENOFF          reduce using rule 35 (statute -> poligon .)
    RBRACE          reduce using rule 35 (statute -> poligon .)
    VAR             reduce using rule 35 (statute -> poligon .)


state 49

    (36) statute -> color .

    ID              reduce using rule 36 (statute -> color .)
    IF              reduce using rule 36 (statute -> color .)
    TRIANGLE        reduce using rule 36 (statute -> color .)
    RECTANGLE       reduce using rule 36 (statute -> color .)
    SQUARE          reduce using rule 36 (statute -> color .)
    CIRCLE          reduce using rule 36 (statute -> color .)
    POLIGON         reduce using rule 36 (statute -> color .)
    COLOR           reduce using rule 36 (statute -> color .)
    PENSIZE         reduce using rule 36 (statute -> color .)
    PENFORWARD      reduce using rule 36 (statute -> color .)
    PENBACK         reduce using rule 36 (statute -> color .)
    ROTATE          reduce using rule 36 (statute -> color .)
    WHILE           reduce using rule 36 (statute -> color .)
    RETURN          reduce using rule 36 (statute -> color .)
    PENON           reduce using rule 36 (statute -> color .)
    PENOFF          reduce using rule 36 (statute -> color .)
    RBRACE          reduce using rule 36 (statute -> color .)
    VAR             reduce using rule 36 (statute -> color .)


state 50

    (37) statute -> pensize .

    ID              reduce using rule 37 (statute -> pensize .)
    IF              reduce using rule 37 (statute -> pensize .)
    TRIANGLE        reduce using rule 37 (statute -> pensize .)
    RECTANGLE       reduce using rule 37 (statute -> pensize .)
    SQUARE          reduce using rule 37 (statute -> pensize .)
    CIRCLE          reduce using rule 37 (statute -> pensize .)
    POLIGON         reduce using rule 37 (statute -> pensize .)
    COLOR           reduce using rule 37 (statute -> pensize .)
    PENSIZE         reduce using rule 37 (statute -> pensize .)
    PENFORWARD      reduce using rule 37 (statute -> pensize .)
    PENBACK         reduce using rule 37 (statute -> pensize .)
    ROTATE          reduce using rule 37 (statute -> pensize .)
    WHILE           reduce using rule 37 (statute -> pensize .)
    RETURN          reduce using rule 37 (statute -> pensize .)
    PENON           reduce using rule 37 (statute -> pensize .)
    PENOFF          reduce using rule 37 (statute -> pensize .)
    RBRACE          reduce using rule 37 (statute -> pensize .)
    VAR             reduce using rule 37 (statute -> pensize .)


state 51

    (38) statute -> penforward .

    ID              reduce using rule 38 (statute -> penforward .)
    IF              reduce using rule 38 (statute -> penforward .)
    TRIANGLE        reduce using rule 38 (statute -> penforward .)
    RECTANGLE       reduce using rule 38 (statute -> penforward .)
    SQUARE          reduce using rule 38 (statute -> penforward .)
    CIRCLE          reduce using rule 38 (statute -> penforward .)
    POLIGON         reduce using rule 38 (statute -> penforward .)
    COLOR           reduce using rule 38 (statute -> penforward .)
    PENSIZE         reduce using rule 38 (statute -> penforward .)
    PENFORWARD      reduce using rule 38 (statute -> penforward .)
    PENBACK         reduce using rule 38 (statute -> penforward .)
    ROTATE          reduce using rule 38 (statute -> penforward .)
    WHILE           reduce using rule 38 (statute -> penforward .)
    RETURN          reduce using rule 38 (statute -> penforward .)
    PENON           reduce using rule 38 (statute -> penforward .)
    PENOFF          reduce using rule 38 (statute -> penforward .)
    RBRACE          reduce using rule 38 (statute -> penforward .)
    VAR             reduce using rule 38 (statute -> penforward .)


state 52

    (39) statute -> penback .

    ID              reduce using rule 39 (statute -> penback .)
    IF              reduce using rule 39 (statute -> penback .)
    TRIANGLE        reduce using rule 39 (statute -> penback .)
    RECTANGLE       reduce using rule 39 (statute -> penback .)
    SQUARE          reduce using rule 39 (statute -> penback .)
    CIRCLE          reduce using rule 39 (statute -> penback .)
    POLIGON         reduce using rule 39 (statute -> penback .)
    COLOR           reduce using rule 39 (statute -> penback .)
    PENSIZE         reduce using rule 39 (statute -> penback .)
    PENFORWARD      reduce using rule 39 (statute -> penback .)
    PENBACK         reduce using rule 39 (statute -> penback .)
    ROTATE          reduce using rule 39 (statute -> penback .)
    WHILE           reduce using rule 39 (statute -> penback .)
    RETURN          reduce using rule 39 (statute -> penback .)
    PENON           reduce using rule 39 (statute -> penback .)
    PENOFF          reduce using rule 39 (statute -> penback .)
    RBRACE          reduce using rule 39 (statute -> penback .)
    VAR             reduce using rule 39 (statute -> penback .)


state 53

    (40) statute -> rotate .

    ID              reduce using rule 40 (statute -> rotate .)
    IF              reduce using rule 40 (statute -> rotate .)
    TRIANGLE        reduce using rule 40 (statute -> rotate .)
    RECTANGLE       reduce using rule 40 (statute -> rotate .)
    SQUARE          reduce using rule 40 (statute -> rotate .)
    CIRCLE          reduce using rule 40 (statute -> rotate .)
    POLIGON         reduce using rule 40 (statute -> rotate .)
    COLOR           reduce using rule 40 (statute -> rotate .)
    PENSIZE         reduce using rule 40 (statute -> rotate .)
    PENFORWARD      reduce using rule 40 (statute -> rotate .)
    PENBACK         reduce using rule 40 (statute -> rotate .)
    ROTATE          reduce using rule 40 (statute -> rotate .)
    WHILE           reduce using rule 40 (statute -> rotate .)
    RETURN          reduce using rule 40 (statute -> rotate .)
    PENON           reduce using rule 40 (statute -> rotate .)
    PENOFF          reduce using rule 40 (statute -> rotate .)
    RBRACE          reduce using rule 40 (statute -> rotate .)
    VAR             reduce using rule 40 (statute -> rotate .)


state 54

    (41) statute -> while .

    ID              reduce using rule 41 (statute -> while .)
    IF              reduce using rule 41 (statute -> while .)
    TRIANGLE        reduce using rule 41 (statute -> while .)
    RECTANGLE       reduce using rule 41 (statute -> while .)
    SQUARE          reduce using rule 41 (statute -> while .)
    CIRCLE          reduce using rule 41 (statute -> while .)
    POLIGON         reduce using rule 41 (statute -> while .)
    COLOR           reduce using rule 41 (statute -> while .)
    PENSIZE         reduce using rule 41 (statute -> while .)
    PENFORWARD      reduce using rule 41 (statute -> while .)
    PENBACK         reduce using rule 41 (statute -> while .)
    ROTATE          reduce using rule 41 (statute -> while .)
    WHILE           reduce using rule 41 (statute -> while .)
    RETURN          reduce using rule 41 (statute -> while .)
    PENON           reduce using rule 41 (statute -> while .)
    PENOFF          reduce using rule 41 (statute -> while .)
    RBRACE          reduce using rule 41 (statute -> while .)
    VAR             reduce using rule 41 (statute -> while .)


state 55

    (42) statute -> return .

    ID              reduce using rule 42 (statute -> return .)
    IF              reduce using rule 42 (statute -> return .)
    TRIANGLE        reduce using rule 42 (statute -> return .)
    RECTANGLE       reduce using rule 42 (statute -> return .)
    SQUARE          reduce using rule 42 (statute -> return .)
    CIRCLE          reduce using rule 42 (statute -> return .)
    POLIGON         reduce using rule 42 (statute -> return .)
    COLOR           reduce using rule 42 (statute -> return .)
    PENSIZE         reduce using rule 42 (statute -> return .)
    PENFORWARD      reduce using rule 42 (statute -> return .)
    PENBACK         reduce using rule 42 (statute -> return .)
    ROTATE          reduce using rule 42 (statute -> return .)
    WHILE           reduce using rule 42 (statute -> return .)
    RETURN          reduce using rule 42 (statute -> return .)
    PENON           reduce using rule 42 (statute -> return .)
    PENOFF          reduce using rule 42 (statute -> return .)
    RBRACE          reduce using rule 42 (statute -> return .)
    VAR             reduce using rule 42 (statute -> return .)


state 56

    (43) statute -> penon .

    ID              reduce using rule 43 (statute -> penon .)
    IF              reduce using rule 43 (statute -> penon .)
    TRIANGLE        reduce using rule 43 (statute -> penon .)
    RECTANGLE       reduce using rule 43 (statute -> penon .)
    SQUARE          reduce using rule 43 (statute -> penon .)
    CIRCLE          reduce using rule 43 (statute -> penon .)
    POLIGON         reduce using rule 43 (statute -> penon .)
    COLOR           reduce using rule 43 (statute -> penon .)
    PENSIZE         reduce using rule 43 (statute -> penon .)
    PENFORWARD      reduce using rule 43 (statute -> penon .)
    PENBACK         reduce using rule 43 (statute -> penon .)
    ROTATE          reduce using rule 43 (statute -> penon .)
    WHILE           reduce using rule 43 (statute -> penon .)
    RETURN          reduce using rule 43 (statute -> penon .)
    PENON           reduce using rule 43 (statute -> penon .)
    PENOFF          reduce using rule 43 (statute -> penon .)
    RBRACE          reduce using rule 43 (statute -> penon .)
    VAR             reduce using rule 43 (statute -> penon .)


state 57

    (44) statute -> penoff .

    ID              reduce using rule 44 (statute -> penoff .)
    IF              reduce using rule 44 (statute -> penoff .)
    TRIANGLE        reduce using rule 44 (statute -> penoff .)
    RECTANGLE       reduce using rule 44 (statute -> penoff .)
    SQUARE          reduce using rule 44 (statute -> penoff .)
    CIRCLE          reduce using rule 44 (statute -> penoff .)
    POLIGON         reduce using rule 44 (statute -> penoff .)
    COLOR           reduce using rule 44 (statute -> penoff .)
    PENSIZE         reduce using rule 44 (statute -> penoff .)
    PENFORWARD      reduce using rule 44 (statute -> penoff .)
    PENBACK         reduce using rule 44 (statute -> penoff .)
    ROTATE          reduce using rule 44 (statute -> penoff .)
    WHILE           reduce using rule 44 (statute -> penoff .)
    RETURN          reduce using rule 44 (statute -> penoff .)
    PENON           reduce using rule 44 (statute -> penoff .)
    PENOFF          reduce using rule 44 (statute -> penoff .)
    RBRACE          reduce using rule 44 (statute -> penoff .)
    VAR             reduce using rule 44 (statute -> penoff .)


state 58

    (48) assignment -> ID . verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (50) verify_id -> .
    (52) cte_id -> .
    (135) check_name -> .

    ASSIGN          reduce using rule 50 (verify_id -> .)
    LBRACKET        reduce using rule 52 (cte_id -> .)
    LPAREN          reduce using rule 135 (check_name -> .)

    verify_id                      shift and go to state 82
    cte_id                         shift and go to state 83
    check_name                     shift and go to state 84

state 59

    (91) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 85


state 60

    (73) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 61

    (74) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 62

    (72) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 63

    (71) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 64

    (75) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 65

    (70) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 66

    (78) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 67

    (79) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 68

    (80) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 69

    (76) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (77) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 70

    (45) while -> WHILE . while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (46) while_return -> .

    LPAREN          reduce using rule 46 (while_return -> .)

    while_return                   shift and go to state 96

state 71

    (141) return -> RETURN . var_cte SEMICOLON
    (142) return -> RETURN . st_cte SEMICOLON
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (59) st_cte -> . STRING
    (60) st_cte -> . cte_bool
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 99
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    STRING          shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    var_cte                        shift and go to state 97
    st_cte                         shift and go to state 98
    cte_bool                       shift and go to state 102
    call                           shift and go to state 103

state 72

    (81) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 73

    (82) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 108


state 74

    (61) funcs -> FUNC type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 109


state 75

    (62) funcs -> FUNC VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 110


state 76

    (16) vars2 -> type save_type vars3 SEMICOLON . vars2
    (16) vars2 -> . type save_type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL
    (143) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 143 (empty -> .)
    FUNC            reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)
    RBRACE          reduce using rule 143 (empty -> .)

    type                           shift and go to state 23
    vars2                          shift and go to state 111
    empty                          shift and go to state 24

state 77

    (18) vars3 -> ID ASSIGN . expression saveassign vars4
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    expression                     shift and go to state 113
    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 78

    (19) vars3 -> ID list . savelist vars4
    (21) savelist -> .

    COMMA           reduce using rule 21 (savelist -> .)
    SEMICOLON       reduce using rule 21 (savelist -> .)

    savelist                       shift and go to state 120

state 79

    (20) vars3 -> ID saveid . vars4
    (24) vars4 -> . COMMA vars3
    (25) vars4 -> . empty
    (143) empty -> .

    COMMA           shift and go to state 122
    SEMICOLON       reduce using rule 143 (empty -> .)

    vars4                          shift and go to state 121
    empty                          shift and go to state 123

state 80

    (27) list -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 124


state 81

    (10) b1 -> vars local_vars b2 .
    (13) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 10 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 82

    (48) assignment -> ID verify_id . ASSIGN push_sign expression set_value SEMICOLON

    ASSIGN          shift and go to state 125


state 83

    (49) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 126


state 84

    (134) call -> ID check_name . LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 127


state 85

    (91) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    expression                     shift and go to state 128
    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 86

    (73) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 129
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 87

    (74) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 130
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 88

    (72) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 131
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 89

    (71) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 132
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 90

    (75) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 133
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 91

    (70) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (53) color_cte -> . RED
    (54) color_cte -> . BLUE
    (55) color_cte -> . YELLOW
    (56) color_cte -> . GREEN
    (57) color_cte -> . PINK
    (58) color_cte -> . PURPLE

    RED             shift and go to state 135
    BLUE            shift and go to state 136
    YELLOW          shift and go to state 137
    GREEN           shift and go to state 138
    PINK            shift and go to state 139
    PURPLE          shift and go to state 140

    color_cte                      shift and go to state 134

state 92

    (78) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 141
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 93

    (79) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 142
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 94

    (80) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 143
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 95

    (76) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (77) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    CTE_STRING      shift and go to state 145
    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 144
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 96

    (45) while -> WHILE while_return . LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 146


state 97

    (141) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 147


state 98

    (142) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 148


state 99

    (118) var_cte -> ID . getidvalue
    (122) var_cte -> ID . list getarrayvalue
    (134) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (124) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (135) check_name -> .

    SEMICOLON       reduce using rule 124 (getidvalue -> .)
    LBRACKET        shift and go to state 80
    LPAREN          reduce using rule 135 (check_name -> .)

    getidvalue                     shift and go to state 149
    list                           shift and go to state 150
    check_name                     shift and go to state 84

state 100

    (119) var_cte -> CTE_INT . getvalue_i
    (125) getvalue_i -> .

    SEMICOLON       reduce using rule 125 (getvalue_i -> .)
    DIVIDE          reduce using rule 125 (getvalue_i -> .)
    TIMES           reduce using rule 125 (getvalue_i -> .)
    MINUS           reduce using rule 125 (getvalue_i -> .)
    PLUS            reduce using rule 125 (getvalue_i -> .)
    LESSER          reduce using rule 125 (getvalue_i -> .)
    GREATER         reduce using rule 125 (getvalue_i -> .)
    EQUAL           reduce using rule 125 (getvalue_i -> .)
    NOTEQUAL        reduce using rule 125 (getvalue_i -> .)
    GREATEROREQUAL  reduce using rule 125 (getvalue_i -> .)
    LESSEROREQUAL   reduce using rule 125 (getvalue_i -> .)
    COMMA           reduce using rule 125 (getvalue_i -> .)
    RPAREN          reduce using rule 125 (getvalue_i -> .)
    RBRACKET        reduce using rule 125 (getvalue_i -> .)

    getvalue_i                     shift and go to state 151

state 101

    (120) var_cte -> CTE_FLOAT . getvalue_f
    (126) getvalue_f -> .

    SEMICOLON       reduce using rule 126 (getvalue_f -> .)
    DIVIDE          reduce using rule 126 (getvalue_f -> .)
    TIMES           reduce using rule 126 (getvalue_f -> .)
    MINUS           reduce using rule 126 (getvalue_f -> .)
    PLUS            reduce using rule 126 (getvalue_f -> .)
    LESSER          reduce using rule 126 (getvalue_f -> .)
    GREATER         reduce using rule 126 (getvalue_f -> .)
    EQUAL           reduce using rule 126 (getvalue_f -> .)
    NOTEQUAL        reduce using rule 126 (getvalue_f -> .)
    GREATEROREQUAL  reduce using rule 126 (getvalue_f -> .)
    LESSEROREQUAL   reduce using rule 126 (getvalue_f -> .)
    COMMA           reduce using rule 126 (getvalue_f -> .)
    RPAREN          reduce using rule 126 (getvalue_f -> .)
    RBRACKET        reduce using rule 126 (getvalue_f -> .)

    getvalue_f                     shift and go to state 152

state 102

    (121) var_cte -> cte_bool . getvalue_b
    (60) st_cte -> cte_bool .
    (127) getvalue_b -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 60 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 127 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 153

state 103

    (123) var_cte -> call . getcallvalue
    (88) getcallvalue -> .

    SEMICOLON       reduce using rule 88 (getcallvalue -> .)
    DIVIDE          reduce using rule 88 (getcallvalue -> .)
    TIMES           reduce using rule 88 (getcallvalue -> .)
    MINUS           reduce using rule 88 (getcallvalue -> .)
    PLUS            reduce using rule 88 (getcallvalue -> .)
    LESSER          reduce using rule 88 (getcallvalue -> .)
    GREATER         reduce using rule 88 (getcallvalue -> .)
    EQUAL           reduce using rule 88 (getcallvalue -> .)
    NOTEQUAL        reduce using rule 88 (getcallvalue -> .)
    GREATEROREQUAL  reduce using rule 88 (getcallvalue -> .)
    LESSEROREQUAL   reduce using rule 88 (getcallvalue -> .)
    COMMA           reduce using rule 88 (getcallvalue -> .)
    RPAREN          reduce using rule 88 (getcallvalue -> .)
    RBRACKET        reduce using rule 88 (getcallvalue -> .)

    getcallvalue                   shift and go to state 154

state 104

    (59) st_cte -> STRING .

    SEMICOLON       reduce using rule 59 (st_cte -> STRING .)
    RPAREN          reduce using rule 59 (st_cte -> STRING .)


state 105

    (89) cte_bool -> TRUE .

    SEMICOLON       reduce using rule 89 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 89 (cte_bool -> TRUE .)
    TIMES           reduce using rule 89 (cte_bool -> TRUE .)
    MINUS           reduce using rule 89 (cte_bool -> TRUE .)
    PLUS            reduce using rule 89 (cte_bool -> TRUE .)
    LESSER          reduce using rule 89 (cte_bool -> TRUE .)
    GREATER         reduce using rule 89 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 89 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 89 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 89 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 89 (cte_bool -> TRUE .)
    COMMA           reduce using rule 89 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 89 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 89 (cte_bool -> TRUE .)


state 106

    (90) cte_bool -> FALSE .

    SEMICOLON       reduce using rule 90 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 90 (cte_bool -> FALSE .)
    TIMES           reduce using rule 90 (cte_bool -> FALSE .)
    MINUS           reduce using rule 90 (cte_bool -> FALSE .)
    PLUS            reduce using rule 90 (cte_bool -> FALSE .)
    LESSER          reduce using rule 90 (cte_bool -> FALSE .)
    GREATER         reduce using rule 90 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 90 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 90 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 90 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 90 (cte_bool -> FALSE .)
    COMMA           reduce using rule 90 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 90 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 90 (cte_bool -> FALSE .)


state 107

    (81) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 108

    (82) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 156


state 109

    (61) funcs -> FUNC type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (63) funcs1 -> . funcs1 COMMA type ID
    (64) funcs1 -> . empty
    (143) empty -> .

    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)

    funcs1                         shift and go to state 157
    empty                          shift and go to state 158

state 110

    (62) funcs -> FUNC VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (63) funcs1 -> . funcs1 COMMA type ID
    (64) funcs1 -> . empty
    (143) empty -> .

    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)

    funcs1                         shift and go to state 159
    empty                          shift and go to state 158

state 111

    (16) vars2 -> type save_type vars3 SEMICOLON vars2 .

    DAVINCI         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    FUNC            reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)


state 112

    (116) factor -> ID . push_id
    (118) var_cte -> ID . getidvalue
    (122) var_cte -> ID . list getarrayvalue
    (134) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (133) push_id -> .
    (124) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (135) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for LESSER resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for GREATER resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for EQUAL resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 124 (getidvalue -> .)
    DIVIDE          reduce using rule 124 (getidvalue -> .)
    TIMES           reduce using rule 124 (getidvalue -> .)
    MINUS           reduce using rule 124 (getidvalue -> .)
    PLUS            reduce using rule 124 (getidvalue -> .)
    LESSER          reduce using rule 124 (getidvalue -> .)
    GREATER         reduce using rule 124 (getidvalue -> .)
    EQUAL           reduce using rule 124 (getidvalue -> .)
    NOTEQUAL        reduce using rule 124 (getidvalue -> .)
    GREATEROREQUAL  reduce using rule 124 (getidvalue -> .)
    LESSEROREQUAL   reduce using rule 124 (getidvalue -> .)
    COMMA           reduce using rule 124 (getidvalue -> .)
    SEMICOLON       reduce using rule 124 (getidvalue -> .)
    RPAREN          reduce using rule 124 (getidvalue -> .)
    RBRACKET        reduce using rule 124 (getidvalue -> .)
    LBRACKET        shift and go to state 80
    LPAREN          reduce using rule 135 (check_name -> .)

  ! DIVIDE          [ reduce using rule 133 (push_id -> .) ]
  ! TIMES           [ reduce using rule 133 (push_id -> .) ]
  ! MINUS           [ reduce using rule 133 (push_id -> .) ]
  ! PLUS            [ reduce using rule 133 (push_id -> .) ]
  ! LESSER          [ reduce using rule 133 (push_id -> .) ]
  ! GREATER         [ reduce using rule 133 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 133 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 133 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 133 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 133 (push_id -> .) ]
  ! COMMA           [ reduce using rule 133 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 133 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 133 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 133 (push_id -> .) ]

    push_id                        shift and go to state 160
    getidvalue                     shift and go to state 149
    list                           shift and go to state 150
    check_name                     shift and go to state 84

state 113

    (18) vars3 -> ID ASSIGN expression . saveassign vars4
    (22) saveassign -> .

    COMMA           reduce using rule 22 (saveassign -> .)
    SEMICOLON       reduce using rule 22 (saveassign -> .)

    saveassign                     shift and go to state 161

state 114

    (97) expression -> exp . expression1
    (98) expression1 -> . LESSER relop exp top_relop
    (99) expression1 -> . GREATER relop exp top_relop
    (100) expression1 -> . EQUAL relop exp top_relop
    (101) expression1 -> . NOTEQUAL relop exp top_relop
    (102) expression1 -> . GREATEROREQUAL relop exp top_relop
    (103) expression1 -> . LESSEROREQUAL relop exp top_relop
    (104) expression1 -> . empty
    (143) empty -> .

    LESSER          shift and go to state 163
    GREATER         shift and go to state 164
    EQUAL           shift and go to state 165
    NOTEQUAL        shift and go to state 166
    GREATEROREQUAL  shift and go to state 167
    LESSEROREQUAL   shift and go to state 168
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    expression1                    shift and go to state 162
    empty                          shift and go to state 169

state 115

    (105) exp -> term . top_exp exp1
    (109) top_exp -> .

    MINUS           reduce using rule 109 (top_exp -> .)
    PLUS            reduce using rule 109 (top_exp -> .)
    LESSER          reduce using rule 109 (top_exp -> .)
    GREATER         reduce using rule 109 (top_exp -> .)
    EQUAL           reduce using rule 109 (top_exp -> .)
    NOTEQUAL        reduce using rule 109 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 109 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 109 (top_exp -> .)
    COMMA           reduce using rule 109 (top_exp -> .)
    SEMICOLON       reduce using rule 109 (top_exp -> .)
    RPAREN          reduce using rule 109 (top_exp -> .)
    RBRACKET        reduce using rule 109 (top_exp -> .)

    top_exp                        shift and go to state 170

state 116

    (110) term -> factor . top_factor term1
    (117) top_factor -> .

    DIVIDE          reduce using rule 117 (top_factor -> .)
    TIMES           reduce using rule 117 (top_factor -> .)
    MINUS           reduce using rule 117 (top_factor -> .)
    PLUS            reduce using rule 117 (top_factor -> .)
    LESSER          reduce using rule 117 (top_factor -> .)
    GREATER         reduce using rule 117 (top_factor -> .)
    EQUAL           reduce using rule 117 (top_factor -> .)
    NOTEQUAL        reduce using rule 117 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 117 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 117 (top_factor -> .)
    COMMA           reduce using rule 117 (top_factor -> .)
    SEMICOLON       reduce using rule 117 (top_factor -> .)
    RPAREN          reduce using rule 117 (top_factor -> .)
    RBRACKET        reduce using rule 117 (top_factor -> .)

    top_factor                     shift and go to state 171

state 117

    (114) factor -> LPAREN . false_bottom expression RPAREN end_par
    (131) false_bottom -> .

    LPAREN          reduce using rule 131 (false_bottom -> .)
    ID              reduce using rule 131 (false_bottom -> .)
    CTE_INT         reduce using rule 131 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 131 (false_bottom -> .)
    TRUE            reduce using rule 131 (false_bottom -> .)
    FALSE           reduce using rule 131 (false_bottom -> .)

    false_bottom                   shift and go to state 172

state 118

    (115) factor -> var_cte .

    DIVIDE          reduce using rule 115 (factor -> var_cte .)
    TIMES           reduce using rule 115 (factor -> var_cte .)
    MINUS           reduce using rule 115 (factor -> var_cte .)
    PLUS            reduce using rule 115 (factor -> var_cte .)
    LESSER          reduce using rule 115 (factor -> var_cte .)
    GREATER         reduce using rule 115 (factor -> var_cte .)
    EQUAL           reduce using rule 115 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 115 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 115 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 115 (factor -> var_cte .)
    COMMA           reduce using rule 115 (factor -> var_cte .)
    SEMICOLON       reduce using rule 115 (factor -> var_cte .)
    RPAREN          reduce using rule 115 (factor -> var_cte .)
    RBRACKET        reduce using rule 115 (factor -> var_cte .)


state 119

    (121) var_cte -> cte_bool . getvalue_b
    (127) getvalue_b -> .

    DIVIDE          reduce using rule 127 (getvalue_b -> .)
    TIMES           reduce using rule 127 (getvalue_b -> .)
    MINUS           reduce using rule 127 (getvalue_b -> .)
    PLUS            reduce using rule 127 (getvalue_b -> .)
    LESSER          reduce using rule 127 (getvalue_b -> .)
    GREATER         reduce using rule 127 (getvalue_b -> .)
    EQUAL           reduce using rule 127 (getvalue_b -> .)
    NOTEQUAL        reduce using rule 127 (getvalue_b -> .)
    GREATEROREQUAL  reduce using rule 127 (getvalue_b -> .)
    LESSEROREQUAL   reduce using rule 127 (getvalue_b -> .)
    COMMA           reduce using rule 127 (getvalue_b -> .)
    SEMICOLON       reduce using rule 127 (getvalue_b -> .)
    RPAREN          reduce using rule 127 (getvalue_b -> .)
    RBRACKET        reduce using rule 127 (getvalue_b -> .)

    getvalue_b                     shift and go to state 153

state 120

    (19) vars3 -> ID list savelist . vars4
    (24) vars4 -> . COMMA vars3
    (25) vars4 -> . empty
    (143) empty -> .

    COMMA           shift and go to state 122
    SEMICOLON       reduce using rule 143 (empty -> .)

    vars4                          shift and go to state 173
    empty                          shift and go to state 123

state 121

    (20) vars3 -> ID saveid vars4 .

    SEMICOLON       reduce using rule 20 (vars3 -> ID saveid vars4 .)


state 122

    (24) vars4 -> COMMA . vars3
    (18) vars3 -> . ID ASSIGN expression saveassign vars4
    (19) vars3 -> . ID list savelist vars4
    (20) vars3 -> . ID saveid vars4

    ID              shift and go to state 37

    vars3                          shift and go to state 174

state 123

    (25) vars4 -> empty .

    SEMICOLON       reduce using rule 25 (vars4 -> empty .)


state 124

    (27) list -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 175


state 125

    (48) assignment -> ID verify_id ASSIGN . push_sign expression set_value SEMICOLON
    (130) push_sign -> .

    LPAREN          reduce using rule 130 (push_sign -> .)
    ID              reduce using rule 130 (push_sign -> .)
    CTE_INT         reduce using rule 130 (push_sign -> .)
    CTE_FLOAT       reduce using rule 130 (push_sign -> .)
    TRUE            reduce using rule 130 (push_sign -> .)
    FALSE           reduce using rule 130 (push_sign -> .)

    push_sign                      shift and go to state 176

state 126

    (49) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 177
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 127

    (134) call -> ID check_name LPAREN . create_era call1 RPAREN SEMICOLON gosub
    (136) create_era -> .

    ID              reduce using rule 136 (create_era -> .)
    STRING          reduce using rule 136 (create_era -> .)
    TRUE            reduce using rule 136 (create_era -> .)
    FALSE           reduce using rule 136 (create_era -> .)
    LPAREN          reduce using rule 136 (create_era -> .)
    CTE_INT         reduce using rule 136 (create_era -> .)
    CTE_FLOAT       reduce using rule 136 (create_era -> .)

    create_era                     shift and go to state 178

state 128

    (91) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 179


state 129

    (73) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 130

    (74) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 131

    (72) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 132

    (71) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 133

    (75) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 184


state 134

    (70) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 135

    (53) color_cte -> RED .

    RPAREN          reduce using rule 53 (color_cte -> RED .)


state 136

    (54) color_cte -> BLUE .

    RPAREN          reduce using rule 54 (color_cte -> BLUE .)


state 137

    (55) color_cte -> YELLOW .

    RPAREN          reduce using rule 55 (color_cte -> YELLOW .)


state 138

    (56) color_cte -> GREEN .

    RPAREN          reduce using rule 56 (color_cte -> GREEN .)


state 139

    (57) color_cte -> PINK .

    RPAREN          reduce using rule 57 (color_cte -> PINK .)


state 140

    (58) color_cte -> PURPLE .

    RPAREN          reduce using rule 58 (color_cte -> PURPLE .)


state 141

    (78) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 142

    (79) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 143

    (80) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 144

    (76) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 145

    (77) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 146

    (45) while -> WHILE while_return LPAREN . type_check expression RPAREN LBRACE b2 RBRACE end_while
    (94) type_check -> .

    LPAREN          reduce using rule 94 (type_check -> .)
    ID              reduce using rule 94 (type_check -> .)
    CTE_INT         reduce using rule 94 (type_check -> .)
    CTE_FLOAT       reduce using rule 94 (type_check -> .)
    TRUE            reduce using rule 94 (type_check -> .)
    FALSE           reduce using rule 94 (type_check -> .)

    type_check                     shift and go to state 191

state 147

    (141) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 141 (return -> RETURN var_cte SEMICOLON .)


state 148

    (142) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 142 (return -> RETURN st_cte SEMICOLON .)


state 149

    (118) var_cte -> ID getidvalue .

    SEMICOLON       reduce using rule 118 (var_cte -> ID getidvalue .)
    DIVIDE          reduce using rule 118 (var_cte -> ID getidvalue .)
    TIMES           reduce using rule 118 (var_cte -> ID getidvalue .)
    MINUS           reduce using rule 118 (var_cte -> ID getidvalue .)
    PLUS            reduce using rule 118 (var_cte -> ID getidvalue .)
    LESSER          reduce using rule 118 (var_cte -> ID getidvalue .)
    GREATER         reduce using rule 118 (var_cte -> ID getidvalue .)
    EQUAL           reduce using rule 118 (var_cte -> ID getidvalue .)
    NOTEQUAL        reduce using rule 118 (var_cte -> ID getidvalue .)
    GREATEROREQUAL  reduce using rule 118 (var_cte -> ID getidvalue .)
    LESSEROREQUAL   reduce using rule 118 (var_cte -> ID getidvalue .)
    COMMA           reduce using rule 118 (var_cte -> ID getidvalue .)
    RPAREN          reduce using rule 118 (var_cte -> ID getidvalue .)
    RBRACKET        reduce using rule 118 (var_cte -> ID getidvalue .)


state 150

    (122) var_cte -> ID list . getarrayvalue
    (87) getarrayvalue -> .

    SEMICOLON       reduce using rule 87 (getarrayvalue -> .)
    DIVIDE          reduce using rule 87 (getarrayvalue -> .)
    TIMES           reduce using rule 87 (getarrayvalue -> .)
    MINUS           reduce using rule 87 (getarrayvalue -> .)
    PLUS            reduce using rule 87 (getarrayvalue -> .)
    LESSER          reduce using rule 87 (getarrayvalue -> .)
    GREATER         reduce using rule 87 (getarrayvalue -> .)
    EQUAL           reduce using rule 87 (getarrayvalue -> .)
    NOTEQUAL        reduce using rule 87 (getarrayvalue -> .)
    GREATEROREQUAL  reduce using rule 87 (getarrayvalue -> .)
    LESSEROREQUAL   reduce using rule 87 (getarrayvalue -> .)
    COMMA           reduce using rule 87 (getarrayvalue -> .)
    RPAREN          reduce using rule 87 (getarrayvalue -> .)
    RBRACKET        reduce using rule 87 (getarrayvalue -> .)

    getarrayvalue                  shift and go to state 192

state 151

    (119) var_cte -> CTE_INT getvalue_i .

    SEMICOLON       reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    DIVIDE          reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    TIMES           reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    MINUS           reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    PLUS            reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    LESSER          reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    GREATER         reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    EQUAL           reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    NOTEQUAL        reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    GREATEROREQUAL  reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    LESSEROREQUAL   reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    COMMA           reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    RPAREN          reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)
    RBRACKET        reduce using rule 119 (var_cte -> CTE_INT getvalue_i .)


state 152

    (120) var_cte -> CTE_FLOAT getvalue_f .

    SEMICOLON       reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    DIVIDE          reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    TIMES           reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    MINUS           reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    PLUS            reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSER          reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATER         reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    EQUAL           reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    NOTEQUAL        reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATEROREQUAL  reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSEROREQUAL   reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    COMMA           reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    RPAREN          reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)
    RBRACKET        reduce using rule 120 (var_cte -> CTE_FLOAT getvalue_f .)


state 153

    (121) var_cte -> cte_bool getvalue_b .

    SEMICOLON       reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    DIVIDE          reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    TIMES           reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    MINUS           reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    PLUS            reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    LESSER          reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    GREATER         reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    EQUAL           reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    NOTEQUAL        reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    GREATEROREQUAL  reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    LESSEROREQUAL   reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    COMMA           reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    RPAREN          reduce using rule 121 (var_cte -> cte_bool getvalue_b .)
    RBRACKET        reduce using rule 121 (var_cte -> cte_bool getvalue_b .)


state 154

    (123) var_cte -> call getcallvalue .

    SEMICOLON       reduce using rule 123 (var_cte -> call getcallvalue .)
    DIVIDE          reduce using rule 123 (var_cte -> call getcallvalue .)
    TIMES           reduce using rule 123 (var_cte -> call getcallvalue .)
    MINUS           reduce using rule 123 (var_cte -> call getcallvalue .)
    PLUS            reduce using rule 123 (var_cte -> call getcallvalue .)
    LESSER          reduce using rule 123 (var_cte -> call getcallvalue .)
    GREATER         reduce using rule 123 (var_cte -> call getcallvalue .)
    EQUAL           reduce using rule 123 (var_cte -> call getcallvalue .)
    NOTEQUAL        reduce using rule 123 (var_cte -> call getcallvalue .)
    GREATEROREQUAL  reduce using rule 123 (var_cte -> call getcallvalue .)
    LESSEROREQUAL   reduce using rule 123 (var_cte -> call getcallvalue .)
    COMMA           reduce using rule 123 (var_cte -> call getcallvalue .)
    RPAREN          reduce using rule 123 (var_cte -> call getcallvalue .)
    RBRACKET        reduce using rule 123 (var_cte -> call getcallvalue .)


state 155

    (81) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 193


state 156

    (82) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 157

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (63) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 195
    COMMA           shift and go to state 196


state 158

    (64) funcs1 -> empty .

    RPAREN          reduce using rule 64 (funcs1 -> empty .)
    COMMA           reduce using rule 64 (funcs1 -> empty .)


state 159

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (63) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 197
    COMMA           shift and go to state 196


state 160

    (116) factor -> ID push_id .

    DIVIDE          reduce using rule 116 (factor -> ID push_id .)
    TIMES           reduce using rule 116 (factor -> ID push_id .)
    MINUS           reduce using rule 116 (factor -> ID push_id .)
    PLUS            reduce using rule 116 (factor -> ID push_id .)
    LESSER          reduce using rule 116 (factor -> ID push_id .)
    GREATER         reduce using rule 116 (factor -> ID push_id .)
    EQUAL           reduce using rule 116 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 116 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 116 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 116 (factor -> ID push_id .)
    COMMA           reduce using rule 116 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 116 (factor -> ID push_id .)
    RPAREN          reduce using rule 116 (factor -> ID push_id .)
    RBRACKET        reduce using rule 116 (factor -> ID push_id .)


state 161

    (18) vars3 -> ID ASSIGN expression saveassign . vars4
    (24) vars4 -> . COMMA vars3
    (25) vars4 -> . empty
    (143) empty -> .

    COMMA           shift and go to state 122
    SEMICOLON       reduce using rule 143 (empty -> .)

    vars4                          shift and go to state 198
    empty                          shift and go to state 123

state 162

    (97) expression -> exp expression1 .

    COMMA           reduce using rule 97 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 97 (expression -> exp expression1 .)
    RPAREN          reduce using rule 97 (expression -> exp expression1 .)


state 163

    (98) expression1 -> LESSER . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 199

state 164

    (99) expression1 -> GREATER . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 200

state 165

    (100) expression1 -> EQUAL . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 201

state 166

    (101) expression1 -> NOTEQUAL . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 202

state 167

    (102) expression1 -> GREATEROREQUAL . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 203

state 168

    (103) expression1 -> LESSEROREQUAL . relop exp top_relop
    (128) relop -> .

    LPAREN          reduce using rule 128 (relop -> .)
    ID              reduce using rule 128 (relop -> .)
    CTE_INT         reduce using rule 128 (relop -> .)
    CTE_FLOAT       reduce using rule 128 (relop -> .)
    TRUE            reduce using rule 128 (relop -> .)
    FALSE           reduce using rule 128 (relop -> .)

    relop                          shift and go to state 204

state 169

    (104) expression1 -> empty .

    COMMA           reduce using rule 104 (expression1 -> empty .)
    SEMICOLON       reduce using rule 104 (expression1 -> empty .)
    RPAREN          reduce using rule 104 (expression1 -> empty .)


state 170

    (105) exp -> term top_exp . exp1
    (106) exp1 -> . MINUS push_sign exp
    (107) exp1 -> . PLUS push_sign exp
    (108) exp1 -> . empty
    (143) empty -> .

    MINUS           shift and go to state 206
    PLUS            shift and go to state 207
    LESSER          reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    EQUAL           reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    GREATEROREQUAL  reduce using rule 143 (empty -> .)
    LESSEROREQUAL   reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)

    exp1                           shift and go to state 205
    empty                          shift and go to state 208

state 171

    (110) term -> factor top_factor . term1
    (111) term1 -> . DIVIDE push_sign term
    (112) term1 -> . TIMES push_sign term
    (113) term1 -> . empty
    (143) empty -> .

    DIVIDE          shift and go to state 210
    TIMES           shift and go to state 211
    MINUS           reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    LESSER          reduce using rule 143 (empty -> .)
    GREATER         reduce using rule 143 (empty -> .)
    EQUAL           reduce using rule 143 (empty -> .)
    NOTEQUAL        reduce using rule 143 (empty -> .)
    GREATEROREQUAL  reduce using rule 143 (empty -> .)
    LESSEROREQUAL   reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)

    term1                          shift and go to state 209
    empty                          shift and go to state 212

state 172

    (114) factor -> LPAREN false_bottom . expression RPAREN end_par
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    expression                     shift and go to state 213
    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 173

    (19) vars3 -> ID list savelist vars4 .

    SEMICOLON       reduce using rule 19 (vars3 -> ID list savelist vars4 .)


state 174

    (24) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 24 (vars4 -> COMMA vars3 .)


state 175

    (27) list -> LBRACKET CTE_INT RBRACKET .

    COMMA           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    TIMES           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSER          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATER         reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    EQUAL           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATEROREQUAL  reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSEROREQUAL   reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)


state 176

    (48) assignment -> ID verify_id ASSIGN push_sign . expression set_value SEMICOLON
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    expression                     shift and go to state 214
    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 177

    (49) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 215


state 178

    (134) call -> ID check_name LPAREN create_era . call1 RPAREN SEMICOLON gosub
    (138) call1 -> . ID COMMA call1
    (139) call1 -> . exp
    (140) call1 -> . st_cte
    (105) exp -> . term top_exp exp1
    (59) st_cte -> . STRING
    (60) st_cte -> . cte_bool
    (110) term -> . factor top_factor term1
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 216
    STRING          shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    LPAREN          shift and go to state 117
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101

    call1                          shift and go to state 217
    exp                            shift and go to state 218
    st_cte                         shift and go to state 219
    term                           shift and go to state 115
    cte_bool                       shift and go to state 220
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    call                           shift and go to state 103

state 179

    (91) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (94) type_check -> .

    LBRACE          reduce using rule 94 (type_check -> .)

    type_check                     shift and go to state 221

state 180

    (73) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 222
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 181

    (74) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 223
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 182

    (72) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 183

    (71) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 184

    (75) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 226
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 185

    (70) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 186

    (78) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 187

    (79) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 188

    (80) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 189

    (76) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 190

    (77) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 191

    (45) while -> WHILE while_return LPAREN type_check . expression RPAREN LBRACE b2 RBRACE end_while
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    expression                     shift and go to state 233
    exp                            shift and go to state 114
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 192

    (122) var_cte -> ID list getarrayvalue .

    SEMICOLON       reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    DIVIDE          reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    TIMES           reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    MINUS           reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    PLUS            reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    LESSER          reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    GREATER         reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    EQUAL           reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    NOTEQUAL        reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    GREATEROREQUAL  reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    LESSEROREQUAL   reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    COMMA           reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    RPAREN          reduce using rule 122 (var_cte -> ID list getarrayvalue .)
    RBRACKET        reduce using rule 122 (var_cte -> ID list getarrayvalue .)


state 193

    (81) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 81 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 194

    (82) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 82 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 195

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 234


state 196

    (63) funcs1 -> funcs1 COMMA . type ID
    (83) type -> . INT
    (84) type -> . FLOAT
    (85) type -> . STRING
    (86) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 235

state 197

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 236


state 198

    (18) vars3 -> ID ASSIGN expression saveassign vars4 .

    SEMICOLON       reduce using rule 18 (vars3 -> ID ASSIGN expression saveassign vars4 .)


state 199

    (98) expression1 -> LESSER relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 237
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 200

    (99) expression1 -> GREATER relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 238
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 201

    (100) expression1 -> EQUAL relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 239
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 202

    (101) expression1 -> NOTEQUAL relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 240
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 203

    (102) expression1 -> GREATEROREQUAL relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 241
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 204

    (103) expression1 -> LESSEROREQUAL relop . exp top_relop
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 242
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 205

    (105) exp -> term top_exp exp1 .

    LESSER          reduce using rule 105 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 105 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 105 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 105 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 105 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 105 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 105 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 105 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 105 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 105 (exp -> term top_exp exp1 .)


state 206

    (106) exp1 -> MINUS . push_sign exp
    (130) push_sign -> .

    LPAREN          reduce using rule 130 (push_sign -> .)
    ID              reduce using rule 130 (push_sign -> .)
    CTE_INT         reduce using rule 130 (push_sign -> .)
    CTE_FLOAT       reduce using rule 130 (push_sign -> .)
    TRUE            reduce using rule 130 (push_sign -> .)
    FALSE           reduce using rule 130 (push_sign -> .)

    push_sign                      shift and go to state 243

state 207

    (107) exp1 -> PLUS . push_sign exp
    (130) push_sign -> .

    LPAREN          reduce using rule 130 (push_sign -> .)
    ID              reduce using rule 130 (push_sign -> .)
    CTE_INT         reduce using rule 130 (push_sign -> .)
    CTE_FLOAT       reduce using rule 130 (push_sign -> .)
    TRUE            reduce using rule 130 (push_sign -> .)
    FALSE           reduce using rule 130 (push_sign -> .)

    push_sign                      shift and go to state 244

state 208

    (108) exp1 -> empty .

    LESSER          reduce using rule 108 (exp1 -> empty .)
    GREATER         reduce using rule 108 (exp1 -> empty .)
    EQUAL           reduce using rule 108 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 108 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 108 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 108 (exp1 -> empty .)
    COMMA           reduce using rule 108 (exp1 -> empty .)
    SEMICOLON       reduce using rule 108 (exp1 -> empty .)
    RPAREN          reduce using rule 108 (exp1 -> empty .)
    RBRACKET        reduce using rule 108 (exp1 -> empty .)


state 209

    (110) term -> factor top_factor term1 .

    MINUS           reduce using rule 110 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 110 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 110 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 110 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 110 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 110 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 110 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 110 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 110 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 110 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 110 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 110 (term -> factor top_factor term1 .)


state 210

    (111) term1 -> DIVIDE . push_sign term
    (130) push_sign -> .

    LPAREN          reduce using rule 130 (push_sign -> .)
    ID              reduce using rule 130 (push_sign -> .)
    CTE_INT         reduce using rule 130 (push_sign -> .)
    CTE_FLOAT       reduce using rule 130 (push_sign -> .)
    TRUE            reduce using rule 130 (push_sign -> .)
    FALSE           reduce using rule 130 (push_sign -> .)

    push_sign                      shift and go to state 245

state 211

    (112) term1 -> TIMES . push_sign term
    (130) push_sign -> .

    LPAREN          reduce using rule 130 (push_sign -> .)
    ID              reduce using rule 130 (push_sign -> .)
    CTE_INT         reduce using rule 130 (push_sign -> .)
    CTE_FLOAT       reduce using rule 130 (push_sign -> .)
    TRUE            reduce using rule 130 (push_sign -> .)
    FALSE           reduce using rule 130 (push_sign -> .)

    push_sign                      shift and go to state 246

state 212

    (113) term1 -> empty .

    MINUS           reduce using rule 113 (term1 -> empty .)
    PLUS            reduce using rule 113 (term1 -> empty .)
    LESSER          reduce using rule 113 (term1 -> empty .)
    GREATER         reduce using rule 113 (term1 -> empty .)
    EQUAL           reduce using rule 113 (term1 -> empty .)
    NOTEQUAL        reduce using rule 113 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 113 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 113 (term1 -> empty .)
    COMMA           reduce using rule 113 (term1 -> empty .)
    SEMICOLON       reduce using rule 113 (term1 -> empty .)
    RPAREN          reduce using rule 113 (term1 -> empty .)
    RBRACKET        reduce using rule 113 (term1 -> empty .)


state 213

    (114) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 247


state 214

    (48) assignment -> ID verify_id ASSIGN push_sign expression . set_value SEMICOLON
    (51) set_value -> .

    SEMICOLON       reduce using rule 51 (set_value -> .)

    set_value                      shift and go to state 248

state 215

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 249


state 216

    (138) call1 -> ID . COMMA call1
    (116) factor -> ID . push_id
    (118) var_cte -> ID . getidvalue
    (122) var_cte -> ID . list getarrayvalue
    (134) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (133) push_id -> .
    (124) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (135) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 124 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 124 (getidvalue -> .)
    COMMA           shift and go to state 250
    DIVIDE          reduce using rule 124 (getidvalue -> .)
    TIMES           reduce using rule 124 (getidvalue -> .)
    MINUS           reduce using rule 124 (getidvalue -> .)
    PLUS            reduce using rule 124 (getidvalue -> .)
    RPAREN          reduce using rule 124 (getidvalue -> .)
    LBRACKET        shift and go to state 80
    LPAREN          reduce using rule 135 (check_name -> .)

  ! DIVIDE          [ reduce using rule 133 (push_id -> .) ]
  ! TIMES           [ reduce using rule 133 (push_id -> .) ]
  ! MINUS           [ reduce using rule 133 (push_id -> .) ]
  ! PLUS            [ reduce using rule 133 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 133 (push_id -> .) ]

    push_id                        shift and go to state 160
    getidvalue                     shift and go to state 149
    list                           shift and go to state 150
    check_name                     shift and go to state 84

state 217

    (134) call -> ID check_name LPAREN create_era call1 . RPAREN SEMICOLON gosub

    RPAREN          shift and go to state 251


state 218

    (139) call1 -> exp .

    RPAREN          reduce using rule 139 (call1 -> exp .)


state 219

    (140) call1 -> st_cte .

    RPAREN          reduce using rule 140 (call1 -> st_cte .)


state 220

    (60) st_cte -> cte_bool .
    (121) var_cte -> cte_bool . getvalue_b
    (127) getvalue_b -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 60 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 60 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 127 (getvalue_b -> .)
    TIMES           reduce using rule 127 (getvalue_b -> .)
    MINUS           reduce using rule 127 (getvalue_b -> .)
    PLUS            reduce using rule 127 (getvalue_b -> .)

  ! RPAREN          [ reduce using rule 127 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 153

state 221

    (91) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 252


state 222

    (73) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 253


state 223

    (74) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 224

    (72) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 225

    (71) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 226

    (75) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 255


state 227

    (70) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 228

    (78) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 229

    (79) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 79 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 230

    (80) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 80 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 231

    (76) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 76 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 232

    (77) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 77 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 233

    (45) while -> WHILE while_return LPAREN type_check expression . RPAREN LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 256


state 234

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (65) funcs2 -> . funcs2 vars
    (66) funcs2 -> . funcs2 statute
    (67) funcs2 -> . empty
    (143) empty -> .

    RBRACE          reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)

    funcs2                         shift and go to state 257
    empty                          shift and go to state 258

state 235

    (63) funcs1 -> funcs1 COMMA type . ID

    ID              shift and go to state 259


state 236

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (65) funcs2 -> . funcs2 vars
    (66) funcs2 -> . funcs2 statute
    (67) funcs2 -> . empty
    (143) empty -> .

    RBRACE          reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)

    funcs2                         shift and go to state 260
    empty                          shift and go to state 258

state 237

    (98) expression1 -> LESSER relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 261

state 238

    (99) expression1 -> GREATER relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 262

state 239

    (100) expression1 -> EQUAL relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 263

state 240

    (101) expression1 -> NOTEQUAL relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 264

state 241

    (102) expression1 -> GREATEROREQUAL relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 265

state 242

    (103) expression1 -> LESSEROREQUAL relop exp . top_relop
    (129) top_relop -> .

    COMMA           reduce using rule 129 (top_relop -> .)
    SEMICOLON       reduce using rule 129 (top_relop -> .)
    RPAREN          reduce using rule 129 (top_relop -> .)

    top_relop                      shift and go to state 266

state 243

    (106) exp1 -> MINUS push_sign . exp
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 267
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 244

    (107) exp1 -> PLUS push_sign . exp
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 268
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 245

    (111) term1 -> DIVIDE push_sign . term
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    term                           shift and go to state 269
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 246

    (112) term1 -> TIMES push_sign . term
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    term                           shift and go to state 270
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 247

    (114) factor -> LPAREN false_bottom expression RPAREN . end_par
    (132) end_par -> .

    DIVIDE          reduce using rule 132 (end_par -> .)
    TIMES           reduce using rule 132 (end_par -> .)
    MINUS           reduce using rule 132 (end_par -> .)
    PLUS            reduce using rule 132 (end_par -> .)
    LESSER          reduce using rule 132 (end_par -> .)
    GREATER         reduce using rule 132 (end_par -> .)
    EQUAL           reduce using rule 132 (end_par -> .)
    NOTEQUAL        reduce using rule 132 (end_par -> .)
    GREATEROREQUAL  reduce using rule 132 (end_par -> .)
    LESSEROREQUAL   reduce using rule 132 (end_par -> .)
    COMMA           reduce using rule 132 (end_par -> .)
    SEMICOLON       reduce using rule 132 (end_par -> .)
    RPAREN          reduce using rule 132 (end_par -> .)
    RBRACKET        reduce using rule 132 (end_par -> .)

    end_par                        shift and go to state 271

state 248

    (48) assignment -> ID verify_id ASSIGN push_sign expression set_value . SEMICOLON

    SEMICOLON       shift and go to state 272


state 249

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (97) expression -> . exp expression1
    (105) exp -> . term top_exp exp1
    (110) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 117
    ID              shift and go to state 112
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106

    exp                            shift and go to state 114
    expression                     shift and go to state 273
    term                           shift and go to state 115
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    cte_bool                       shift and go to state 119
    call                           shift and go to state 103

state 250

    (138) call1 -> ID COMMA . call1
    (138) call1 -> . ID COMMA call1
    (139) call1 -> . exp
    (140) call1 -> . st_cte
    (105) exp -> . term top_exp exp1
    (59) st_cte -> . STRING
    (60) st_cte -> . cte_bool
    (110) term -> . factor top_factor term1
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (118) var_cte -> . ID getidvalue
    (119) var_cte -> . CTE_INT getvalue_i
    (120) var_cte -> . CTE_FLOAT getvalue_f
    (121) var_cte -> . cte_bool getvalue_b
    (122) var_cte -> . ID list getarrayvalue
    (123) var_cte -> . call getcallvalue
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 216
    STRING          shift and go to state 104
    TRUE            shift and go to state 105
    FALSE           shift and go to state 106
    LPAREN          shift and go to state 117
    CTE_INT         shift and go to state 100
    CTE_FLOAT       shift and go to state 101

    call1                          shift and go to state 274
    exp                            shift and go to state 218
    st_cte                         shift and go to state 219
    term                           shift and go to state 115
    cte_bool                       shift and go to state 220
    factor                         shift and go to state 116
    var_cte                        shift and go to state 118
    call                           shift and go to state 103

state 251

    (134) call -> ID check_name LPAREN create_era call1 RPAREN . SEMICOLON gosub

    SEMICOLON       shift and go to state 275


state 252

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (143) empty -> .

    RBRACE          reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)

    b2                             shift and go to state 276
    empty                          shift and go to state 33

state 253

    (73) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 277


state 254

    (74) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 278


state 255

    (75) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 279


state 256

    (45) while -> WHILE while_return LPAREN type_check expression RPAREN . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 280


state 257

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (65) funcs2 -> funcs2 . vars
    (66) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 281
    VAR             shift and go to state 12
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    vars                           shift and go to state 282
    statute                        shift and go to state 283
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 258

    (67) funcs2 -> empty .

    RBRACE          reduce using rule 67 (funcs2 -> empty .)
    VAR             reduce using rule 67 (funcs2 -> empty .)
    ID              reduce using rule 67 (funcs2 -> empty .)
    IF              reduce using rule 67 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 67 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 67 (funcs2 -> empty .)
    SQUARE          reduce using rule 67 (funcs2 -> empty .)
    CIRCLE          reduce using rule 67 (funcs2 -> empty .)
    POLIGON         reduce using rule 67 (funcs2 -> empty .)
    COLOR           reduce using rule 67 (funcs2 -> empty .)
    PENSIZE         reduce using rule 67 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 67 (funcs2 -> empty .)
    PENBACK         reduce using rule 67 (funcs2 -> empty .)
    ROTATE          reduce using rule 67 (funcs2 -> empty .)
    WHILE           reduce using rule 67 (funcs2 -> empty .)
    RETURN          reduce using rule 67 (funcs2 -> empty .)
    PENON           reduce using rule 67 (funcs2 -> empty .)
    PENOFF          reduce using rule 67 (funcs2 -> empty .)


state 259

    (63) funcs1 -> funcs1 COMMA type ID .

    RPAREN          reduce using rule 63 (funcs1 -> funcs1 COMMA type ID .)
    COMMA           reduce using rule 63 (funcs1 -> funcs1 COMMA type ID .)


state 260

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (65) funcs2 -> funcs2 . vars
    (66) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 284
    VAR             shift and go to state 12
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    vars                           shift and go to state 282
    statute                        shift and go to state 283
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 261

    (98) expression1 -> LESSER relop exp top_relop .

    COMMA           reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)
    RPAREN          reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)


state 262

    (99) expression1 -> GREATER relop exp top_relop .

    COMMA           reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)
    RPAREN          reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)


state 263

    (100) expression1 -> EQUAL relop exp top_relop .

    COMMA           reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)
    RPAREN          reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)


state 264

    (101) expression1 -> NOTEQUAL relop exp top_relop .

    COMMA           reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)
    RPAREN          reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)


state 265

    (102) expression1 -> GREATEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 266

    (103) expression1 -> LESSEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 267

    (106) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 106 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 106 (exp1 -> MINUS push_sign exp .)


state 268

    (107) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 107 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 107 (exp1 -> PLUS push_sign exp .)


state 269

    (111) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 111 (term1 -> DIVIDE push_sign term .)


state 270

    (112) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 112 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 112 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 112 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 112 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 112 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 112 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 112 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 112 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 112 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 112 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 112 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 112 (term1 -> TIMES push_sign term .)


state 271

    (114) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 272

    (48) assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .

    ID              reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    IF              reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    TRIANGLE        reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RECTANGLE       reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    SQUARE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    CIRCLE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    POLIGON         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    COLOR           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENSIZE         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENFORWARD      reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENBACK         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    ROTATE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    WHILE           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RETURN          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENON           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENOFF          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RBRACE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    VAR             reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)


state 273

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 285


state 274

    (138) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 138 (call1 -> ID COMMA call1 .)


state 275

    (134) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON . gosub
    (137) gosub -> .

    ID              reduce using rule 137 (gosub -> .)
    IF              reduce using rule 137 (gosub -> .)
    TRIANGLE        reduce using rule 137 (gosub -> .)
    RECTANGLE       reduce using rule 137 (gosub -> .)
    SQUARE          reduce using rule 137 (gosub -> .)
    CIRCLE          reduce using rule 137 (gosub -> .)
    POLIGON         reduce using rule 137 (gosub -> .)
    COLOR           reduce using rule 137 (gosub -> .)
    PENSIZE         reduce using rule 137 (gosub -> .)
    PENFORWARD      reduce using rule 137 (gosub -> .)
    PENBACK         reduce using rule 137 (gosub -> .)
    ROTATE          reduce using rule 137 (gosub -> .)
    WHILE           reduce using rule 137 (gosub -> .)
    RETURN          reduce using rule 137 (gosub -> .)
    PENON           reduce using rule 137 (gosub -> .)
    PENOFF          reduce using rule 137 (gosub -> .)
    RBRACE          reduce using rule 137 (gosub -> .)
    SEMICOLON       reduce using rule 137 (gosub -> .)
    DIVIDE          reduce using rule 137 (gosub -> .)
    TIMES           reduce using rule 137 (gosub -> .)
    MINUS           reduce using rule 137 (gosub -> .)
    PLUS            reduce using rule 137 (gosub -> .)
    LESSER          reduce using rule 137 (gosub -> .)
    GREATER         reduce using rule 137 (gosub -> .)
    EQUAL           reduce using rule 137 (gosub -> .)
    NOTEQUAL        reduce using rule 137 (gosub -> .)
    GREATEROREQUAL  reduce using rule 137 (gosub -> .)
    LESSEROREQUAL   reduce using rule 137 (gosub -> .)
    COMMA           reduce using rule 137 (gosub -> .)
    RPAREN          reduce using rule 137 (gosub -> .)
    RBRACKET        reduce using rule 137 (gosub -> .)
    VAR             reduce using rule 137 (gosub -> .)

    gosub                          shift and go to state 286

state 276

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (13) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 287
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 277

    (73) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 278

    (74) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 74 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 279

    (75) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 75 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 280

    (45) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE . b2 RBRACE end_while
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (143) empty -> .

    RBRACE          reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)

    b2                             shift and go to state 288
    empty                          shift and go to state 33

state 281

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (68) funcs3 -> . funcs
    (69) funcs3 -> . empty
    (61) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (62) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (143) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)

  ! FUNC            [ reduce using rule 143 (empty -> .) ]

    funcs3                         shift and go to state 289
    funcs                          shift and go to state 290
    empty                          shift and go to state 291

state 282

    (65) funcs2 -> funcs2 vars .

    RBRACE          reduce using rule 65 (funcs2 -> funcs2 vars .)
    VAR             reduce using rule 65 (funcs2 -> funcs2 vars .)
    ID              reduce using rule 65 (funcs2 -> funcs2 vars .)
    IF              reduce using rule 65 (funcs2 -> funcs2 vars .)
    TRIANGLE        reduce using rule 65 (funcs2 -> funcs2 vars .)
    RECTANGLE       reduce using rule 65 (funcs2 -> funcs2 vars .)
    SQUARE          reduce using rule 65 (funcs2 -> funcs2 vars .)
    CIRCLE          reduce using rule 65 (funcs2 -> funcs2 vars .)
    POLIGON         reduce using rule 65 (funcs2 -> funcs2 vars .)
    COLOR           reduce using rule 65 (funcs2 -> funcs2 vars .)
    PENSIZE         reduce using rule 65 (funcs2 -> funcs2 vars .)
    PENFORWARD      reduce using rule 65 (funcs2 -> funcs2 vars .)
    PENBACK         reduce using rule 65 (funcs2 -> funcs2 vars .)
    ROTATE          reduce using rule 65 (funcs2 -> funcs2 vars .)
    WHILE           reduce using rule 65 (funcs2 -> funcs2 vars .)
    RETURN          reduce using rule 65 (funcs2 -> funcs2 vars .)
    PENON           reduce using rule 65 (funcs2 -> funcs2 vars .)
    PENOFF          reduce using rule 65 (funcs2 -> funcs2 vars .)


state 283

    (66) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 66 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 66 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 66 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 66 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 66 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 66 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 66 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 66 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 66 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 66 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 66 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 66 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 66 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 66 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 66 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 66 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 66 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 66 (funcs2 -> funcs2 statute .)


state 284

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (68) funcs3 -> . funcs
    (69) funcs3 -> . empty
    (61) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (62) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (143) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)

  ! FUNC            [ reduce using rule 143 (empty -> .) ]

    funcs3                         shift and go to state 292
    funcs                          shift and go to state 290
    empty                          shift and go to state 291

state 285

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 286

    (134) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .

    ID              reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    IF              reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TRIANGLE        reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RECTANGLE       reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SQUARE          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    CIRCLE          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    POLIGON         reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COLOR           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENSIZE         reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENFORWARD      reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENBACK         reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    ROTATE          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    WHILE           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RETURN          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENON           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENOFF          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACE          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SEMICOLON       reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    DIVIDE          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TIMES           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    MINUS           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PLUS            reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSER          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATER         reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    EQUAL           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    NOTEQUAL        reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATEROREQUAL  reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSEROREQUAL   reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COMMA           reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RPAREN          reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACKET        reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    VAR             reduce using rule 134 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)


state 287

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (92) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (93) condition1 -> . empty
    (95) gotoElse -> .
    (143) empty -> .

    ELSE            reduce using rule 95 (gotoElse -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)
    RBRACE          reduce using rule 143 (empty -> .)
    VAR             reduce using rule 143 (empty -> .)

    condition1                     shift and go to state 293
    gotoElse                       shift and go to state 294
    empty                          shift and go to state 295

state 288

    (45) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 . RBRACE end_while
    (13) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 296
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 289

    (61) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 61 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 61 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 61 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 290

    (68) funcs3 -> funcs .

    DAVINCI         reduce using rule 68 (funcs3 -> funcs .)
    FUNC            reduce using rule 68 (funcs3 -> funcs .)
    VAR             reduce using rule 68 (funcs3 -> funcs .)


state 291

    (69) funcs3 -> empty .

    DAVINCI         reduce using rule 69 (funcs3 -> empty .)
    FUNC            reduce using rule 69 (funcs3 -> empty .)
    VAR             reduce using rule 69 (funcs3 -> empty .)


state 292

    (62) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 62 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 62 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 62 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 293

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (96) end_if -> .

    ID              reduce using rule 96 (end_if -> .)
    IF              reduce using rule 96 (end_if -> .)
    TRIANGLE        reduce using rule 96 (end_if -> .)
    RECTANGLE       reduce using rule 96 (end_if -> .)
    SQUARE          reduce using rule 96 (end_if -> .)
    CIRCLE          reduce using rule 96 (end_if -> .)
    POLIGON         reduce using rule 96 (end_if -> .)
    COLOR           reduce using rule 96 (end_if -> .)
    PENSIZE         reduce using rule 96 (end_if -> .)
    PENFORWARD      reduce using rule 96 (end_if -> .)
    PENBACK         reduce using rule 96 (end_if -> .)
    ROTATE          reduce using rule 96 (end_if -> .)
    WHILE           reduce using rule 96 (end_if -> .)
    RETURN          reduce using rule 96 (end_if -> .)
    PENON           reduce using rule 96 (end_if -> .)
    PENOFF          reduce using rule 96 (end_if -> .)
    RBRACE          reduce using rule 96 (end_if -> .)
    VAR             reduce using rule 96 (end_if -> .)

    end_if                         shift and go to state 297

state 294

    (92) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 298


state 295

    (93) condition1 -> empty .

    ID              reduce using rule 93 (condition1 -> empty .)
    IF              reduce using rule 93 (condition1 -> empty .)
    TRIANGLE        reduce using rule 93 (condition1 -> empty .)
    RECTANGLE       reduce using rule 93 (condition1 -> empty .)
    SQUARE          reduce using rule 93 (condition1 -> empty .)
    CIRCLE          reduce using rule 93 (condition1 -> empty .)
    POLIGON         reduce using rule 93 (condition1 -> empty .)
    COLOR           reduce using rule 93 (condition1 -> empty .)
    PENSIZE         reduce using rule 93 (condition1 -> empty .)
    PENFORWARD      reduce using rule 93 (condition1 -> empty .)
    PENBACK         reduce using rule 93 (condition1 -> empty .)
    ROTATE          reduce using rule 93 (condition1 -> empty .)
    WHILE           reduce using rule 93 (condition1 -> empty .)
    RETURN          reduce using rule 93 (condition1 -> empty .)
    PENON           reduce using rule 93 (condition1 -> empty .)
    PENOFF          reduce using rule 93 (condition1 -> empty .)
    RBRACE          reduce using rule 93 (condition1 -> empty .)
    VAR             reduce using rule 93 (condition1 -> empty .)


state 296

    (45) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE . end_while
    (47) end_while -> .

    ID              reduce using rule 47 (end_while -> .)
    IF              reduce using rule 47 (end_while -> .)
    TRIANGLE        reduce using rule 47 (end_while -> .)
    RECTANGLE       reduce using rule 47 (end_while -> .)
    SQUARE          reduce using rule 47 (end_while -> .)
    CIRCLE          reduce using rule 47 (end_while -> .)
    POLIGON         reduce using rule 47 (end_while -> .)
    COLOR           reduce using rule 47 (end_while -> .)
    PENSIZE         reduce using rule 47 (end_while -> .)
    PENFORWARD      reduce using rule 47 (end_while -> .)
    PENBACK         reduce using rule 47 (end_while -> .)
    ROTATE          reduce using rule 47 (end_while -> .)
    WHILE           reduce using rule 47 (end_while -> .)
    RETURN          reduce using rule 47 (end_while -> .)
    PENON           reduce using rule 47 (end_while -> .)
    PENOFF          reduce using rule 47 (end_while -> .)
    RBRACE          reduce using rule 47 (end_while -> .)
    VAR             reduce using rule 47 (end_while -> .)

    end_while                      shift and go to state 299

state 297

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    VAR             reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 298

    (92) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 300


state 299

    (45) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .

    ID              reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    VAR             reduce using rule 45 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)


state 300

    (92) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (143) empty -> .

    RBRACE          reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    TRIANGLE        reduce using rule 143 (empty -> .)
    RECTANGLE       reduce using rule 143 (empty -> .)
    SQUARE          reduce using rule 143 (empty -> .)
    CIRCLE          reduce using rule 143 (empty -> .)
    POLIGON         reduce using rule 143 (empty -> .)
    COLOR           reduce using rule 143 (empty -> .)
    PENSIZE         reduce using rule 143 (empty -> .)
    PENFORWARD      reduce using rule 143 (empty -> .)
    PENBACK         reduce using rule 143 (empty -> .)
    ROTATE          reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    PENON           reduce using rule 143 (empty -> .)
    PENOFF          reduce using rule 143 (empty -> .)

    b2                             shift and go to state 301
    empty                          shift and go to state 33

state 301

    (92) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (13) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . return
    (43) statute -> . penon
    (44) statute -> . penoff
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (134) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (73) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (74) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (72) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (71) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (75) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (78) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (79) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (80) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (76) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (141) return -> . RETURN var_cte SEMICOLON
    (142) return -> . RETURN st_cte SEMICOLON
    (81) penon -> . PENON LPAREN RPAREN SEMICOLON
    (82) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 302
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 302

    (92) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 281 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 284 resolved as shift
WARNING: reduce/reduce conflict in state 102 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 112 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 112
WARNING: reduce/reduce conflict in state 216 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 216
WARNING: reduce/reduce conflict in state 220 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 220
WARNING: Rule (push_id -> <empty>) is never reduced
