Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 DAVINCI block
Rule 2     program1 -> funcs
Rule 3     program1 -> vars
Rule 4     program1 -> funcs vars
Rule 5     program1 -> vars funcs
Rule 6     program1 -> empty
Rule 7     block -> LBRACE b1 RBRACE
Rule 8     b1 -> vars b2
Rule 9     b1 -> b2
Rule 10    b2 -> statute
Rule 11    b2 -> statute b2
Rule 12    b2 -> empty
Rule 13    vars -> VAR vars2
Rule 14    vars2 -> type vars3 SEMICOLON vars2
Rule 15    vars2 -> type vars3 SEMICOLON
Rule 16    vars3 -> ID ASSIGN expression vars4
Rule 17    vars3 -> ID list vars4
Rule 18    vars3 -> ID vars4
Rule 19    vars4 -> COMMA vars3
Rule 20    vars4 -> empty
Rule 21    list -> LBRACKET expression RBRACKET
Rule 22    statute -> assignment
Rule 23    statute -> call
Rule 24    statute -> condition
Rule 25    statute -> triangle
Rule 26    statute -> rectangle
Rule 27    statute -> square
Rule 28    statute -> circle
Rule 29    statute -> poligon
Rule 30    statute -> color
Rule 31    statute -> pensize
Rule 32    statute -> penforward
Rule 33    statute -> penback
Rule 34    statute -> rotate
Rule 35    statute -> WHILE
Rule 36    statute -> return
Rule 37    statute -> penon
Rule 38    statute -> penoff
Rule 39    assignment -> ID ASSIGN expression SEMICOLON
Rule 40    assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 41    color_cte -> RED
Rule 42    color_cte -> BLUE
Rule 43    color_cte -> YELLOW
Rule 44    color_cte -> GREEN
Rule 45    color_cte -> PINK
Rule 46    color_cte -> PURPLE
Rule 47    st_cte -> STRING
Rule 48    st_cte -> cte_bool
Rule 49    funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 50    funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 51    funcs1 -> COMMA type ID funcs1
Rule 52    funcs1 -> empty
Rule 53    funcs2 -> vars
Rule 54    funcs2 -> vars statute
Rule 55    funcs2 -> statute vars
Rule 56    funcs2 -> statute
Rule 57    funcs2 -> empty
Rule 58    funcs3 -> funcs
Rule 59    funcs3 -> empty
Rule 60    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 61    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 62    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 63    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 64    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 65    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 66    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 67    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 68    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 69    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 70    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 71    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 72    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 73    type -> INT
Rule 74    type -> FLOAT
Rule 75    type -> STRING
Rule 76    type -> BOOL
Rule 77    cte_bool -> TRUE
Rule 78    cte_bool -> FALSE
Rule 79    var_cte -> ID var_cte1
Rule 80    var_cte -> CTE_INT
Rule 81    var_cte -> CTE_FLOAT
Rule 82    var_cte -> CTE_BOOL
Rule 83    var_cte -> call
Rule 84    var_cte1 -> LBRACKET exp RBRACKET
Rule 85    var_cte1 -> LPAREN exp RPAREN
Rule 86    var_cte1 -> empty
Rule 87    condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
Rule 88    condition1 -> ELSE block
Rule 89    condition1 -> empty
Rule 90    expression -> exp expression1
Rule 91    expression1 -> LESSER exp
Rule 92    expression1 -> GREATER exp
Rule 93    expression1 -> EQUAL exp
Rule 94    expression1 -> NOTEQUAL exp
Rule 95    expression1 -> GREATEROREQUAL exp
Rule 96    expression1 -> LESSEROREQUAL exp
Rule 97    expression1 -> empty
Rule 98    exp -> term exp1
Rule 99    exp1 -> MINUS exp
Rule 100   exp1 -> PLUS exp
Rule 101   exp1 -> empty
Rule 102   factor -> LPAREN EXPRESSION RPAREN
Rule 103   factor -> var_cte
Rule 104   factor -> factor1 var_cte
Rule 105   factor1 -> MINUS
Rule 106   factor1 -> PLUS
Rule 107   factor1 -> empty
Rule 108   term -> factor term1
Rule 109   term1 -> DIVIDE term
Rule 110   term1 -> TIMES term
Rule 111   term1 -> empty
Rule 112   call -> ID LPAREN call1 RPAREN SEMICOLON
Rule 113   call1 -> ID COMMA call1
Rule 114   call1 -> exp
Rule 115   call1 -> st_cte
Rule 116   return -> RETURN var_cte SEMICOLON
Rule 117   return -> RETURN st_cte SEMICOLON
Rule 118   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 16 39 40
BLUE                 : 42
BOOL                 : 76
CIRCLE               : 61
COLOR                : 60
COMMA                : 19 51 63 64 65 113
CTE_BOOL             : 82
CTE_FLOAT            : 81
CTE_INT              : 80
CTE_STRING           : 67
DAVINCI              : 1
DIVIDE               : 109
ELSE                 : 88
EQUAL                : 93
EXPRESSION           : 87 102
FALSE                : 78
FLOAT                : 74
GREATER              : 92
GREATEROREQUAL       : 95
GREEN                : 44
ID                   : 1 16 17 18 39 40 49 49 50 50 51 79 112 113
IF                   : 87
INT                  : 73
LBRACE               : 7 49 50
LBRACKET             : 21 40 84
LESSER               : 91
LESSEROREQUAL        : 96
LPAREN               : 49 50 60 61 62 63 64 65 66 67 68 69 70 71 72 85 87 102 112
MINUS                : 99 105
NOT                  : 
NOTEQUAL             : 94
OR                   : 
PENBACK              : 70
PENFORWARD           : 69
PENOFF               : 72
PENON                : 71
PENSIZE              : 68
PINK                 : 45
PLUS                 : 100 106
POLIGON              : 65
PROGRAM              : 1
PURPLE               : 46
RBRACE               : 7 49 50
RBRACKET             : 21 40 84
RECTANGLE            : 64
RED                  : 41
RETURN               : 116 117
ROTATE               : 66 67
RPAREN               : 49 50 60 61 62 63 64 65 66 67 68 69 70 71 72 85 87 102 112
SEMICOLON            : 1 14 15 39 40 60 61 62 63 64 65 66 67 68 69 70 71 72 87 112 116 117
SIZE                 : 
SQUARE               : 62
STRING               : 47 75
ST_CTE               : 
TERM                 : 
TIMES                : 110
TRIANGLE             : 63
TRUE                 : 77
VAR                  : 13
VOID                 : 50
WHILE                : 35
YELLOW               : 43
error                : 

Nonterminals, with rules where they appear

assignment           : 22
b1                   : 7
b2                   : 8 9 11
block                : 1 87 88
call                 : 23 83
call1                : 112 113
circle               : 28
color                : 30
color_cte            : 60
condition            : 24
condition1           : 87
cte_bool             : 48
empty                : 6 12 20 52 57 59 86 89 97 101 107 111
exp                  : 40 61 62 63 63 64 64 65 65 66 68 69 70 84 85 90 91 92 93 94 95 96 99 100 114
exp1                 : 98
expression           : 16 21 39 40
expression1          : 90
factor               : 108
factor1              : 104
funcs                : 2 4 5 58
funcs1               : 49 50 51
funcs2               : 49 50
funcs3               : 49 50
list                 : 17
penback              : 33
penforward           : 32
penoff               : 38
penon                : 37
pensize              : 31
poligon              : 29
program              : 0
program1             : 1
rectangle            : 26
return               : 36
rotate               : 34
square               : 27
st_cte               : 115 117
statute              : 10 11 54 55 56
term                 : 98 109 110
term1                : 108
triangle             : 25
type                 : 14 15 49 49 50 51
var_cte              : 103 104 116
var_cte1             : 79
vars                 : 3 4 5 8 53 54 55
vars2                : 13 14
vars3                : 14 15 19
vars4                : 16 17 18

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 DAVINCI block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 DAVINCI block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 DAVINCI block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 DAVINCI block
    (2) program1 -> . funcs
    (3) program1 -> . vars
    (4) program1 -> . funcs vars
    (5) program1 -> . vars funcs
    (6) program1 -> . empty
    (49) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (13) vars -> . VAR vars2
    (118) empty -> .
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    VOID            shift and go to state 10
    VAR             shift and go to state 11
    DAVINCI         reduce using rule 118 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    program1                       shift and go to state 5
    funcs                          shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . DAVINCI block

    DAVINCI         shift and go to state 16


state 6

    (2) program1 -> funcs .
    (4) program1 -> funcs . vars
    (13) vars -> . VAR vars2

    DAVINCI         reduce using rule 2 (program1 -> funcs .)
    VAR             shift and go to state 11

    vars                           shift and go to state 17

state 7

    (3) program1 -> vars .
    (5) program1 -> vars . funcs
    (49) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    DAVINCI         reduce using rule 3 (program1 -> vars .)
    VOID            shift and go to state 10
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    funcs                          shift and go to state 18
    type                           shift and go to state 9

state 8

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)


state 9

    (49) funcs -> type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 19


state 10

    (50) funcs -> VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 20


state 11

    (13) vars -> VAR . vars2
    (14) vars2 -> . type vars3 SEMICOLON vars2
    (15) vars2 -> . type vars3 SEMICOLON
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    vars2                          shift and go to state 21
    type                           shift and go to state 22

state 12

    (73) type -> INT .

    ID              reduce using rule 73 (type -> INT .)


state 13

    (74) type -> FLOAT .

    ID              reduce using rule 74 (type -> FLOAT .)


state 14

    (75) type -> STRING .

    ID              reduce using rule 75 (type -> STRING .)


state 15

    (76) type -> BOOL .

    ID              reduce using rule 76 (type -> BOOL .)


state 16

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI . block
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 23

state 17

    (4) program1 -> funcs vars .

    DAVINCI         reduce using rule 4 (program1 -> funcs vars .)


state 18

    (5) program1 -> vars funcs .

    DAVINCI         reduce using rule 5 (program1 -> vars funcs .)


state 19

    (49) funcs -> type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 25


state 20

    (50) funcs -> VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 26


state 21

    (13) vars -> VAR vars2 .

    VOID            reduce using rule 13 (vars -> VAR vars2 .)
    INT             reduce using rule 13 (vars -> VAR vars2 .)
    FLOAT           reduce using rule 13 (vars -> VAR vars2 .)
    STRING          reduce using rule 13 (vars -> VAR vars2 .)
    BOOL            reduce using rule 13 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 13 (vars -> VAR vars2 .)
    WHILE           reduce using rule 13 (vars -> VAR vars2 .)
    ID              reduce using rule 13 (vars -> VAR vars2 .)
    IF              reduce using rule 13 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 13 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 13 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 13 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 13 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 13 (vars -> VAR vars2 .)
    COLOR           reduce using rule 13 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 13 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 13 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 13 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 13 (vars -> VAR vars2 .)
    RETURN          reduce using rule 13 (vars -> VAR vars2 .)
    PENON           reduce using rule 13 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 13 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 13 (vars -> VAR vars2 .)


state 22

    (14) vars2 -> type . vars3 SEMICOLON vars2
    (15) vars2 -> type . vars3 SEMICOLON
    (16) vars3 -> . ID ASSIGN expression vars4
    (17) vars3 -> . ID list vars4
    (18) vars3 -> . ID vars4

    ID              shift and go to state 28

    vars3                          shift and go to state 27

state 23

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 DAVINCI block .)


state 24

    (7) block -> LBRACE . b1 RBRACE
    (8) b1 -> . vars b2
    (9) b1 -> . b2
    (13) vars -> . VAR vars2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (118) empty -> .
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 118 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    b1                             shift and go to state 29
    vars                           shift and go to state 30
    b2                             shift and go to state 31
    statute                        shift and go to state 32
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 25

    (49) funcs -> type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 66

state 26

    (50) funcs -> VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 67

state 27

    (14) vars2 -> type vars3 . SEMICOLON vars2
    (15) vars2 -> type vars3 . SEMICOLON

    SEMICOLON       shift and go to state 68


state 28

    (16) vars3 -> ID . ASSIGN expression vars4
    (17) vars3 -> ID . list vars4
    (18) vars3 -> ID . vars4
    (21) list -> . LBRACKET expression RBRACKET
    (19) vars4 -> . COMMA vars3
    (20) vars4 -> . empty
    (118) empty -> .

    ASSIGN          shift and go to state 69
    LBRACKET        shift and go to state 72
    COMMA           shift and go to state 73
    SEMICOLON       reduce using rule 118 (empty -> .)

    vars4                          shift and go to state 70
    list                           shift and go to state 71
    empty                          shift and go to state 74

state 29

    (7) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 75


state 30

    (8) b1 -> vars . b2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (118) empty -> .
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    WHILE           shift and go to state 47
    RBRACE          reduce using rule 118 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    b2                             shift and go to state 76
    statute                        shift and go to state 32
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 31

    (9) b1 -> b2 .

    RBRACE          reduce using rule 9 (b1 -> b2 .)


state 32

    (10) b2 -> statute .
    (11) b2 -> statute . b2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (118) empty -> .
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

  ! reduce/reduce conflict for RBRACE resolved using rule 10 (b2 -> statute .)
    RBRACE          reduce using rule 10 (b2 -> statute .)
    WHILE           shift and go to state 47
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

  ! RBRACE          [ reduce using rule 118 (empty -> .) ]

    statute                        shift and go to state 32
    b2                             shift and go to state 77
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 33

    (12) b2 -> empty .

    RBRACE          reduce using rule 12 (b2 -> empty .)


state 34

    (22) statute -> assignment .

    WHILE           reduce using rule 22 (statute -> assignment .)
    ID              reduce using rule 22 (statute -> assignment .)
    IF              reduce using rule 22 (statute -> assignment .)
    TRIANGLE        reduce using rule 22 (statute -> assignment .)
    RECTANGLE       reduce using rule 22 (statute -> assignment .)
    SQUARE          reduce using rule 22 (statute -> assignment .)
    CIRCLE          reduce using rule 22 (statute -> assignment .)
    POLIGON         reduce using rule 22 (statute -> assignment .)
    COLOR           reduce using rule 22 (statute -> assignment .)
    PENSIZE         reduce using rule 22 (statute -> assignment .)
    PENFORWARD      reduce using rule 22 (statute -> assignment .)
    PENBACK         reduce using rule 22 (statute -> assignment .)
    ROTATE          reduce using rule 22 (statute -> assignment .)
    RETURN          reduce using rule 22 (statute -> assignment .)
    PENON           reduce using rule 22 (statute -> assignment .)
    PENOFF          reduce using rule 22 (statute -> assignment .)
    RBRACE          reduce using rule 22 (statute -> assignment .)
    VAR             reduce using rule 22 (statute -> assignment .)


state 35

    (23) statute -> call .

    WHILE           reduce using rule 23 (statute -> call .)
    ID              reduce using rule 23 (statute -> call .)
    IF              reduce using rule 23 (statute -> call .)
    TRIANGLE        reduce using rule 23 (statute -> call .)
    RECTANGLE       reduce using rule 23 (statute -> call .)
    SQUARE          reduce using rule 23 (statute -> call .)
    CIRCLE          reduce using rule 23 (statute -> call .)
    POLIGON         reduce using rule 23 (statute -> call .)
    COLOR           reduce using rule 23 (statute -> call .)
    PENSIZE         reduce using rule 23 (statute -> call .)
    PENFORWARD      reduce using rule 23 (statute -> call .)
    PENBACK         reduce using rule 23 (statute -> call .)
    ROTATE          reduce using rule 23 (statute -> call .)
    RETURN          reduce using rule 23 (statute -> call .)
    PENON           reduce using rule 23 (statute -> call .)
    PENOFF          reduce using rule 23 (statute -> call .)
    RBRACE          reduce using rule 23 (statute -> call .)
    VAR             reduce using rule 23 (statute -> call .)


state 36

    (24) statute -> condition .

    WHILE           reduce using rule 24 (statute -> condition .)
    ID              reduce using rule 24 (statute -> condition .)
    IF              reduce using rule 24 (statute -> condition .)
    TRIANGLE        reduce using rule 24 (statute -> condition .)
    RECTANGLE       reduce using rule 24 (statute -> condition .)
    SQUARE          reduce using rule 24 (statute -> condition .)
    CIRCLE          reduce using rule 24 (statute -> condition .)
    POLIGON         reduce using rule 24 (statute -> condition .)
    COLOR           reduce using rule 24 (statute -> condition .)
    PENSIZE         reduce using rule 24 (statute -> condition .)
    PENFORWARD      reduce using rule 24 (statute -> condition .)
    PENBACK         reduce using rule 24 (statute -> condition .)
    ROTATE          reduce using rule 24 (statute -> condition .)
    RETURN          reduce using rule 24 (statute -> condition .)
    PENON           reduce using rule 24 (statute -> condition .)
    PENOFF          reduce using rule 24 (statute -> condition .)
    RBRACE          reduce using rule 24 (statute -> condition .)
    VAR             reduce using rule 24 (statute -> condition .)


state 37

    (25) statute -> triangle .

    WHILE           reduce using rule 25 (statute -> triangle .)
    ID              reduce using rule 25 (statute -> triangle .)
    IF              reduce using rule 25 (statute -> triangle .)
    TRIANGLE        reduce using rule 25 (statute -> triangle .)
    RECTANGLE       reduce using rule 25 (statute -> triangle .)
    SQUARE          reduce using rule 25 (statute -> triangle .)
    CIRCLE          reduce using rule 25 (statute -> triangle .)
    POLIGON         reduce using rule 25 (statute -> triangle .)
    COLOR           reduce using rule 25 (statute -> triangle .)
    PENSIZE         reduce using rule 25 (statute -> triangle .)
    PENFORWARD      reduce using rule 25 (statute -> triangle .)
    PENBACK         reduce using rule 25 (statute -> triangle .)
    ROTATE          reduce using rule 25 (statute -> triangle .)
    RETURN          reduce using rule 25 (statute -> triangle .)
    PENON           reduce using rule 25 (statute -> triangle .)
    PENOFF          reduce using rule 25 (statute -> triangle .)
    RBRACE          reduce using rule 25 (statute -> triangle .)
    VAR             reduce using rule 25 (statute -> triangle .)


state 38

    (26) statute -> rectangle .

    WHILE           reduce using rule 26 (statute -> rectangle .)
    ID              reduce using rule 26 (statute -> rectangle .)
    IF              reduce using rule 26 (statute -> rectangle .)
    TRIANGLE        reduce using rule 26 (statute -> rectangle .)
    RECTANGLE       reduce using rule 26 (statute -> rectangle .)
    SQUARE          reduce using rule 26 (statute -> rectangle .)
    CIRCLE          reduce using rule 26 (statute -> rectangle .)
    POLIGON         reduce using rule 26 (statute -> rectangle .)
    COLOR           reduce using rule 26 (statute -> rectangle .)
    PENSIZE         reduce using rule 26 (statute -> rectangle .)
    PENFORWARD      reduce using rule 26 (statute -> rectangle .)
    PENBACK         reduce using rule 26 (statute -> rectangle .)
    ROTATE          reduce using rule 26 (statute -> rectangle .)
    RETURN          reduce using rule 26 (statute -> rectangle .)
    PENON           reduce using rule 26 (statute -> rectangle .)
    PENOFF          reduce using rule 26 (statute -> rectangle .)
    RBRACE          reduce using rule 26 (statute -> rectangle .)
    VAR             reduce using rule 26 (statute -> rectangle .)


state 39

    (27) statute -> square .

    WHILE           reduce using rule 27 (statute -> square .)
    ID              reduce using rule 27 (statute -> square .)
    IF              reduce using rule 27 (statute -> square .)
    TRIANGLE        reduce using rule 27 (statute -> square .)
    RECTANGLE       reduce using rule 27 (statute -> square .)
    SQUARE          reduce using rule 27 (statute -> square .)
    CIRCLE          reduce using rule 27 (statute -> square .)
    POLIGON         reduce using rule 27 (statute -> square .)
    COLOR           reduce using rule 27 (statute -> square .)
    PENSIZE         reduce using rule 27 (statute -> square .)
    PENFORWARD      reduce using rule 27 (statute -> square .)
    PENBACK         reduce using rule 27 (statute -> square .)
    ROTATE          reduce using rule 27 (statute -> square .)
    RETURN          reduce using rule 27 (statute -> square .)
    PENON           reduce using rule 27 (statute -> square .)
    PENOFF          reduce using rule 27 (statute -> square .)
    RBRACE          reduce using rule 27 (statute -> square .)
    VAR             reduce using rule 27 (statute -> square .)


state 40

    (28) statute -> circle .

    WHILE           reduce using rule 28 (statute -> circle .)
    ID              reduce using rule 28 (statute -> circle .)
    IF              reduce using rule 28 (statute -> circle .)
    TRIANGLE        reduce using rule 28 (statute -> circle .)
    RECTANGLE       reduce using rule 28 (statute -> circle .)
    SQUARE          reduce using rule 28 (statute -> circle .)
    CIRCLE          reduce using rule 28 (statute -> circle .)
    POLIGON         reduce using rule 28 (statute -> circle .)
    COLOR           reduce using rule 28 (statute -> circle .)
    PENSIZE         reduce using rule 28 (statute -> circle .)
    PENFORWARD      reduce using rule 28 (statute -> circle .)
    PENBACK         reduce using rule 28 (statute -> circle .)
    ROTATE          reduce using rule 28 (statute -> circle .)
    RETURN          reduce using rule 28 (statute -> circle .)
    PENON           reduce using rule 28 (statute -> circle .)
    PENOFF          reduce using rule 28 (statute -> circle .)
    RBRACE          reduce using rule 28 (statute -> circle .)
    VAR             reduce using rule 28 (statute -> circle .)


state 41

    (29) statute -> poligon .

    WHILE           reduce using rule 29 (statute -> poligon .)
    ID              reduce using rule 29 (statute -> poligon .)
    IF              reduce using rule 29 (statute -> poligon .)
    TRIANGLE        reduce using rule 29 (statute -> poligon .)
    RECTANGLE       reduce using rule 29 (statute -> poligon .)
    SQUARE          reduce using rule 29 (statute -> poligon .)
    CIRCLE          reduce using rule 29 (statute -> poligon .)
    POLIGON         reduce using rule 29 (statute -> poligon .)
    COLOR           reduce using rule 29 (statute -> poligon .)
    PENSIZE         reduce using rule 29 (statute -> poligon .)
    PENFORWARD      reduce using rule 29 (statute -> poligon .)
    PENBACK         reduce using rule 29 (statute -> poligon .)
    ROTATE          reduce using rule 29 (statute -> poligon .)
    RETURN          reduce using rule 29 (statute -> poligon .)
    PENON           reduce using rule 29 (statute -> poligon .)
    PENOFF          reduce using rule 29 (statute -> poligon .)
    RBRACE          reduce using rule 29 (statute -> poligon .)
    VAR             reduce using rule 29 (statute -> poligon .)


state 42

    (30) statute -> color .

    WHILE           reduce using rule 30 (statute -> color .)
    ID              reduce using rule 30 (statute -> color .)
    IF              reduce using rule 30 (statute -> color .)
    TRIANGLE        reduce using rule 30 (statute -> color .)
    RECTANGLE       reduce using rule 30 (statute -> color .)
    SQUARE          reduce using rule 30 (statute -> color .)
    CIRCLE          reduce using rule 30 (statute -> color .)
    POLIGON         reduce using rule 30 (statute -> color .)
    COLOR           reduce using rule 30 (statute -> color .)
    PENSIZE         reduce using rule 30 (statute -> color .)
    PENFORWARD      reduce using rule 30 (statute -> color .)
    PENBACK         reduce using rule 30 (statute -> color .)
    ROTATE          reduce using rule 30 (statute -> color .)
    RETURN          reduce using rule 30 (statute -> color .)
    PENON           reduce using rule 30 (statute -> color .)
    PENOFF          reduce using rule 30 (statute -> color .)
    RBRACE          reduce using rule 30 (statute -> color .)
    VAR             reduce using rule 30 (statute -> color .)


state 43

    (31) statute -> pensize .

    WHILE           reduce using rule 31 (statute -> pensize .)
    ID              reduce using rule 31 (statute -> pensize .)
    IF              reduce using rule 31 (statute -> pensize .)
    TRIANGLE        reduce using rule 31 (statute -> pensize .)
    RECTANGLE       reduce using rule 31 (statute -> pensize .)
    SQUARE          reduce using rule 31 (statute -> pensize .)
    CIRCLE          reduce using rule 31 (statute -> pensize .)
    POLIGON         reduce using rule 31 (statute -> pensize .)
    COLOR           reduce using rule 31 (statute -> pensize .)
    PENSIZE         reduce using rule 31 (statute -> pensize .)
    PENFORWARD      reduce using rule 31 (statute -> pensize .)
    PENBACK         reduce using rule 31 (statute -> pensize .)
    ROTATE          reduce using rule 31 (statute -> pensize .)
    RETURN          reduce using rule 31 (statute -> pensize .)
    PENON           reduce using rule 31 (statute -> pensize .)
    PENOFF          reduce using rule 31 (statute -> pensize .)
    RBRACE          reduce using rule 31 (statute -> pensize .)
    VAR             reduce using rule 31 (statute -> pensize .)


state 44

    (32) statute -> penforward .

    WHILE           reduce using rule 32 (statute -> penforward .)
    ID              reduce using rule 32 (statute -> penforward .)
    IF              reduce using rule 32 (statute -> penforward .)
    TRIANGLE        reduce using rule 32 (statute -> penforward .)
    RECTANGLE       reduce using rule 32 (statute -> penforward .)
    SQUARE          reduce using rule 32 (statute -> penforward .)
    CIRCLE          reduce using rule 32 (statute -> penforward .)
    POLIGON         reduce using rule 32 (statute -> penforward .)
    COLOR           reduce using rule 32 (statute -> penforward .)
    PENSIZE         reduce using rule 32 (statute -> penforward .)
    PENFORWARD      reduce using rule 32 (statute -> penforward .)
    PENBACK         reduce using rule 32 (statute -> penforward .)
    ROTATE          reduce using rule 32 (statute -> penforward .)
    RETURN          reduce using rule 32 (statute -> penforward .)
    PENON           reduce using rule 32 (statute -> penforward .)
    PENOFF          reduce using rule 32 (statute -> penforward .)
    RBRACE          reduce using rule 32 (statute -> penforward .)
    VAR             reduce using rule 32 (statute -> penforward .)


state 45

    (33) statute -> penback .

    WHILE           reduce using rule 33 (statute -> penback .)
    ID              reduce using rule 33 (statute -> penback .)
    IF              reduce using rule 33 (statute -> penback .)
    TRIANGLE        reduce using rule 33 (statute -> penback .)
    RECTANGLE       reduce using rule 33 (statute -> penback .)
    SQUARE          reduce using rule 33 (statute -> penback .)
    CIRCLE          reduce using rule 33 (statute -> penback .)
    POLIGON         reduce using rule 33 (statute -> penback .)
    COLOR           reduce using rule 33 (statute -> penback .)
    PENSIZE         reduce using rule 33 (statute -> penback .)
    PENFORWARD      reduce using rule 33 (statute -> penback .)
    PENBACK         reduce using rule 33 (statute -> penback .)
    ROTATE          reduce using rule 33 (statute -> penback .)
    RETURN          reduce using rule 33 (statute -> penback .)
    PENON           reduce using rule 33 (statute -> penback .)
    PENOFF          reduce using rule 33 (statute -> penback .)
    RBRACE          reduce using rule 33 (statute -> penback .)
    VAR             reduce using rule 33 (statute -> penback .)


state 46

    (34) statute -> rotate .

    WHILE           reduce using rule 34 (statute -> rotate .)
    ID              reduce using rule 34 (statute -> rotate .)
    IF              reduce using rule 34 (statute -> rotate .)
    TRIANGLE        reduce using rule 34 (statute -> rotate .)
    RECTANGLE       reduce using rule 34 (statute -> rotate .)
    SQUARE          reduce using rule 34 (statute -> rotate .)
    CIRCLE          reduce using rule 34 (statute -> rotate .)
    POLIGON         reduce using rule 34 (statute -> rotate .)
    COLOR           reduce using rule 34 (statute -> rotate .)
    PENSIZE         reduce using rule 34 (statute -> rotate .)
    PENFORWARD      reduce using rule 34 (statute -> rotate .)
    PENBACK         reduce using rule 34 (statute -> rotate .)
    ROTATE          reduce using rule 34 (statute -> rotate .)
    RETURN          reduce using rule 34 (statute -> rotate .)
    PENON           reduce using rule 34 (statute -> rotate .)
    PENOFF          reduce using rule 34 (statute -> rotate .)
    RBRACE          reduce using rule 34 (statute -> rotate .)
    VAR             reduce using rule 34 (statute -> rotate .)


state 47

    (35) statute -> WHILE .

    WHILE           reduce using rule 35 (statute -> WHILE .)
    ID              reduce using rule 35 (statute -> WHILE .)
    IF              reduce using rule 35 (statute -> WHILE .)
    TRIANGLE        reduce using rule 35 (statute -> WHILE .)
    RECTANGLE       reduce using rule 35 (statute -> WHILE .)
    SQUARE          reduce using rule 35 (statute -> WHILE .)
    CIRCLE          reduce using rule 35 (statute -> WHILE .)
    POLIGON         reduce using rule 35 (statute -> WHILE .)
    COLOR           reduce using rule 35 (statute -> WHILE .)
    PENSIZE         reduce using rule 35 (statute -> WHILE .)
    PENFORWARD      reduce using rule 35 (statute -> WHILE .)
    PENBACK         reduce using rule 35 (statute -> WHILE .)
    ROTATE          reduce using rule 35 (statute -> WHILE .)
    RETURN          reduce using rule 35 (statute -> WHILE .)
    PENON           reduce using rule 35 (statute -> WHILE .)
    PENOFF          reduce using rule 35 (statute -> WHILE .)
    RBRACE          reduce using rule 35 (statute -> WHILE .)
    VAR             reduce using rule 35 (statute -> WHILE .)


state 48

    (36) statute -> return .

    WHILE           reduce using rule 36 (statute -> return .)
    ID              reduce using rule 36 (statute -> return .)
    IF              reduce using rule 36 (statute -> return .)
    TRIANGLE        reduce using rule 36 (statute -> return .)
    RECTANGLE       reduce using rule 36 (statute -> return .)
    SQUARE          reduce using rule 36 (statute -> return .)
    CIRCLE          reduce using rule 36 (statute -> return .)
    POLIGON         reduce using rule 36 (statute -> return .)
    COLOR           reduce using rule 36 (statute -> return .)
    PENSIZE         reduce using rule 36 (statute -> return .)
    PENFORWARD      reduce using rule 36 (statute -> return .)
    PENBACK         reduce using rule 36 (statute -> return .)
    ROTATE          reduce using rule 36 (statute -> return .)
    RETURN          reduce using rule 36 (statute -> return .)
    PENON           reduce using rule 36 (statute -> return .)
    PENOFF          reduce using rule 36 (statute -> return .)
    RBRACE          reduce using rule 36 (statute -> return .)
    VAR             reduce using rule 36 (statute -> return .)


state 49

    (37) statute -> penon .

    WHILE           reduce using rule 37 (statute -> penon .)
    ID              reduce using rule 37 (statute -> penon .)
    IF              reduce using rule 37 (statute -> penon .)
    TRIANGLE        reduce using rule 37 (statute -> penon .)
    RECTANGLE       reduce using rule 37 (statute -> penon .)
    SQUARE          reduce using rule 37 (statute -> penon .)
    CIRCLE          reduce using rule 37 (statute -> penon .)
    POLIGON         reduce using rule 37 (statute -> penon .)
    COLOR           reduce using rule 37 (statute -> penon .)
    PENSIZE         reduce using rule 37 (statute -> penon .)
    PENFORWARD      reduce using rule 37 (statute -> penon .)
    PENBACK         reduce using rule 37 (statute -> penon .)
    ROTATE          reduce using rule 37 (statute -> penon .)
    RETURN          reduce using rule 37 (statute -> penon .)
    PENON           reduce using rule 37 (statute -> penon .)
    PENOFF          reduce using rule 37 (statute -> penon .)
    RBRACE          reduce using rule 37 (statute -> penon .)
    VAR             reduce using rule 37 (statute -> penon .)


state 50

    (38) statute -> penoff .

    WHILE           reduce using rule 38 (statute -> penoff .)
    ID              reduce using rule 38 (statute -> penoff .)
    IF              reduce using rule 38 (statute -> penoff .)
    TRIANGLE        reduce using rule 38 (statute -> penoff .)
    RECTANGLE       reduce using rule 38 (statute -> penoff .)
    SQUARE          reduce using rule 38 (statute -> penoff .)
    CIRCLE          reduce using rule 38 (statute -> penoff .)
    POLIGON         reduce using rule 38 (statute -> penoff .)
    COLOR           reduce using rule 38 (statute -> penoff .)
    PENSIZE         reduce using rule 38 (statute -> penoff .)
    PENFORWARD      reduce using rule 38 (statute -> penoff .)
    PENBACK         reduce using rule 38 (statute -> penoff .)
    ROTATE          reduce using rule 38 (statute -> penoff .)
    RETURN          reduce using rule 38 (statute -> penoff .)
    PENON           reduce using rule 38 (statute -> penoff .)
    PENOFF          reduce using rule 38 (statute -> penoff .)
    RBRACE          reduce using rule 38 (statute -> penoff .)
    VAR             reduce using rule 38 (statute -> penoff .)


state 51

    (39) assignment -> ID . ASSIGN expression SEMICOLON
    (40) assignment -> ID . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> ID . LPAREN call1 RPAREN SEMICOLON

    ASSIGN          shift and go to state 78
    LBRACKET        shift and go to state 79
    LPAREN          shift and go to state 80


state 52

    (87) condition -> IF . LPAREN EXPRESSION RPAREN block condition1 SEMICOLON

    LPAREN          shift and go to state 81


state 53

    (63) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 54

    (64) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 55

    (62) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 56

    (61) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 57

    (65) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 58

    (60) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 59

    (68) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 60

    (69) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 61

    (70) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 62

    (66) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (67) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 63

    (116) return -> RETURN . var_cte SEMICOLON
    (117) return -> RETURN . st_cte SEMICOLON
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE

    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    STRING          shift and go to state 99
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102

    var_cte                        shift and go to state 92
    st_cte                         shift and go to state 93
    call                           shift and go to state 98
    cte_bool                       shift and go to state 100

state 64

    (71) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 103


state 65

    (72) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 66

    (49) funcs -> type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 105


state 67

    (50) funcs -> VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 106


state 68

    (14) vars2 -> type vars3 SEMICOLON . vars2
    (15) vars2 -> type vars3 SEMICOLON .
    (14) vars2 -> . type vars3 SEMICOLON vars2
    (15) vars2 -> . type vars3 SEMICOLON
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    DAVINCI         reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    WHILE           reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    ID              reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    IF              reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    TRIANGLE        reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    RECTANGLE       reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    SQUARE          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    CIRCLE          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    POLIGON         reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    COLOR           reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    PENSIZE         reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    PENFORWARD      reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    PENBACK         reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    ROTATE          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    RETURN          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    PENON           reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    PENOFF          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    RBRACE          reduce using rule 15 (vars2 -> type vars3 SEMICOLON .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

  ! INT             [ reduce using rule 15 (vars2 -> type vars3 SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 15 (vars2 -> type vars3 SEMICOLON .) ]
  ! STRING          [ reduce using rule 15 (vars2 -> type vars3 SEMICOLON .) ]
  ! BOOL            [ reduce using rule 15 (vars2 -> type vars3 SEMICOLON .) ]

    type                           shift and go to state 22
    vars2                          shift and go to state 107

state 69

    (16) vars3 -> ID ASSIGN . expression vars4
    (90) expression -> . exp expression1
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    expression                     shift and go to state 108
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 70

    (18) vars3 -> ID vars4 .

    SEMICOLON       reduce using rule 18 (vars3 -> ID vars4 .)


state 71

    (17) vars3 -> ID list . vars4
    (19) vars4 -> . COMMA vars3
    (20) vars4 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 73
    SEMICOLON       reduce using rule 118 (empty -> .)

    vars4                          shift and go to state 118
    empty                          shift and go to state 74

state 72

    (21) list -> LBRACKET . expression RBRACKET
    (90) expression -> . exp expression1
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    expression                     shift and go to state 119
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 73

    (19) vars4 -> COMMA . vars3
    (16) vars3 -> . ID ASSIGN expression vars4
    (17) vars3 -> . ID list vars4
    (18) vars3 -> . ID vars4

    ID              shift and go to state 28

    vars3                          shift and go to state 120

state 74

    (20) vars4 -> empty .

    SEMICOLON       reduce using rule 20 (vars4 -> empty .)


state 75

    (7) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 7 (block -> LBRACE b1 RBRACE .)
    ELSE            reduce using rule 7 (block -> LBRACE b1 RBRACE .)
    SEMICOLON       reduce using rule 7 (block -> LBRACE b1 RBRACE .)


state 76

    (8) b1 -> vars b2 .

    RBRACE          reduce using rule 8 (b1 -> vars b2 .)


state 77

    (11) b2 -> statute b2 .

    RBRACE          reduce using rule 11 (b2 -> statute b2 .)


state 78

    (39) assignment -> ID ASSIGN . expression SEMICOLON
    (90) expression -> . exp expression1
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    expression                     shift and go to state 121
    exp                            shift and go to state 109
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 79

    (40) assignment -> ID LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 122
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 80

    (112) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (113) call1 -> . ID COMMA call1
    (114) call1 -> . exp
    (115) call1 -> . st_cte
    (98) exp -> . term exp1
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (108) term -> . factor term1
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    ID              shift and go to state 123
    STRING          shift and go to state 99
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    LPAREN          shift and go to state 112
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    call1                          shift and go to state 124
    exp                            shift and go to state 125
    st_cte                         shift and go to state 126
    term                           shift and go to state 110
    cte_bool                       shift and go to state 100
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 81

    (87) condition -> IF LPAREN . EXPRESSION RPAREN block condition1 SEMICOLON

    EXPRESSION      shift and go to state 127


state 82

    (63) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 128
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 83

    (64) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 129
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 84

    (62) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 130
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 85

    (61) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 131
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 86

    (65) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 132
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 87

    (60) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (41) color_cte -> . RED
    (42) color_cte -> . BLUE
    (43) color_cte -> . YELLOW
    (44) color_cte -> . GREEN
    (45) color_cte -> . PINK
    (46) color_cte -> . PURPLE

    RED             shift and go to state 134
    BLUE            shift and go to state 135
    YELLOW          shift and go to state 136
    GREEN           shift and go to state 137
    PINK            shift and go to state 138
    PURPLE          shift and go to state 139

    color_cte                      shift and go to state 133

state 88

    (68) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 140
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 89

    (69) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 141
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 90

    (70) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 142
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 91

    (66) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (67) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    CTE_STRING      shift and go to state 144
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 143
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 92

    (116) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 145


state 93

    (117) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 146


state 94

    (79) var_cte -> ID . var_cte1
    (112) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (84) var_cte1 -> . LBRACKET exp RBRACKET
    (85) var_cte1 -> . LPAREN exp RPAREN
    (86) var_cte1 -> . empty
    (118) empty -> .

    LPAREN          shift and go to state 148
    LBRACKET        shift and go to state 149
    SEMICOLON       reduce using rule 118 (empty -> .)
    DIVIDE          reduce using rule 118 (empty -> .)
    TIMES           reduce using rule 118 (empty -> .)
    MINUS           reduce using rule 118 (empty -> .)
    PLUS            reduce using rule 118 (empty -> .)
    LESSER          reduce using rule 118 (empty -> .)
    GREATER         reduce using rule 118 (empty -> .)
    EQUAL           reduce using rule 118 (empty -> .)
    NOTEQUAL        reduce using rule 118 (empty -> .)
    GREATEROREQUAL  reduce using rule 118 (empty -> .)
    LESSEROREQUAL   reduce using rule 118 (empty -> .)
    COMMA           reduce using rule 118 (empty -> .)
    RBRACKET        reduce using rule 118 (empty -> .)
    RPAREN          reduce using rule 118 (empty -> .)

    var_cte1                       shift and go to state 147
    empty                          shift and go to state 150

state 95

    (80) var_cte -> CTE_INT .

    SEMICOLON       reduce using rule 80 (var_cte -> CTE_INT .)
    DIVIDE          reduce using rule 80 (var_cte -> CTE_INT .)
    TIMES           reduce using rule 80 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 80 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 80 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 80 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 80 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 80 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 80 (var_cte -> CTE_INT .)
    GREATEROREQUAL  reduce using rule 80 (var_cte -> CTE_INT .)
    LESSEROREQUAL   reduce using rule 80 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 80 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 80 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 80 (var_cte -> CTE_INT .)


state 96

    (81) var_cte -> CTE_FLOAT .

    SEMICOLON       reduce using rule 81 (var_cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 81 (var_cte -> CTE_FLOAT .)
    TIMES           reduce using rule 81 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 81 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 81 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 81 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 81 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 81 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 81 (var_cte -> CTE_FLOAT .)
    GREATEROREQUAL  reduce using rule 81 (var_cte -> CTE_FLOAT .)
    LESSEROREQUAL   reduce using rule 81 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 81 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 81 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 81 (var_cte -> CTE_FLOAT .)


state 97

    (82) var_cte -> CTE_BOOL .

    SEMICOLON       reduce using rule 82 (var_cte -> CTE_BOOL .)
    DIVIDE          reduce using rule 82 (var_cte -> CTE_BOOL .)
    TIMES           reduce using rule 82 (var_cte -> CTE_BOOL .)
    MINUS           reduce using rule 82 (var_cte -> CTE_BOOL .)
    PLUS            reduce using rule 82 (var_cte -> CTE_BOOL .)
    LESSER          reduce using rule 82 (var_cte -> CTE_BOOL .)
    GREATER         reduce using rule 82 (var_cte -> CTE_BOOL .)
    EQUAL           reduce using rule 82 (var_cte -> CTE_BOOL .)
    NOTEQUAL        reduce using rule 82 (var_cte -> CTE_BOOL .)
    GREATEROREQUAL  reduce using rule 82 (var_cte -> CTE_BOOL .)
    LESSEROREQUAL   reduce using rule 82 (var_cte -> CTE_BOOL .)
    COMMA           reduce using rule 82 (var_cte -> CTE_BOOL .)
    RBRACKET        reduce using rule 82 (var_cte -> CTE_BOOL .)
    RPAREN          reduce using rule 82 (var_cte -> CTE_BOOL .)


state 98

    (83) var_cte -> call .

    SEMICOLON       reduce using rule 83 (var_cte -> call .)
    DIVIDE          reduce using rule 83 (var_cte -> call .)
    TIMES           reduce using rule 83 (var_cte -> call .)
    MINUS           reduce using rule 83 (var_cte -> call .)
    PLUS            reduce using rule 83 (var_cte -> call .)
    LESSER          reduce using rule 83 (var_cte -> call .)
    GREATER         reduce using rule 83 (var_cte -> call .)
    EQUAL           reduce using rule 83 (var_cte -> call .)
    NOTEQUAL        reduce using rule 83 (var_cte -> call .)
    GREATEROREQUAL  reduce using rule 83 (var_cte -> call .)
    LESSEROREQUAL   reduce using rule 83 (var_cte -> call .)
    COMMA           reduce using rule 83 (var_cte -> call .)
    RBRACKET        reduce using rule 83 (var_cte -> call .)
    RPAREN          reduce using rule 83 (var_cte -> call .)


state 99

    (47) st_cte -> STRING .

    SEMICOLON       reduce using rule 47 (st_cte -> STRING .)
    RPAREN          reduce using rule 47 (st_cte -> STRING .)


state 100

    (48) st_cte -> cte_bool .

    SEMICOLON       reduce using rule 48 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 48 (st_cte -> cte_bool .)


state 101

    (77) cte_bool -> TRUE .

    SEMICOLON       reduce using rule 77 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 77 (cte_bool -> TRUE .)


state 102

    (78) cte_bool -> FALSE .

    SEMICOLON       reduce using rule 78 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 78 (cte_bool -> FALSE .)


state 103

    (71) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 151


state 104

    (72) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 105

    (49) funcs -> type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> . COMMA type ID funcs1
    (52) funcs1 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 118 (empty -> .)

    funcs1                         shift and go to state 153
    empty                          shift and go to state 155

state 106

    (50) funcs -> VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs1 -> . COMMA type ID funcs1
    (52) funcs1 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 118 (empty -> .)

    funcs1                         shift and go to state 156
    empty                          shift and go to state 155

state 107

    (14) vars2 -> type vars3 SEMICOLON vars2 .

    VOID            reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    INT             reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    FLOAT           reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    STRING          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    BOOL            reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    DAVINCI         reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 14 (vars2 -> type vars3 SEMICOLON vars2 .)


state 108

    (16) vars3 -> ID ASSIGN expression . vars4
    (19) vars4 -> . COMMA vars3
    (20) vars4 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 73
    SEMICOLON       reduce using rule 118 (empty -> .)

    vars4                          shift and go to state 157
    empty                          shift and go to state 74

state 109

    (90) expression -> exp . expression1
    (91) expression1 -> . LESSER exp
    (92) expression1 -> . GREATER exp
    (93) expression1 -> . EQUAL exp
    (94) expression1 -> . NOTEQUAL exp
    (95) expression1 -> . GREATEROREQUAL exp
    (96) expression1 -> . LESSEROREQUAL exp
    (97) expression1 -> . empty
    (118) empty -> .

    LESSER          shift and go to state 159
    GREATER         shift and go to state 160
    EQUAL           shift and go to state 161
    NOTEQUAL        shift and go to state 162
    GREATEROREQUAL  shift and go to state 163
    LESSEROREQUAL   shift and go to state 164
    COMMA           reduce using rule 118 (empty -> .)
    SEMICOLON       reduce using rule 118 (empty -> .)
    RBRACKET        reduce using rule 118 (empty -> .)

    expression1                    shift and go to state 158
    empty                          shift and go to state 165

state 110

    (98) exp -> term . exp1
    (99) exp1 -> . MINUS exp
    (100) exp1 -> . PLUS exp
    (101) exp1 -> . empty
    (118) empty -> .

    MINUS           shift and go to state 167
    PLUS            shift and go to state 168
    LESSER          reduce using rule 118 (empty -> .)
    GREATER         reduce using rule 118 (empty -> .)
    EQUAL           reduce using rule 118 (empty -> .)
    NOTEQUAL        reduce using rule 118 (empty -> .)
    GREATEROREQUAL  reduce using rule 118 (empty -> .)
    LESSEROREQUAL   reduce using rule 118 (empty -> .)
    COMMA           reduce using rule 118 (empty -> .)
    SEMICOLON       reduce using rule 118 (empty -> .)
    RBRACKET        reduce using rule 118 (empty -> .)
    RPAREN          reduce using rule 118 (empty -> .)

    exp1                           shift and go to state 166
    empty                          shift and go to state 169

state 111

    (108) term -> factor . term1
    (109) term1 -> . DIVIDE term
    (110) term1 -> . TIMES term
    (111) term1 -> . empty
    (118) empty -> .

    DIVIDE          shift and go to state 171
    TIMES           shift and go to state 172
    MINUS           reduce using rule 118 (empty -> .)
    PLUS            reduce using rule 118 (empty -> .)
    LESSER          reduce using rule 118 (empty -> .)
    GREATER         reduce using rule 118 (empty -> .)
    EQUAL           reduce using rule 118 (empty -> .)
    NOTEQUAL        reduce using rule 118 (empty -> .)
    GREATEROREQUAL  reduce using rule 118 (empty -> .)
    LESSEROREQUAL   reduce using rule 118 (empty -> .)
    COMMA           reduce using rule 118 (empty -> .)
    SEMICOLON       reduce using rule 118 (empty -> .)
    RBRACKET        reduce using rule 118 (empty -> .)
    RPAREN          reduce using rule 118 (empty -> .)

    term1                          shift and go to state 170
    empty                          shift and go to state 173

state 112

    (102) factor -> LPAREN . EXPRESSION RPAREN

    EXPRESSION      shift and go to state 174


state 113

    (103) factor -> var_cte .

    DIVIDE          reduce using rule 103 (factor -> var_cte .)
    TIMES           reduce using rule 103 (factor -> var_cte .)
    MINUS           reduce using rule 103 (factor -> var_cte .)
    PLUS            reduce using rule 103 (factor -> var_cte .)
    LESSER          reduce using rule 103 (factor -> var_cte .)
    GREATER         reduce using rule 103 (factor -> var_cte .)
    EQUAL           reduce using rule 103 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 103 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 103 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 103 (factor -> var_cte .)
    COMMA           reduce using rule 103 (factor -> var_cte .)
    SEMICOLON       reduce using rule 103 (factor -> var_cte .)
    RBRACKET        reduce using rule 103 (factor -> var_cte .)
    RPAREN          reduce using rule 103 (factor -> var_cte .)


state 114

    (104) factor -> factor1 . var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97

    var_cte                        shift and go to state 175
    call                           shift and go to state 98

state 115

    (105) factor1 -> MINUS .

    ID              reduce using rule 105 (factor1 -> MINUS .)
    CTE_INT         reduce using rule 105 (factor1 -> MINUS .)
    CTE_FLOAT       reduce using rule 105 (factor1 -> MINUS .)
    CTE_BOOL        reduce using rule 105 (factor1 -> MINUS .)


state 116

    (106) factor1 -> PLUS .

    ID              reduce using rule 106 (factor1 -> PLUS .)
    CTE_INT         reduce using rule 106 (factor1 -> PLUS .)
    CTE_FLOAT       reduce using rule 106 (factor1 -> PLUS .)
    CTE_BOOL        reduce using rule 106 (factor1 -> PLUS .)


state 117

    (107) factor1 -> empty .

    ID              reduce using rule 107 (factor1 -> empty .)
    CTE_INT         reduce using rule 107 (factor1 -> empty .)
    CTE_FLOAT       reduce using rule 107 (factor1 -> empty .)
    CTE_BOOL        reduce using rule 107 (factor1 -> empty .)


state 118

    (17) vars3 -> ID list vars4 .

    SEMICOLON       reduce using rule 17 (vars3 -> ID list vars4 .)


state 119

    (21) list -> LBRACKET expression . RBRACKET

    RBRACKET        shift and go to state 176


state 120

    (19) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 19 (vars4 -> COMMA vars3 .)


state 121

    (39) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 177


state 122

    (40) assignment -> ID LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 178


state 123

    (113) call1 -> ID . COMMA call1
    (79) var_cte -> ID . var_cte1
    (112) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (84) var_cte1 -> . LBRACKET exp RBRACKET
    (85) var_cte1 -> . LPAREN exp RPAREN
    (86) var_cte1 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 179
    LPAREN          shift and go to state 148
    LBRACKET        shift and go to state 149
    DIVIDE          reduce using rule 118 (empty -> .)
    TIMES           reduce using rule 118 (empty -> .)
    MINUS           reduce using rule 118 (empty -> .)
    PLUS            reduce using rule 118 (empty -> .)
    RPAREN          reduce using rule 118 (empty -> .)

    var_cte1                       shift and go to state 147
    empty                          shift and go to state 150

state 124

    (112) call -> ID LPAREN call1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 125

    (114) call1 -> exp .

    RPAREN          reduce using rule 114 (call1 -> exp .)


state 126

    (115) call1 -> st_cte .

    RPAREN          reduce using rule 115 (call1 -> st_cte .)


state 127

    (87) condition -> IF LPAREN EXPRESSION . RPAREN block condition1 SEMICOLON

    RPAREN          shift and go to state 181


state 128

    (63) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 182


state 129

    (64) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 183


state 130

    (62) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 131

    (61) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 132

    (65) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 186


state 133

    (60) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 134

    (41) color_cte -> RED .

    RPAREN          reduce using rule 41 (color_cte -> RED .)


state 135

    (42) color_cte -> BLUE .

    RPAREN          reduce using rule 42 (color_cte -> BLUE .)


state 136

    (43) color_cte -> YELLOW .

    RPAREN          reduce using rule 43 (color_cte -> YELLOW .)


state 137

    (44) color_cte -> GREEN .

    RPAREN          reduce using rule 44 (color_cte -> GREEN .)


state 138

    (45) color_cte -> PINK .

    RPAREN          reduce using rule 45 (color_cte -> PINK .)


state 139

    (46) color_cte -> PURPLE .

    RPAREN          reduce using rule 46 (color_cte -> PURPLE .)


state 140

    (68) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 141

    (69) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 142

    (70) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 143

    (66) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 144

    (67) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 192


state 145

    (116) return -> RETURN var_cte SEMICOLON .

    WHILE           reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    ID              reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 116 (return -> RETURN var_cte SEMICOLON .)


state 146

    (117) return -> RETURN st_cte SEMICOLON .

    WHILE           reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    ID              reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 117 (return -> RETURN st_cte SEMICOLON .)


state 147

    (79) var_cte -> ID var_cte1 .

    SEMICOLON       reduce using rule 79 (var_cte -> ID var_cte1 .)
    DIVIDE          reduce using rule 79 (var_cte -> ID var_cte1 .)
    TIMES           reduce using rule 79 (var_cte -> ID var_cte1 .)
    MINUS           reduce using rule 79 (var_cte -> ID var_cte1 .)
    PLUS            reduce using rule 79 (var_cte -> ID var_cte1 .)
    LESSER          reduce using rule 79 (var_cte -> ID var_cte1 .)
    GREATER         reduce using rule 79 (var_cte -> ID var_cte1 .)
    EQUAL           reduce using rule 79 (var_cte -> ID var_cte1 .)
    NOTEQUAL        reduce using rule 79 (var_cte -> ID var_cte1 .)
    GREATEROREQUAL  reduce using rule 79 (var_cte -> ID var_cte1 .)
    LESSEROREQUAL   reduce using rule 79 (var_cte -> ID var_cte1 .)
    COMMA           reduce using rule 79 (var_cte -> ID var_cte1 .)
    RBRACKET        reduce using rule 79 (var_cte -> ID var_cte1 .)
    RPAREN          reduce using rule 79 (var_cte -> ID var_cte1 .)


state 148

    (112) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (85) var_cte1 -> LPAREN . exp RPAREN
    (113) call1 -> . ID COMMA call1
    (114) call1 -> . exp
    (115) call1 -> . st_cte
    (98) exp -> . term exp1
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (108) term -> . factor term1
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    ID              shift and go to state 123
    STRING          shift and go to state 99
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    LPAREN          shift and go to state 112
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    call1                          shift and go to state 124
    exp                            shift and go to state 193
    st_cte                         shift and go to state 126
    term                           shift and go to state 110
    cte_bool                       shift and go to state 100
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 149

    (84) var_cte1 -> LBRACKET . exp RBRACKET
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 194
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 150

    (86) var_cte1 -> empty .

    SEMICOLON       reduce using rule 86 (var_cte1 -> empty .)
    DIVIDE          reduce using rule 86 (var_cte1 -> empty .)
    TIMES           reduce using rule 86 (var_cte1 -> empty .)
    MINUS           reduce using rule 86 (var_cte1 -> empty .)
    PLUS            reduce using rule 86 (var_cte1 -> empty .)
    LESSER          reduce using rule 86 (var_cte1 -> empty .)
    GREATER         reduce using rule 86 (var_cte1 -> empty .)
    EQUAL           reduce using rule 86 (var_cte1 -> empty .)
    NOTEQUAL        reduce using rule 86 (var_cte1 -> empty .)
    GREATEROREQUAL  reduce using rule 86 (var_cte1 -> empty .)
    LESSEROREQUAL   reduce using rule 86 (var_cte1 -> empty .)
    COMMA           reduce using rule 86 (var_cte1 -> empty .)
    RBRACKET        reduce using rule 86 (var_cte1 -> empty .)
    RPAREN          reduce using rule 86 (var_cte1 -> empty .)


state 151

    (71) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 152

    (72) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 196


state 153

    (49) funcs -> type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 197


state 154

    (51) funcs1 -> COMMA . type ID funcs1
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 198

state 155

    (52) funcs1 -> empty .

    RPAREN          reduce using rule 52 (funcs1 -> empty .)


state 156

    (50) funcs -> VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 199


state 157

    (16) vars3 -> ID ASSIGN expression vars4 .

    SEMICOLON       reduce using rule 16 (vars3 -> ID ASSIGN expression vars4 .)


state 158

    (90) expression -> exp expression1 .

    COMMA           reduce using rule 90 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 90 (expression -> exp expression1 .)
    RBRACKET        reduce using rule 90 (expression -> exp expression1 .)


state 159

    (91) expression1 -> LESSER . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 200
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 160

    (92) expression1 -> GREATER . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 201
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 161

    (93) expression1 -> EQUAL . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 202
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 162

    (94) expression1 -> NOTEQUAL . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 203
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 163

    (95) expression1 -> GREATEROREQUAL . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 204
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 164

    (96) expression1 -> LESSEROREQUAL . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 205
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 165

    (97) expression1 -> empty .

    COMMA           reduce using rule 97 (expression1 -> empty .)
    SEMICOLON       reduce using rule 97 (expression1 -> empty .)
    RBRACKET        reduce using rule 97 (expression1 -> empty .)


state 166

    (98) exp -> term exp1 .

    LESSER          reduce using rule 98 (exp -> term exp1 .)
    GREATER         reduce using rule 98 (exp -> term exp1 .)
    EQUAL           reduce using rule 98 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 98 (exp -> term exp1 .)
    GREATEROREQUAL  reduce using rule 98 (exp -> term exp1 .)
    LESSEROREQUAL   reduce using rule 98 (exp -> term exp1 .)
    COMMA           reduce using rule 98 (exp -> term exp1 .)
    SEMICOLON       reduce using rule 98 (exp -> term exp1 .)
    RBRACKET        reduce using rule 98 (exp -> term exp1 .)
    RPAREN          reduce using rule 98 (exp -> term exp1 .)


state 167

    (99) exp1 -> MINUS . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 206
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 168

    (100) exp1 -> PLUS . exp
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 207
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 169

    (101) exp1 -> empty .

    LESSER          reduce using rule 101 (exp1 -> empty .)
    GREATER         reduce using rule 101 (exp1 -> empty .)
    EQUAL           reduce using rule 101 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 101 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 101 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 101 (exp1 -> empty .)
    COMMA           reduce using rule 101 (exp1 -> empty .)
    SEMICOLON       reduce using rule 101 (exp1 -> empty .)
    RBRACKET        reduce using rule 101 (exp1 -> empty .)
    RPAREN          reduce using rule 101 (exp1 -> empty .)


state 170

    (108) term -> factor term1 .

    MINUS           reduce using rule 108 (term -> factor term1 .)
    PLUS            reduce using rule 108 (term -> factor term1 .)
    LESSER          reduce using rule 108 (term -> factor term1 .)
    GREATER         reduce using rule 108 (term -> factor term1 .)
    EQUAL           reduce using rule 108 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 108 (term -> factor term1 .)
    GREATEROREQUAL  reduce using rule 108 (term -> factor term1 .)
    LESSEROREQUAL   reduce using rule 108 (term -> factor term1 .)
    COMMA           reduce using rule 108 (term -> factor term1 .)
    SEMICOLON       reduce using rule 108 (term -> factor term1 .)
    RBRACKET        reduce using rule 108 (term -> factor term1 .)
    RPAREN          reduce using rule 108 (term -> factor term1 .)


state 171

    (109) term1 -> DIVIDE . term
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    term                           shift and go to state 208
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 172

    (110) term1 -> TIMES . term
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    term                           shift and go to state 209
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 173

    (111) term1 -> empty .

    MINUS           reduce using rule 111 (term1 -> empty .)
    PLUS            reduce using rule 111 (term1 -> empty .)
    LESSER          reduce using rule 111 (term1 -> empty .)
    GREATER         reduce using rule 111 (term1 -> empty .)
    EQUAL           reduce using rule 111 (term1 -> empty .)
    NOTEQUAL        reduce using rule 111 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 111 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 111 (term1 -> empty .)
    COMMA           reduce using rule 111 (term1 -> empty .)
    SEMICOLON       reduce using rule 111 (term1 -> empty .)
    RBRACKET        reduce using rule 111 (term1 -> empty .)
    RPAREN          reduce using rule 111 (term1 -> empty .)


state 174

    (102) factor -> LPAREN EXPRESSION . RPAREN

    RPAREN          shift and go to state 210


state 175

    (104) factor -> factor1 var_cte .

    DIVIDE          reduce using rule 104 (factor -> factor1 var_cte .)
    TIMES           reduce using rule 104 (factor -> factor1 var_cte .)
    MINUS           reduce using rule 104 (factor -> factor1 var_cte .)
    PLUS            reduce using rule 104 (factor -> factor1 var_cte .)
    LESSER          reduce using rule 104 (factor -> factor1 var_cte .)
    GREATER         reduce using rule 104 (factor -> factor1 var_cte .)
    EQUAL           reduce using rule 104 (factor -> factor1 var_cte .)
    NOTEQUAL        reduce using rule 104 (factor -> factor1 var_cte .)
    GREATEROREQUAL  reduce using rule 104 (factor -> factor1 var_cte .)
    LESSEROREQUAL   reduce using rule 104 (factor -> factor1 var_cte .)
    COMMA           reduce using rule 104 (factor -> factor1 var_cte .)
    SEMICOLON       reduce using rule 104 (factor -> factor1 var_cte .)
    RBRACKET        reduce using rule 104 (factor -> factor1 var_cte .)
    RPAREN          reduce using rule 104 (factor -> factor1 var_cte .)


state 176

    (21) list -> LBRACKET expression RBRACKET .

    COMMA           reduce using rule 21 (list -> LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 21 (list -> LBRACKET expression RBRACKET .)


state 177

    (39) assignment -> ID ASSIGN expression SEMICOLON .

    WHILE           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 39 (assignment -> ID ASSIGN expression SEMICOLON .)


state 178

    (40) assignment -> ID LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 211


state 179

    (113) call1 -> ID COMMA . call1
    (113) call1 -> . ID COMMA call1
    (114) call1 -> . exp
    (115) call1 -> . st_cte
    (98) exp -> . term exp1
    (47) st_cte -> . STRING
    (48) st_cte -> . cte_bool
    (108) term -> . factor term1
    (77) cte_bool -> . TRUE
    (78) cte_bool -> . FALSE
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    ID              shift and go to state 123
    STRING          shift and go to state 99
    TRUE            shift and go to state 101
    FALSE           shift and go to state 102
    LPAREN          shift and go to state 112
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    call1                          shift and go to state 212
    exp                            shift and go to state 125
    st_cte                         shift and go to state 126
    term                           shift and go to state 110
    cte_bool                       shift and go to state 100
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 180

    (112) call -> ID LPAREN call1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 181

    (87) condition -> IF LPAREN EXPRESSION RPAREN . block condition1 SEMICOLON
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 214

state 182

    (63) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 215
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 183

    (64) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 216
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 184

    (62) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 185

    (61) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 186

    (65) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 219
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 187

    (60) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 220


state 188

    (68) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 221


state 189

    (69) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 190

    (70) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 191

    (66) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 192

    (67) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 193

    (85) var_cte1 -> LPAREN exp . RPAREN
    (114) call1 -> exp .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 226

  ! RPAREN          [ reduce using rule 114 (call1 -> exp .) ]


state 194

    (84) var_cte1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 227


state 195

    (71) penon -> PENON LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 196

    (72) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 197

    (49) funcs -> type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 228


state 198

    (51) funcs1 -> COMMA type . ID funcs1

    ID              shift and go to state 229


state 199

    (50) funcs -> VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 230


state 200

    (91) expression1 -> LESSER exp .

    COMMA           reduce using rule 91 (expression1 -> LESSER exp .)
    SEMICOLON       reduce using rule 91 (expression1 -> LESSER exp .)
    RBRACKET        reduce using rule 91 (expression1 -> LESSER exp .)


state 201

    (92) expression1 -> GREATER exp .

    COMMA           reduce using rule 92 (expression1 -> GREATER exp .)
    SEMICOLON       reduce using rule 92 (expression1 -> GREATER exp .)
    RBRACKET        reduce using rule 92 (expression1 -> GREATER exp .)


state 202

    (93) expression1 -> EQUAL exp .

    COMMA           reduce using rule 93 (expression1 -> EQUAL exp .)
    SEMICOLON       reduce using rule 93 (expression1 -> EQUAL exp .)
    RBRACKET        reduce using rule 93 (expression1 -> EQUAL exp .)


state 203

    (94) expression1 -> NOTEQUAL exp .

    COMMA           reduce using rule 94 (expression1 -> NOTEQUAL exp .)
    SEMICOLON       reduce using rule 94 (expression1 -> NOTEQUAL exp .)
    RBRACKET        reduce using rule 94 (expression1 -> NOTEQUAL exp .)


state 204

    (95) expression1 -> GREATEROREQUAL exp .

    COMMA           reduce using rule 95 (expression1 -> GREATEROREQUAL exp .)
    SEMICOLON       reduce using rule 95 (expression1 -> GREATEROREQUAL exp .)
    RBRACKET        reduce using rule 95 (expression1 -> GREATEROREQUAL exp .)


state 205

    (96) expression1 -> LESSEROREQUAL exp .

    COMMA           reduce using rule 96 (expression1 -> LESSEROREQUAL exp .)
    SEMICOLON       reduce using rule 96 (expression1 -> LESSEROREQUAL exp .)
    RBRACKET        reduce using rule 96 (expression1 -> LESSEROREQUAL exp .)


state 206

    (99) exp1 -> MINUS exp .

    LESSER          reduce using rule 99 (exp1 -> MINUS exp .)
    GREATER         reduce using rule 99 (exp1 -> MINUS exp .)
    EQUAL           reduce using rule 99 (exp1 -> MINUS exp .)
    NOTEQUAL        reduce using rule 99 (exp1 -> MINUS exp .)
    GREATEROREQUAL  reduce using rule 99 (exp1 -> MINUS exp .)
    LESSEROREQUAL   reduce using rule 99 (exp1 -> MINUS exp .)
    COMMA           reduce using rule 99 (exp1 -> MINUS exp .)
    SEMICOLON       reduce using rule 99 (exp1 -> MINUS exp .)
    RBRACKET        reduce using rule 99 (exp1 -> MINUS exp .)
    RPAREN          reduce using rule 99 (exp1 -> MINUS exp .)


state 207

    (100) exp1 -> PLUS exp .

    LESSER          reduce using rule 100 (exp1 -> PLUS exp .)
    GREATER         reduce using rule 100 (exp1 -> PLUS exp .)
    EQUAL           reduce using rule 100 (exp1 -> PLUS exp .)
    NOTEQUAL        reduce using rule 100 (exp1 -> PLUS exp .)
    GREATEROREQUAL  reduce using rule 100 (exp1 -> PLUS exp .)
    LESSEROREQUAL   reduce using rule 100 (exp1 -> PLUS exp .)
    COMMA           reduce using rule 100 (exp1 -> PLUS exp .)
    SEMICOLON       reduce using rule 100 (exp1 -> PLUS exp .)
    RBRACKET        reduce using rule 100 (exp1 -> PLUS exp .)
    RPAREN          reduce using rule 100 (exp1 -> PLUS exp .)


state 208

    (109) term1 -> DIVIDE term .

    MINUS           reduce using rule 109 (term1 -> DIVIDE term .)
    PLUS            reduce using rule 109 (term1 -> DIVIDE term .)
    LESSER          reduce using rule 109 (term1 -> DIVIDE term .)
    GREATER         reduce using rule 109 (term1 -> DIVIDE term .)
    EQUAL           reduce using rule 109 (term1 -> DIVIDE term .)
    NOTEQUAL        reduce using rule 109 (term1 -> DIVIDE term .)
    GREATEROREQUAL  reduce using rule 109 (term1 -> DIVIDE term .)
    LESSEROREQUAL   reduce using rule 109 (term1 -> DIVIDE term .)
    COMMA           reduce using rule 109 (term1 -> DIVIDE term .)
    SEMICOLON       reduce using rule 109 (term1 -> DIVIDE term .)
    RBRACKET        reduce using rule 109 (term1 -> DIVIDE term .)
    RPAREN          reduce using rule 109 (term1 -> DIVIDE term .)


state 209

    (110) term1 -> TIMES term .

    MINUS           reduce using rule 110 (term1 -> TIMES term .)
    PLUS            reduce using rule 110 (term1 -> TIMES term .)
    LESSER          reduce using rule 110 (term1 -> TIMES term .)
    GREATER         reduce using rule 110 (term1 -> TIMES term .)
    EQUAL           reduce using rule 110 (term1 -> TIMES term .)
    NOTEQUAL        reduce using rule 110 (term1 -> TIMES term .)
    GREATEROREQUAL  reduce using rule 110 (term1 -> TIMES term .)
    LESSEROREQUAL   reduce using rule 110 (term1 -> TIMES term .)
    COMMA           reduce using rule 110 (term1 -> TIMES term .)
    SEMICOLON       reduce using rule 110 (term1 -> TIMES term .)
    RBRACKET        reduce using rule 110 (term1 -> TIMES term .)
    RPAREN          reduce using rule 110 (term1 -> TIMES term .)


state 210

    (102) factor -> LPAREN EXPRESSION RPAREN .

    DIVIDE          reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    TIMES           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    MINUS           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    LESSER          reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    GREATER         reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    EQUAL           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    NOTEQUAL        reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    GREATEROREQUAL  reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    LESSEROREQUAL   reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    SEMICOLON       reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    RBRACKET        reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)


state 211

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (90) expression -> . exp expression1
    (98) exp -> . term exp1
    (108) term -> . factor term1
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (79) var_cte -> . ID var_cte1
    (80) var_cte -> . CTE_INT
    (81) var_cte -> . CTE_FLOAT
    (82) var_cte -> . CTE_BOOL
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (107) factor1 -> . empty
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (118) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for CTE_INT resolved as shift
  ! shift/reduce conflict for CTE_FLOAT resolved as shift
  ! shift/reduce conflict for CTE_BOOL resolved as shift
    LPAREN          shift and go to state 112
    ID              shift and go to state 94
    CTE_INT         shift and go to state 95
    CTE_FLOAT       shift and go to state 96
    CTE_BOOL        shift and go to state 97
    MINUS           shift and go to state 115
    PLUS            shift and go to state 116

  ! ID              [ reduce using rule 118 (empty -> .) ]
  ! CTE_INT         [ reduce using rule 118 (empty -> .) ]
  ! CTE_FLOAT       [ reduce using rule 118 (empty -> .) ]
  ! CTE_BOOL        [ reduce using rule 118 (empty -> .) ]

    exp                            shift and go to state 109
    expression                     shift and go to state 231
    term                           shift and go to state 110
    factor                         shift and go to state 111
    var_cte                        shift and go to state 113
    factor1                        shift and go to state 114
    call                           shift and go to state 98
    empty                          shift and go to state 117

state 212

    (113) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 113 (call1 -> ID COMMA call1 .)


state 213

    (112) call -> ID LPAREN call1 RPAREN SEMICOLON .

    WHILE           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ID              reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    IF              reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SQUARE          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    POLIGON         reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COLOR           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENBACK         reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ROTATE          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENON           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENOFF          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TIMES           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    MINUS           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PLUS            reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSER          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATER         reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    EQUAL           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COMMA           reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    VAR             reduce using rule 112 (call -> ID LPAREN call1 RPAREN SEMICOLON .)


state 214

    (87) condition -> IF LPAREN EXPRESSION RPAREN block . condition1 SEMICOLON
    (88) condition1 -> . ELSE block
    (89) condition1 -> . empty
    (118) empty -> .

    ELSE            shift and go to state 233
    SEMICOLON       reduce using rule 118 (empty -> .)

    condition1                     shift and go to state 232
    empty                          shift and go to state 234

state 215

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 235


state 216

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 236


state 217

    (62) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 218

    (61) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 219

    (65) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 237


state 220

    (60) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    WHILE           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ID              reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 221

    (68) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 222

    (69) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 223

    (70) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 224

    (66) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 225

    (67) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    WHILE           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ID              reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 226

    (85) var_cte1 -> LPAREN exp RPAREN .

    SEMICOLON       reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    TIMES           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    LESSER          reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    GREATER         reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    GREATEROREQUAL  reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    LESSEROREQUAL   reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)


state 227

    (84) var_cte1 -> LBRACKET exp RBRACKET .

    SEMICOLON       reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    DIVIDE          reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    TIMES           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    LESSER          reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    GREATER         reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    EQUAL           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    NOTEQUAL        reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    GREATEROREQUAL  reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    LESSEROREQUAL   reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)


state 228

    (49) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (53) funcs2 -> . vars
    (54) funcs2 -> . vars statute
    (55) funcs2 -> . statute vars
    (56) funcs2 -> . statute
    (57) funcs2 -> . empty
    (13) vars -> . VAR vars2
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (118) empty -> .
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 118 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    funcs2                         shift and go to state 238
    vars                           shift and go to state 239
    statute                        shift and go to state 240
    empty                          shift and go to state 241
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 229

    (51) funcs1 -> COMMA type ID . funcs1
    (51) funcs1 -> . COMMA type ID funcs1
    (52) funcs1 -> . empty
    (118) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 118 (empty -> .)

    funcs1                         shift and go to state 242
    empty                          shift and go to state 155

state 230

    (50) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (53) funcs2 -> . vars
    (54) funcs2 -> . vars statute
    (55) funcs2 -> . statute vars
    (56) funcs2 -> . statute
    (57) funcs2 -> . empty
    (13) vars -> . VAR vars2
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (118) empty -> .
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 118 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    funcs2                         shift and go to state 243
    vars                           shift and go to state 239
    statute                        shift and go to state 240
    empty                          shift and go to state 241
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 231

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 244


state 232

    (87) condition -> IF LPAREN EXPRESSION RPAREN block condition1 . SEMICOLON

    SEMICOLON       shift and go to state 245


state 233

    (88) condition1 -> ELSE . block
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 246

state 234

    (89) condition1 -> empty .

    SEMICOLON       reduce using rule 89 (condition1 -> empty .)


state 235

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 247


state 236

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 248


state 237

    (65) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 249


state 238

    (49) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 250


state 239

    (53) funcs2 -> vars .
    (54) funcs2 -> vars . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . WHILE
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (39) assignment -> . ID ASSIGN expression SEMICOLON
    (40) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (112) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (116) return -> . RETURN var_cte SEMICOLON
    (117) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 53 (funcs2 -> vars .)
    WHILE           shift and go to state 47
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 251
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 240

    (55) funcs2 -> statute . vars
    (56) funcs2 -> statute .
    (13) vars -> . VAR vars2

    RBRACE          reduce using rule 56 (funcs2 -> statute .)
    VAR             shift and go to state 11

    vars                           shift and go to state 252

state 241

    (57) funcs2 -> empty .

    RBRACE          reduce using rule 57 (funcs2 -> empty .)


state 242

    (51) funcs1 -> COMMA type ID funcs1 .

    RPAREN          reduce using rule 51 (funcs1 -> COMMA type ID funcs1 .)


state 243

    (50) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 253


state 244

    (40) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    WHILE           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ID              reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 40 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 245

    (87) condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .

    WHILE           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    ID              reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    IF              reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    TRIANGLE        reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RECTANGLE       reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    SQUARE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    CIRCLE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    POLIGON         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    COLOR           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENSIZE         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENFORWARD      reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENBACK         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    ROTATE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RETURN          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENON           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENOFF          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RBRACE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    VAR             reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)


state 246

    (88) condition1 -> ELSE block .

    SEMICOLON       reduce using rule 88 (condition1 -> ELSE block .)


state 247

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 248

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 249

    (65) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 250

    (49) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (58) funcs3 -> . funcs
    (59) funcs3 -> . empty
    (49) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (118) empty -> .
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    VOID            shift and go to state 10
    VAR             reduce using rule 118 (empty -> .)
    DAVINCI         reduce using rule 118 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 9
    funcs3                         shift and go to state 254
    funcs                          shift and go to state 255
    empty                          shift and go to state 256

state 251

    (54) funcs2 -> vars statute .

    RBRACE          reduce using rule 54 (funcs2 -> vars statute .)


state 252

    (55) funcs2 -> statute vars .

    RBRACE          reduce using rule 55 (funcs2 -> statute vars .)


state 253

    (50) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (58) funcs3 -> . funcs
    (59) funcs3 -> . empty
    (49) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (50) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (118) empty -> .
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    VOID            shift and go to state 10
    VAR             reduce using rule 118 (empty -> .)
    DAVINCI         reduce using rule 118 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 9
    funcs3                         shift and go to state 257
    funcs                          shift and go to state 255
    empty                          shift and go to state 256

state 254

    (49) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 49 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 49 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 255

    (58) funcs3 -> funcs .

    VAR             reduce using rule 58 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 58 (funcs3 -> funcs .)


state 256

    (59) funcs3 -> empty .

    VAR             reduce using rule 59 (funcs3 -> empty .)
    DAVINCI         reduce using rule 59 (funcs3 -> empty .)


state 257

    (50) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 50 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 50 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 68 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 68 resolved as shift
WARNING: shift/reduce conflict for STRING in state 68 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 68 resolved as shift
WARNING: shift/reduce conflict for ID in state 69 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 69 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 69 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 69 resolved as shift
WARNING: shift/reduce conflict for ID in state 72 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 72 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 72 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 72 resolved as shift
WARNING: shift/reduce conflict for ID in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 78 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 78 resolved as shift
WARNING: shift/reduce conflict for ID in state 79 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 79 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 79 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 79 resolved as shift
WARNING: shift/reduce conflict for ID in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 80 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 80 resolved as shift
WARNING: shift/reduce conflict for ID in state 82 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 82 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 82 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 82 resolved as shift
WARNING: shift/reduce conflict for ID in state 83 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 83 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 83 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 83 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 84 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 84 resolved as shift
WARNING: shift/reduce conflict for ID in state 85 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 85 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 85 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 85 resolved as shift
WARNING: shift/reduce conflict for ID in state 86 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 86 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 86 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 86 resolved as shift
WARNING: shift/reduce conflict for ID in state 88 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 88 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 88 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 88 resolved as shift
WARNING: shift/reduce conflict for ID in state 89 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 89 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 89 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 89 resolved as shift
WARNING: shift/reduce conflict for ID in state 90 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 90 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 90 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 90 resolved as shift
WARNING: shift/reduce conflict for ID in state 91 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 91 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 91 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 91 resolved as shift
WARNING: shift/reduce conflict for ID in state 148 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 148 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 148 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 148 resolved as shift
WARNING: shift/reduce conflict for ID in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 149 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 149 resolved as shift
WARNING: shift/reduce conflict for ID in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 159 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 159 resolved as shift
WARNING: shift/reduce conflict for ID in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 160 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 160 resolved as shift
WARNING: shift/reduce conflict for ID in state 161 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 161 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 161 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 161 resolved as shift
WARNING: shift/reduce conflict for ID in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 162 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 162 resolved as shift
WARNING: shift/reduce conflict for ID in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 163 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 163 resolved as shift
WARNING: shift/reduce conflict for ID in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 164 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 164 resolved as shift
WARNING: shift/reduce conflict for ID in state 167 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 167 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 167 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 167 resolved as shift
WARNING: shift/reduce conflict for ID in state 168 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 168 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 168 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 168 resolved as shift
WARNING: shift/reduce conflict for ID in state 171 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 171 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 171 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 171 resolved as shift
WARNING: shift/reduce conflict for ID in state 172 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 172 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 172 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 172 resolved as shift
WARNING: shift/reduce conflict for ID in state 179 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 179 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 179 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 179 resolved as shift
WARNING: shift/reduce conflict for ID in state 182 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 182 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 182 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 182 resolved as shift
WARNING: shift/reduce conflict for ID in state 183 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 183 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 183 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 183 resolved as shift
WARNING: shift/reduce conflict for ID in state 186 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 186 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 186 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 186 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 193 resolved as shift
WARNING: shift/reduce conflict for ID in state 211 resolved as shift
WARNING: shift/reduce conflict for CTE_INT in state 211 resolved as shift
WARNING: shift/reduce conflict for CTE_FLOAT in state 211 resolved as shift
WARNING: shift/reduce conflict for CTE_BOOL in state 211 resolved as shift
WARNING: reduce/reduce conflict in state 32 resolved using rule (b2 -> statute)
WARNING: rejected rule (empty -> <empty>) in state 32
