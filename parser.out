Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    LIST
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block
Rule 2     fillmain -> <empty>
Rule 3     gotomain -> <empty>
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     save_funcs -> <empty>
Rule 8     global_vars -> <empty>
Rule 9     block -> LBRACE b1 RBRACE
Rule 10    b1 -> vars local_vars b2
Rule 11    b1 -> b2
Rule 12    local_vars -> <empty>
Rule 13    b2 -> b2 statute
Rule 14    b2 -> empty
Rule 15    vars -> VAR vars2
Rule 16    vars2 -> type save_type vars3 SEMICOLON vars2
Rule 17    vars2 -> empty
Rule 18    vars3 -> ID list savelist vars4
Rule 19    vars3 -> ID saveid vars4
Rule 20    savelist -> <empty>
Rule 21    saveid -> <empty>
Rule 22    vars4 -> COMMA vars3
Rule 23    vars4 -> empty
Rule 24    save_type -> <empty>
Rule 25    list -> LBRACKET CTE_INT RBRACKET
Rule 26    statute -> assignment
Rule 27    statute -> call
Rule 28    statute -> condition
Rule 29    statute -> triangle
Rule 30    statute -> rectangle
Rule 31    statute -> square
Rule 32    statute -> circle
Rule 33    statute -> poligon
Rule 34    statute -> color
Rule 35    statute -> pensize
Rule 36    statute -> penforward
Rule 37    statute -> penback
Rule 38    statute -> rotate
Rule 39    statute -> while
Rule 40    statute -> return
Rule 41    statute -> penon
Rule 42    statute -> penoff
Rule 43    while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
Rule 44    while_return -> <empty>
Rule 45    end_while -> <empty>
Rule 46    assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON
Rule 47    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 48    verify_id -> <empty>
Rule 49    set_value -> <empty>
Rule 50    cte_id -> <empty>
Rule 51    color_cte -> RED
Rule 52    color_cte -> BLUE
Rule 53    color_cte -> YELLOW
Rule 54    color_cte -> GREEN
Rule 55    color_cte -> PINK
Rule 56    color_cte -> PURPLE
Rule 57    st_cte -> STRING
Rule 58    st_cte -> cte_bool
Rule 59    funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 60    funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 61    funcs1 -> funcs1 COMMA type save_type ID save_par
Rule 62    funcs1 -> empty
Rule 63    funcs2 -> funcs2 vars local_vars
Rule 64    funcs2 -> funcs2 statute
Rule 65    funcs2 -> empty
Rule 66    funcs3 -> funcs
Rule 67    funcs3 -> empty
Rule 68    saveidfunc -> <empty>
Rule 69    createcontext -> <empty>
Rule 70    save_par -> <empty>
Rule 71    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 72    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 73    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 74    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 75    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 76    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 77    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 78    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 79    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 80    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 81    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 82    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 83    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 84    type -> INT
Rule 85    type -> FLOAT
Rule 86    type -> STRING
Rule 87    type -> BOOL
Rule 88    getarrayvalue -> <empty>
Rule 89    getcallvalue -> <empty>
Rule 90    cte_bool -> TRUE
Rule 91    cte_bool -> FALSE
Rule 92    condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 93    condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 94    condition1 -> empty
Rule 95    type_check -> <empty>
Rule 96    gotoElse -> <empty>
Rule 97    end_if -> <empty>
Rule 98    expression -> exp expression1
Rule 99    expression1 -> LESSER relop exp top_relop
Rule 100   expression1 -> GREATER relop exp top_relop
Rule 101   expression1 -> EQUAL relop exp top_relop
Rule 102   expression1 -> NOTEQUAL relop exp top_relop
Rule 103   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 104   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 105   expression1 -> empty
Rule 106   exp -> term top_exp exp1
Rule 107   exp1 -> MINUS push_sign exp
Rule 108   exp1 -> PLUS push_sign exp
Rule 109   exp1 -> empty
Rule 110   top_exp -> <empty>
Rule 111   term -> factor top_factor term1
Rule 112   term1 -> DIVIDE push_sign term
Rule 113   term1 -> TIMES push_sign term
Rule 114   term1 -> empty
Rule 115   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 116   factor -> var_cte
Rule 117   factor -> ID push_id
Rule 118   top_factor -> <empty>
Rule 119   var_cte -> ID getidvalue
Rule 120   var_cte -> CTE_INT getvalue_i
Rule 121   var_cte -> CTE_FLOAT getvalue_f
Rule 122   var_cte -> cte_bool getvalue_b
Rule 123   var_cte -> ID list getarrayvalue
Rule 124   var_cte -> call getcallvalue
Rule 125   getidvalue -> <empty>
Rule 126   getvalue_i -> <empty>
Rule 127   getvalue_f -> <empty>
Rule 128   getvalue_b -> <empty>
Rule 129   relop -> <empty>
Rule 130   top_relop -> <empty>
Rule 131   push_sign -> <empty>
Rule 132   false_bottom -> <empty>
Rule 133   end_par -> <empty>
Rule 134   push_id -> <empty>
Rule 135   call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
Rule 136   check_name -> <empty>
Rule 137   create_era -> <empty>
Rule 138   gosub -> <empty>
Rule 139   call1 -> ID COMMA call1
Rule 140   call1 -> exp
Rule 141   call1 -> st_cte
Rule 142   return -> RETURN var_cte SEMICOLON
Rule 143   return -> RETURN st_cte SEMICOLON
Rule 144   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 46 47
BLUE                 : 52
BOOL                 : 87
CIRCLE               : 72
COLOR                : 71
COMMA                : 22 61 74 75 76 139
CTE_BOOL             : 
CTE_FLOAT            : 121
CTE_INT              : 25 120
CTE_STRING           : 78
DAVINCI              : 1
DIVIDE               : 112
ELSE                 : 93
EQUAL                : 101
EXPRESSION           : 
FALSE                : 91
FLOAT                : 85
FUNC                 : 59 60
GREATER              : 100
GREATEROREQUAL       : 103
GREEN                : 54
ID                   : 1 18 19 46 47 59 59 60 60 61 117 119 123 135 139
IF                   : 92
INT                  : 84
LBRACE               : 9 43 59 60 92 93
LBRACKET             : 25 47
LESSER               : 99
LESSEROREQUAL        : 104
LIST                 : 
LPAREN               : 43 59 60 71 72 73 74 75 76 77 78 79 80 81 82 83 92 115 135
MINUS                : 107
NOT                  : 
NOTEQUAL             : 102
OR                   : 
PENBACK              : 81
PENFORWARD           : 80
PENOFF               : 83
PENON                : 82
PENSIZE              : 79
PINK                 : 55
PLUS                 : 108
POLIGON              : 76
PROGRAM              : 1
PURPLE               : 56
RBRACE               : 9 43 59 60 92 93
RBRACKET             : 25 47
RECTANGLE            : 75
RED                  : 51
RETURN               : 142 143
ROTATE               : 77 78
RPAREN               : 43 59 60 71 72 73 74 75 76 77 78 79 80 81 82 83 92 115 135
SEMICOLON            : 1 16 46 47 71 72 73 74 75 76 77 78 79 80 81 82 83 135 142 143
SIZE                 : 
SQUARE               : 73
STRING               : 57 86
ST_CTE               : 
TERM                 : 
TIMES                : 113
TRIANGLE             : 74
TRUE                 : 90
VAR                  : 15
VOID                 : 60
WHILE                : 43
YELLOW               : 53
error                : 

Nonterminals, with rules where they appear

assignment           : 26
b1                   : 9
b2                   : 10 11 13 43 92 93
block                : 1
call                 : 27 124
call1                : 135 139
check_name           : 135
circle               : 32
color                : 34
color_cte            : 71
condition            : 28
condition1           : 92
create_era           : 135
createcontext        : 59 60
cte_bool             : 58 122
cte_id               : 47
empty                : 6 14 17 23 62 65 67 94 105 109 114
end_if               : 92
end_par              : 115
end_while            : 43
exp                  : 47 72 73 74 74 75 75 76 76 77 79 80 81 98 99 100 101 102 103 104 107 108 140
exp1                 : 106
expression           : 43 46 47 92 115
expression1          : 98
factor               : 111
false_bottom         : 115
fillmain             : 1
funcs                : 4 66
funcs1               : 59 60 61
funcs2               : 59 60 63 64
funcs3               : 59 60
getarrayvalue        : 123
getcallvalue         : 124
getidvalue           : 119
getvalue_b           : 122
getvalue_f           : 121
getvalue_i           : 120
global_vars          : 5
gosub                : 135
gotoElse             : 93
gotomain             : 1
list                 : 18 123
local_vars           : 10 63
penback              : 37
penforward           : 36
penoff               : 42
penon                : 41
pensize              : 35
poligon              : 33
program              : 0
program1             : 1 4 5
push_id              : 117
push_sign            : 46 107 108 112 113
rectangle            : 30
relop                : 99 100 101 102 103 104
return               : 40
rotate               : 38
save_funcs           : 4
save_par             : 59 60 61
save_type            : 16 59 60 61
saveid               : 19
saveidfunc           : 59 60
savelist             : 18
set_value            : 46
square               : 31
st_cte               : 141 143
statute              : 13 64
term                 : 106 112 113
term1                : 111
top_exp              : 106
top_factor           : 111
top_relop            : 99 100 101 102 103 104
triangle             : 29
type                 : 16 59 59 60 61
type_check           : 43 92
var_cte              : 116 142
vars                 : 5 10 63
vars2                : 15 16
vars3                : 16 22
vars4                : 18 19
verify_id            : 46
while                : 39
while_return         : 43

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 DAVINCI fillmain block
    (3) gotomain -> .

    DAVINCI         reduce using rule 3 (gotomain -> .)
    FUNC            reduce using rule 3 (gotomain -> .)
    VAR             reduce using rule 3 (gotomain -> .)

    gotomain                       shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (144) empty -> .

    DAVINCI         reduce using rule 144 (empty -> .)
    FUNC            reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)

    program1                       shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (59) funcs -> . FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (60) funcs -> . FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (15) vars -> . VAR vars2

    DAVINCI         shift and go to state 8
    FUNC            shift and go to state 11
    VAR             shift and go to state 12

    funcs                          shift and go to state 9
    vars                           shift and go to state 10

state 7

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)
    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI . fillmain block
    (2) fillmain -> .

    LBRACE          reduce using rule 2 (fillmain -> .)

    fillmain                       shift and go to state 13

state 9

    (4) program1 -> program1 funcs . save_funcs
    (7) save_funcs -> .

    DAVINCI         reduce using rule 7 (save_funcs -> .)
    FUNC            reduce using rule 7 (save_funcs -> .)
    VAR             reduce using rule 7 (save_funcs -> .)

    save_funcs                     shift and go to state 14

state 10

    (5) program1 -> program1 vars . global_vars
    (8) global_vars -> .

    DAVINCI         reduce using rule 8 (global_vars -> .)
    FUNC            reduce using rule 8 (global_vars -> .)
    VAR             reduce using rule 8 (global_vars -> .)

    global_vars                    shift and go to state 15

state 11

    (59) funcs -> FUNC . type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (60) funcs -> FUNC . VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 16

state 12

    (15) vars -> VAR . vars2
    (16) vars2 -> . type save_type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL
    (144) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 144 (empty -> .)
    FUNC            reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)
    RBRACE          reduce using rule 144 (empty -> .)

    vars2                          shift and go to state 22
    type                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain . block
    (9) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 25

state 14

    (4) program1 -> program1 funcs save_funcs .

    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 15

    (5) program1 -> program1 vars global_vars .

    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)
    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)


state 16

    (59) funcs -> FUNC type . ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 27


state 17

    (60) funcs -> FUNC VOID . ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 28


state 18

    (84) type -> INT .

    ID              reduce using rule 84 (type -> INT .)


state 19

    (85) type -> FLOAT .

    ID              reduce using rule 85 (type -> FLOAT .)


state 20

    (86) type -> STRING .

    ID              reduce using rule 86 (type -> STRING .)


state 21

    (87) type -> BOOL .

    ID              reduce using rule 87 (type -> BOOL .)


state 22

    (15) vars -> VAR vars2 .

    DAVINCI         reduce using rule 15 (vars -> VAR vars2 .)
    FUNC            reduce using rule 15 (vars -> VAR vars2 .)
    VAR             reduce using rule 15 (vars -> VAR vars2 .)
    ID              reduce using rule 15 (vars -> VAR vars2 .)
    IF              reduce using rule 15 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 15 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 15 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 15 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 15 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 15 (vars -> VAR vars2 .)
    COLOR           reduce using rule 15 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 15 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 15 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 15 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 15 (vars -> VAR vars2 .)
    WHILE           reduce using rule 15 (vars -> VAR vars2 .)
    RETURN          reduce using rule 15 (vars -> VAR vars2 .)
    PENON           reduce using rule 15 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 15 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 15 (vars -> VAR vars2 .)


state 23

    (16) vars2 -> type . save_type vars3 SEMICOLON vars2
    (24) save_type -> .

    ID              reduce using rule 24 (save_type -> .)

    save_type                      shift and go to state 29

state 24

    (17) vars2 -> empty .

    DAVINCI         reduce using rule 17 (vars2 -> empty .)
    FUNC            reduce using rule 17 (vars2 -> empty .)
    VAR             reduce using rule 17 (vars2 -> empty .)
    ID              reduce using rule 17 (vars2 -> empty .)
    IF              reduce using rule 17 (vars2 -> empty .)
    TRIANGLE        reduce using rule 17 (vars2 -> empty .)
    RECTANGLE       reduce using rule 17 (vars2 -> empty .)
    SQUARE          reduce using rule 17 (vars2 -> empty .)
    CIRCLE          reduce using rule 17 (vars2 -> empty .)
    POLIGON         reduce using rule 17 (vars2 -> empty .)
    COLOR           reduce using rule 17 (vars2 -> empty .)
    PENSIZE         reduce using rule 17 (vars2 -> empty .)
    PENFORWARD      reduce using rule 17 (vars2 -> empty .)
    PENBACK         reduce using rule 17 (vars2 -> empty .)
    ROTATE          reduce using rule 17 (vars2 -> empty .)
    WHILE           reduce using rule 17 (vars2 -> empty .)
    RETURN          reduce using rule 17 (vars2 -> empty .)
    PENON           reduce using rule 17 (vars2 -> empty .)
    PENOFF          reduce using rule 17 (vars2 -> empty .)
    RBRACE          reduce using rule 17 (vars2 -> empty .)


state 25

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .)


state 26

    (9) block -> LBRACE . b1 RBRACE
    (10) b1 -> . vars local_vars b2
    (11) b1 -> . b2
    (15) vars -> . VAR vars2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (144) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)
    RBRACE          reduce using rule 144 (empty -> .)

    b1                             shift and go to state 30
    vars                           shift and go to state 31
    b2                             shift and go to state 32
    empty                          shift and go to state 33

state 27

    (59) funcs -> FUNC type ID . saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (68) saveidfunc -> .

    LPAREN          reduce using rule 68 (saveidfunc -> .)

    saveidfunc                     shift and go to state 34

state 28

    (60) funcs -> FUNC VOID ID . saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (68) saveidfunc -> .

    LPAREN          reduce using rule 68 (saveidfunc -> .)

    saveidfunc                     shift and go to state 35

state 29

    (16) vars2 -> type save_type . vars3 SEMICOLON vars2
    (18) vars3 -> . ID list savelist vars4
    (19) vars3 -> . ID saveid vars4

    ID              shift and go to state 37

    vars3                          shift and go to state 36

state 30

    (9) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 38


state 31

    (10) b1 -> vars . local_vars b2
    (12) local_vars -> .

    ID              reduce using rule 12 (local_vars -> .)
    IF              reduce using rule 12 (local_vars -> .)
    TRIANGLE        reduce using rule 12 (local_vars -> .)
    RECTANGLE       reduce using rule 12 (local_vars -> .)
    SQUARE          reduce using rule 12 (local_vars -> .)
    CIRCLE          reduce using rule 12 (local_vars -> .)
    POLIGON         reduce using rule 12 (local_vars -> .)
    COLOR           reduce using rule 12 (local_vars -> .)
    PENSIZE         reduce using rule 12 (local_vars -> .)
    PENFORWARD      reduce using rule 12 (local_vars -> .)
    PENBACK         reduce using rule 12 (local_vars -> .)
    ROTATE          reduce using rule 12 (local_vars -> .)
    WHILE           reduce using rule 12 (local_vars -> .)
    RETURN          reduce using rule 12 (local_vars -> .)
    PENON           reduce using rule 12 (local_vars -> .)
    PENOFF          reduce using rule 12 (local_vars -> .)
    RBRACE          reduce using rule 12 (local_vars -> .)

    local_vars                     shift and go to state 39

state 32

    (11) b1 -> b2 .
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 11 (b1 -> b2 .)
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 33

    (14) b2 -> empty .

    ID              reduce using rule 14 (b2 -> empty .)
    IF              reduce using rule 14 (b2 -> empty .)
    TRIANGLE        reduce using rule 14 (b2 -> empty .)
    RECTANGLE       reduce using rule 14 (b2 -> empty .)
    SQUARE          reduce using rule 14 (b2 -> empty .)
    CIRCLE          reduce using rule 14 (b2 -> empty .)
    POLIGON         reduce using rule 14 (b2 -> empty .)
    COLOR           reduce using rule 14 (b2 -> empty .)
    PENSIZE         reduce using rule 14 (b2 -> empty .)
    PENFORWARD      reduce using rule 14 (b2 -> empty .)
    PENBACK         reduce using rule 14 (b2 -> empty .)
    ROTATE          reduce using rule 14 (b2 -> empty .)
    WHILE           reduce using rule 14 (b2 -> empty .)
    RETURN          reduce using rule 14 (b2 -> empty .)
    PENON           reduce using rule 14 (b2 -> empty .)
    PENOFF          reduce using rule 14 (b2 -> empty .)
    RBRACE          reduce using rule 14 (b2 -> empty .)


state 34

    (59) funcs -> FUNC type ID saveidfunc . createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (69) createcontext -> .

    LPAREN          reduce using rule 69 (createcontext -> .)

    createcontext                  shift and go to state 74

state 35

    (60) funcs -> FUNC VOID ID saveidfunc . createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (69) createcontext -> .

    LPAREN          reduce using rule 69 (createcontext -> .)

    createcontext                  shift and go to state 75

state 36

    (16) vars2 -> type save_type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 76


state 37

    (18) vars3 -> ID . list savelist vars4
    (19) vars3 -> ID . saveid vars4
    (25) list -> . LBRACKET CTE_INT RBRACKET
    (21) saveid -> .

    LBRACKET        shift and go to state 79
    COMMA           reduce using rule 21 (saveid -> .)
    SEMICOLON       reduce using rule 21 (saveid -> .)

    list                           shift and go to state 77
    saveid                         shift and go to state 78

state 38

    (9) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 9 (block -> LBRACE b1 RBRACE .)


state 39

    (10) b1 -> vars local_vars . b2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (144) empty -> .

    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)
    RBRACE          reduce using rule 144 (empty -> .)

    b2                             shift and go to state 80
    empty                          shift and go to state 33

state 40

    (13) b2 -> b2 statute .

    ID              reduce using rule 13 (b2 -> b2 statute .)
    IF              reduce using rule 13 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 13 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 13 (b2 -> b2 statute .)
    SQUARE          reduce using rule 13 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 13 (b2 -> b2 statute .)
    POLIGON         reduce using rule 13 (b2 -> b2 statute .)
    COLOR           reduce using rule 13 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 13 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 13 (b2 -> b2 statute .)
    PENBACK         reduce using rule 13 (b2 -> b2 statute .)
    ROTATE          reduce using rule 13 (b2 -> b2 statute .)
    WHILE           reduce using rule 13 (b2 -> b2 statute .)
    RETURN          reduce using rule 13 (b2 -> b2 statute .)
    PENON           reduce using rule 13 (b2 -> b2 statute .)
    PENOFF          reduce using rule 13 (b2 -> b2 statute .)
    RBRACE          reduce using rule 13 (b2 -> b2 statute .)


state 41

    (26) statute -> assignment .

    ID              reduce using rule 26 (statute -> assignment .)
    IF              reduce using rule 26 (statute -> assignment .)
    TRIANGLE        reduce using rule 26 (statute -> assignment .)
    RECTANGLE       reduce using rule 26 (statute -> assignment .)
    SQUARE          reduce using rule 26 (statute -> assignment .)
    CIRCLE          reduce using rule 26 (statute -> assignment .)
    POLIGON         reduce using rule 26 (statute -> assignment .)
    COLOR           reduce using rule 26 (statute -> assignment .)
    PENSIZE         reduce using rule 26 (statute -> assignment .)
    PENFORWARD      reduce using rule 26 (statute -> assignment .)
    PENBACK         reduce using rule 26 (statute -> assignment .)
    ROTATE          reduce using rule 26 (statute -> assignment .)
    WHILE           reduce using rule 26 (statute -> assignment .)
    RETURN          reduce using rule 26 (statute -> assignment .)
    PENON           reduce using rule 26 (statute -> assignment .)
    PENOFF          reduce using rule 26 (statute -> assignment .)
    RBRACE          reduce using rule 26 (statute -> assignment .)
    VAR             reduce using rule 26 (statute -> assignment .)


state 42

    (27) statute -> call .

    ID              reduce using rule 27 (statute -> call .)
    IF              reduce using rule 27 (statute -> call .)
    TRIANGLE        reduce using rule 27 (statute -> call .)
    RECTANGLE       reduce using rule 27 (statute -> call .)
    SQUARE          reduce using rule 27 (statute -> call .)
    CIRCLE          reduce using rule 27 (statute -> call .)
    POLIGON         reduce using rule 27 (statute -> call .)
    COLOR           reduce using rule 27 (statute -> call .)
    PENSIZE         reduce using rule 27 (statute -> call .)
    PENFORWARD      reduce using rule 27 (statute -> call .)
    PENBACK         reduce using rule 27 (statute -> call .)
    ROTATE          reduce using rule 27 (statute -> call .)
    WHILE           reduce using rule 27 (statute -> call .)
    RETURN          reduce using rule 27 (statute -> call .)
    PENON           reduce using rule 27 (statute -> call .)
    PENOFF          reduce using rule 27 (statute -> call .)
    RBRACE          reduce using rule 27 (statute -> call .)
    VAR             reduce using rule 27 (statute -> call .)


state 43

    (28) statute -> condition .

    ID              reduce using rule 28 (statute -> condition .)
    IF              reduce using rule 28 (statute -> condition .)
    TRIANGLE        reduce using rule 28 (statute -> condition .)
    RECTANGLE       reduce using rule 28 (statute -> condition .)
    SQUARE          reduce using rule 28 (statute -> condition .)
    CIRCLE          reduce using rule 28 (statute -> condition .)
    POLIGON         reduce using rule 28 (statute -> condition .)
    COLOR           reduce using rule 28 (statute -> condition .)
    PENSIZE         reduce using rule 28 (statute -> condition .)
    PENFORWARD      reduce using rule 28 (statute -> condition .)
    PENBACK         reduce using rule 28 (statute -> condition .)
    ROTATE          reduce using rule 28 (statute -> condition .)
    WHILE           reduce using rule 28 (statute -> condition .)
    RETURN          reduce using rule 28 (statute -> condition .)
    PENON           reduce using rule 28 (statute -> condition .)
    PENOFF          reduce using rule 28 (statute -> condition .)
    RBRACE          reduce using rule 28 (statute -> condition .)
    VAR             reduce using rule 28 (statute -> condition .)


state 44

    (29) statute -> triangle .

    ID              reduce using rule 29 (statute -> triangle .)
    IF              reduce using rule 29 (statute -> triangle .)
    TRIANGLE        reduce using rule 29 (statute -> triangle .)
    RECTANGLE       reduce using rule 29 (statute -> triangle .)
    SQUARE          reduce using rule 29 (statute -> triangle .)
    CIRCLE          reduce using rule 29 (statute -> triangle .)
    POLIGON         reduce using rule 29 (statute -> triangle .)
    COLOR           reduce using rule 29 (statute -> triangle .)
    PENSIZE         reduce using rule 29 (statute -> triangle .)
    PENFORWARD      reduce using rule 29 (statute -> triangle .)
    PENBACK         reduce using rule 29 (statute -> triangle .)
    ROTATE          reduce using rule 29 (statute -> triangle .)
    WHILE           reduce using rule 29 (statute -> triangle .)
    RETURN          reduce using rule 29 (statute -> triangle .)
    PENON           reduce using rule 29 (statute -> triangle .)
    PENOFF          reduce using rule 29 (statute -> triangle .)
    RBRACE          reduce using rule 29 (statute -> triangle .)
    VAR             reduce using rule 29 (statute -> triangle .)


state 45

    (30) statute -> rectangle .

    ID              reduce using rule 30 (statute -> rectangle .)
    IF              reduce using rule 30 (statute -> rectangle .)
    TRIANGLE        reduce using rule 30 (statute -> rectangle .)
    RECTANGLE       reduce using rule 30 (statute -> rectangle .)
    SQUARE          reduce using rule 30 (statute -> rectangle .)
    CIRCLE          reduce using rule 30 (statute -> rectangle .)
    POLIGON         reduce using rule 30 (statute -> rectangle .)
    COLOR           reduce using rule 30 (statute -> rectangle .)
    PENSIZE         reduce using rule 30 (statute -> rectangle .)
    PENFORWARD      reduce using rule 30 (statute -> rectangle .)
    PENBACK         reduce using rule 30 (statute -> rectangle .)
    ROTATE          reduce using rule 30 (statute -> rectangle .)
    WHILE           reduce using rule 30 (statute -> rectangle .)
    RETURN          reduce using rule 30 (statute -> rectangle .)
    PENON           reduce using rule 30 (statute -> rectangle .)
    PENOFF          reduce using rule 30 (statute -> rectangle .)
    RBRACE          reduce using rule 30 (statute -> rectangle .)
    VAR             reduce using rule 30 (statute -> rectangle .)


state 46

    (31) statute -> square .

    ID              reduce using rule 31 (statute -> square .)
    IF              reduce using rule 31 (statute -> square .)
    TRIANGLE        reduce using rule 31 (statute -> square .)
    RECTANGLE       reduce using rule 31 (statute -> square .)
    SQUARE          reduce using rule 31 (statute -> square .)
    CIRCLE          reduce using rule 31 (statute -> square .)
    POLIGON         reduce using rule 31 (statute -> square .)
    COLOR           reduce using rule 31 (statute -> square .)
    PENSIZE         reduce using rule 31 (statute -> square .)
    PENFORWARD      reduce using rule 31 (statute -> square .)
    PENBACK         reduce using rule 31 (statute -> square .)
    ROTATE          reduce using rule 31 (statute -> square .)
    WHILE           reduce using rule 31 (statute -> square .)
    RETURN          reduce using rule 31 (statute -> square .)
    PENON           reduce using rule 31 (statute -> square .)
    PENOFF          reduce using rule 31 (statute -> square .)
    RBRACE          reduce using rule 31 (statute -> square .)
    VAR             reduce using rule 31 (statute -> square .)


state 47

    (32) statute -> circle .

    ID              reduce using rule 32 (statute -> circle .)
    IF              reduce using rule 32 (statute -> circle .)
    TRIANGLE        reduce using rule 32 (statute -> circle .)
    RECTANGLE       reduce using rule 32 (statute -> circle .)
    SQUARE          reduce using rule 32 (statute -> circle .)
    CIRCLE          reduce using rule 32 (statute -> circle .)
    POLIGON         reduce using rule 32 (statute -> circle .)
    COLOR           reduce using rule 32 (statute -> circle .)
    PENSIZE         reduce using rule 32 (statute -> circle .)
    PENFORWARD      reduce using rule 32 (statute -> circle .)
    PENBACK         reduce using rule 32 (statute -> circle .)
    ROTATE          reduce using rule 32 (statute -> circle .)
    WHILE           reduce using rule 32 (statute -> circle .)
    RETURN          reduce using rule 32 (statute -> circle .)
    PENON           reduce using rule 32 (statute -> circle .)
    PENOFF          reduce using rule 32 (statute -> circle .)
    RBRACE          reduce using rule 32 (statute -> circle .)
    VAR             reduce using rule 32 (statute -> circle .)


state 48

    (33) statute -> poligon .

    ID              reduce using rule 33 (statute -> poligon .)
    IF              reduce using rule 33 (statute -> poligon .)
    TRIANGLE        reduce using rule 33 (statute -> poligon .)
    RECTANGLE       reduce using rule 33 (statute -> poligon .)
    SQUARE          reduce using rule 33 (statute -> poligon .)
    CIRCLE          reduce using rule 33 (statute -> poligon .)
    POLIGON         reduce using rule 33 (statute -> poligon .)
    COLOR           reduce using rule 33 (statute -> poligon .)
    PENSIZE         reduce using rule 33 (statute -> poligon .)
    PENFORWARD      reduce using rule 33 (statute -> poligon .)
    PENBACK         reduce using rule 33 (statute -> poligon .)
    ROTATE          reduce using rule 33 (statute -> poligon .)
    WHILE           reduce using rule 33 (statute -> poligon .)
    RETURN          reduce using rule 33 (statute -> poligon .)
    PENON           reduce using rule 33 (statute -> poligon .)
    PENOFF          reduce using rule 33 (statute -> poligon .)
    RBRACE          reduce using rule 33 (statute -> poligon .)
    VAR             reduce using rule 33 (statute -> poligon .)


state 49

    (34) statute -> color .

    ID              reduce using rule 34 (statute -> color .)
    IF              reduce using rule 34 (statute -> color .)
    TRIANGLE        reduce using rule 34 (statute -> color .)
    RECTANGLE       reduce using rule 34 (statute -> color .)
    SQUARE          reduce using rule 34 (statute -> color .)
    CIRCLE          reduce using rule 34 (statute -> color .)
    POLIGON         reduce using rule 34 (statute -> color .)
    COLOR           reduce using rule 34 (statute -> color .)
    PENSIZE         reduce using rule 34 (statute -> color .)
    PENFORWARD      reduce using rule 34 (statute -> color .)
    PENBACK         reduce using rule 34 (statute -> color .)
    ROTATE          reduce using rule 34 (statute -> color .)
    WHILE           reduce using rule 34 (statute -> color .)
    RETURN          reduce using rule 34 (statute -> color .)
    PENON           reduce using rule 34 (statute -> color .)
    PENOFF          reduce using rule 34 (statute -> color .)
    RBRACE          reduce using rule 34 (statute -> color .)
    VAR             reduce using rule 34 (statute -> color .)


state 50

    (35) statute -> pensize .

    ID              reduce using rule 35 (statute -> pensize .)
    IF              reduce using rule 35 (statute -> pensize .)
    TRIANGLE        reduce using rule 35 (statute -> pensize .)
    RECTANGLE       reduce using rule 35 (statute -> pensize .)
    SQUARE          reduce using rule 35 (statute -> pensize .)
    CIRCLE          reduce using rule 35 (statute -> pensize .)
    POLIGON         reduce using rule 35 (statute -> pensize .)
    COLOR           reduce using rule 35 (statute -> pensize .)
    PENSIZE         reduce using rule 35 (statute -> pensize .)
    PENFORWARD      reduce using rule 35 (statute -> pensize .)
    PENBACK         reduce using rule 35 (statute -> pensize .)
    ROTATE          reduce using rule 35 (statute -> pensize .)
    WHILE           reduce using rule 35 (statute -> pensize .)
    RETURN          reduce using rule 35 (statute -> pensize .)
    PENON           reduce using rule 35 (statute -> pensize .)
    PENOFF          reduce using rule 35 (statute -> pensize .)
    RBRACE          reduce using rule 35 (statute -> pensize .)
    VAR             reduce using rule 35 (statute -> pensize .)


state 51

    (36) statute -> penforward .

    ID              reduce using rule 36 (statute -> penforward .)
    IF              reduce using rule 36 (statute -> penforward .)
    TRIANGLE        reduce using rule 36 (statute -> penforward .)
    RECTANGLE       reduce using rule 36 (statute -> penforward .)
    SQUARE          reduce using rule 36 (statute -> penforward .)
    CIRCLE          reduce using rule 36 (statute -> penforward .)
    POLIGON         reduce using rule 36 (statute -> penforward .)
    COLOR           reduce using rule 36 (statute -> penforward .)
    PENSIZE         reduce using rule 36 (statute -> penforward .)
    PENFORWARD      reduce using rule 36 (statute -> penforward .)
    PENBACK         reduce using rule 36 (statute -> penforward .)
    ROTATE          reduce using rule 36 (statute -> penforward .)
    WHILE           reduce using rule 36 (statute -> penforward .)
    RETURN          reduce using rule 36 (statute -> penforward .)
    PENON           reduce using rule 36 (statute -> penforward .)
    PENOFF          reduce using rule 36 (statute -> penforward .)
    RBRACE          reduce using rule 36 (statute -> penforward .)
    VAR             reduce using rule 36 (statute -> penforward .)


state 52

    (37) statute -> penback .

    ID              reduce using rule 37 (statute -> penback .)
    IF              reduce using rule 37 (statute -> penback .)
    TRIANGLE        reduce using rule 37 (statute -> penback .)
    RECTANGLE       reduce using rule 37 (statute -> penback .)
    SQUARE          reduce using rule 37 (statute -> penback .)
    CIRCLE          reduce using rule 37 (statute -> penback .)
    POLIGON         reduce using rule 37 (statute -> penback .)
    COLOR           reduce using rule 37 (statute -> penback .)
    PENSIZE         reduce using rule 37 (statute -> penback .)
    PENFORWARD      reduce using rule 37 (statute -> penback .)
    PENBACK         reduce using rule 37 (statute -> penback .)
    ROTATE          reduce using rule 37 (statute -> penback .)
    WHILE           reduce using rule 37 (statute -> penback .)
    RETURN          reduce using rule 37 (statute -> penback .)
    PENON           reduce using rule 37 (statute -> penback .)
    PENOFF          reduce using rule 37 (statute -> penback .)
    RBRACE          reduce using rule 37 (statute -> penback .)
    VAR             reduce using rule 37 (statute -> penback .)


state 53

    (38) statute -> rotate .

    ID              reduce using rule 38 (statute -> rotate .)
    IF              reduce using rule 38 (statute -> rotate .)
    TRIANGLE        reduce using rule 38 (statute -> rotate .)
    RECTANGLE       reduce using rule 38 (statute -> rotate .)
    SQUARE          reduce using rule 38 (statute -> rotate .)
    CIRCLE          reduce using rule 38 (statute -> rotate .)
    POLIGON         reduce using rule 38 (statute -> rotate .)
    COLOR           reduce using rule 38 (statute -> rotate .)
    PENSIZE         reduce using rule 38 (statute -> rotate .)
    PENFORWARD      reduce using rule 38 (statute -> rotate .)
    PENBACK         reduce using rule 38 (statute -> rotate .)
    ROTATE          reduce using rule 38 (statute -> rotate .)
    WHILE           reduce using rule 38 (statute -> rotate .)
    RETURN          reduce using rule 38 (statute -> rotate .)
    PENON           reduce using rule 38 (statute -> rotate .)
    PENOFF          reduce using rule 38 (statute -> rotate .)
    RBRACE          reduce using rule 38 (statute -> rotate .)
    VAR             reduce using rule 38 (statute -> rotate .)


state 54

    (39) statute -> while .

    ID              reduce using rule 39 (statute -> while .)
    IF              reduce using rule 39 (statute -> while .)
    TRIANGLE        reduce using rule 39 (statute -> while .)
    RECTANGLE       reduce using rule 39 (statute -> while .)
    SQUARE          reduce using rule 39 (statute -> while .)
    CIRCLE          reduce using rule 39 (statute -> while .)
    POLIGON         reduce using rule 39 (statute -> while .)
    COLOR           reduce using rule 39 (statute -> while .)
    PENSIZE         reduce using rule 39 (statute -> while .)
    PENFORWARD      reduce using rule 39 (statute -> while .)
    PENBACK         reduce using rule 39 (statute -> while .)
    ROTATE          reduce using rule 39 (statute -> while .)
    WHILE           reduce using rule 39 (statute -> while .)
    RETURN          reduce using rule 39 (statute -> while .)
    PENON           reduce using rule 39 (statute -> while .)
    PENOFF          reduce using rule 39 (statute -> while .)
    RBRACE          reduce using rule 39 (statute -> while .)
    VAR             reduce using rule 39 (statute -> while .)


state 55

    (40) statute -> return .

    ID              reduce using rule 40 (statute -> return .)
    IF              reduce using rule 40 (statute -> return .)
    TRIANGLE        reduce using rule 40 (statute -> return .)
    RECTANGLE       reduce using rule 40 (statute -> return .)
    SQUARE          reduce using rule 40 (statute -> return .)
    CIRCLE          reduce using rule 40 (statute -> return .)
    POLIGON         reduce using rule 40 (statute -> return .)
    COLOR           reduce using rule 40 (statute -> return .)
    PENSIZE         reduce using rule 40 (statute -> return .)
    PENFORWARD      reduce using rule 40 (statute -> return .)
    PENBACK         reduce using rule 40 (statute -> return .)
    ROTATE          reduce using rule 40 (statute -> return .)
    WHILE           reduce using rule 40 (statute -> return .)
    RETURN          reduce using rule 40 (statute -> return .)
    PENON           reduce using rule 40 (statute -> return .)
    PENOFF          reduce using rule 40 (statute -> return .)
    RBRACE          reduce using rule 40 (statute -> return .)
    VAR             reduce using rule 40 (statute -> return .)


state 56

    (41) statute -> penon .

    ID              reduce using rule 41 (statute -> penon .)
    IF              reduce using rule 41 (statute -> penon .)
    TRIANGLE        reduce using rule 41 (statute -> penon .)
    RECTANGLE       reduce using rule 41 (statute -> penon .)
    SQUARE          reduce using rule 41 (statute -> penon .)
    CIRCLE          reduce using rule 41 (statute -> penon .)
    POLIGON         reduce using rule 41 (statute -> penon .)
    COLOR           reduce using rule 41 (statute -> penon .)
    PENSIZE         reduce using rule 41 (statute -> penon .)
    PENFORWARD      reduce using rule 41 (statute -> penon .)
    PENBACK         reduce using rule 41 (statute -> penon .)
    ROTATE          reduce using rule 41 (statute -> penon .)
    WHILE           reduce using rule 41 (statute -> penon .)
    RETURN          reduce using rule 41 (statute -> penon .)
    PENON           reduce using rule 41 (statute -> penon .)
    PENOFF          reduce using rule 41 (statute -> penon .)
    RBRACE          reduce using rule 41 (statute -> penon .)
    VAR             reduce using rule 41 (statute -> penon .)


state 57

    (42) statute -> penoff .

    ID              reduce using rule 42 (statute -> penoff .)
    IF              reduce using rule 42 (statute -> penoff .)
    TRIANGLE        reduce using rule 42 (statute -> penoff .)
    RECTANGLE       reduce using rule 42 (statute -> penoff .)
    SQUARE          reduce using rule 42 (statute -> penoff .)
    CIRCLE          reduce using rule 42 (statute -> penoff .)
    POLIGON         reduce using rule 42 (statute -> penoff .)
    COLOR           reduce using rule 42 (statute -> penoff .)
    PENSIZE         reduce using rule 42 (statute -> penoff .)
    PENFORWARD      reduce using rule 42 (statute -> penoff .)
    PENBACK         reduce using rule 42 (statute -> penoff .)
    ROTATE          reduce using rule 42 (statute -> penoff .)
    WHILE           reduce using rule 42 (statute -> penoff .)
    RETURN          reduce using rule 42 (statute -> penoff .)
    PENON           reduce using rule 42 (statute -> penoff .)
    PENOFF          reduce using rule 42 (statute -> penoff .)
    RBRACE          reduce using rule 42 (statute -> penoff .)
    VAR             reduce using rule 42 (statute -> penoff .)


state 58

    (46) assignment -> ID . verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (48) verify_id -> .
    (50) cte_id -> .
    (136) check_name -> .

    ASSIGN          reduce using rule 48 (verify_id -> .)
    LBRACKET        reduce using rule 50 (cte_id -> .)
    LPAREN          reduce using rule 136 (check_name -> .)

    verify_id                      shift and go to state 81
    cte_id                         shift and go to state 82
    check_name                     shift and go to state 83

state 59

    (92) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 84


state 60

    (74) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 61

    (75) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 62

    (73) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 63

    (72) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 64

    (76) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 65

    (71) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 66

    (79) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 91


state 67

    (80) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 92


state 68

    (81) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 69

    (77) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (78) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 70

    (43) while -> WHILE . while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (44) while_return -> .

    LPAREN          reduce using rule 44 (while_return -> .)

    while_return                   shift and go to state 95

state 71

    (142) return -> RETURN . var_cte SEMICOLON
    (143) return -> RETURN . st_cte SEMICOLON
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (57) st_cte -> . STRING
    (58) st_cte -> . cte_bool
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 98
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    STRING          shift and go to state 103
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    var_cte                        shift and go to state 96
    st_cte                         shift and go to state 97
    cte_bool                       shift and go to state 101
    call                           shift and go to state 102

state 72

    (82) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 73

    (83) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 74

    (59) funcs -> FUNC type ID saveidfunc createcontext . LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 108


state 75

    (60) funcs -> FUNC VOID ID saveidfunc createcontext . LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 109


state 76

    (16) vars2 -> type save_type vars3 SEMICOLON . vars2
    (16) vars2 -> . type save_type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL
    (144) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 144 (empty -> .)
    FUNC            reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)
    RBRACE          reduce using rule 144 (empty -> .)

    type                           shift and go to state 23
    vars2                          shift and go to state 110
    empty                          shift and go to state 24

state 77

    (18) vars3 -> ID list . savelist vars4
    (20) savelist -> .

    COMMA           reduce using rule 20 (savelist -> .)
    SEMICOLON       reduce using rule 20 (savelist -> .)

    savelist                       shift and go to state 111

state 78

    (19) vars3 -> ID saveid . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (144) empty -> .

    COMMA           shift and go to state 113
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars4                          shift and go to state 112
    empty                          shift and go to state 114

state 79

    (25) list -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 115


state 80

    (10) b1 -> vars local_vars b2 .
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 10 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 81

    (46) assignment -> ID verify_id . ASSIGN push_sign expression set_value SEMICOLON

    ASSIGN          shift and go to state 116


state 82

    (47) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 117


state 83

    (135) call -> ID check_name . LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 118


state 84

    (92) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (98) expression -> . exp expression1
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    expression                     shift and go to state 120
    exp                            shift and go to state 121
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 85

    (74) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 127
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 86

    (75) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 128
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 87

    (73) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 129
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 88

    (72) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 130
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 89

    (76) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 131
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 90

    (71) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (51) color_cte -> . RED
    (52) color_cte -> . BLUE
    (53) color_cte -> . YELLOW
    (54) color_cte -> . GREEN
    (55) color_cte -> . PINK
    (56) color_cte -> . PURPLE

    RED             shift and go to state 133
    BLUE            shift and go to state 134
    YELLOW          shift and go to state 135
    GREEN           shift and go to state 136
    PINK            shift and go to state 137
    PURPLE          shift and go to state 138

    color_cte                      shift and go to state 132

state 91

    (79) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 139
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 92

    (80) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 140
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 93

    (81) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 141
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 94

    (77) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (78) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    CTE_STRING      shift and go to state 143
    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 142
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 95

    (43) while -> WHILE while_return . LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 144


state 96

    (142) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 145


state 97

    (143) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 146


state 98

    (119) var_cte -> ID . getidvalue
    (123) var_cte -> ID . list getarrayvalue
    (135) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (125) getidvalue -> .
    (25) list -> . LBRACKET CTE_INT RBRACKET
    (136) check_name -> .

    SEMICOLON       reduce using rule 125 (getidvalue -> .)
    LBRACKET        shift and go to state 79
    LPAREN          reduce using rule 136 (check_name -> .)

    getidvalue                     shift and go to state 147
    list                           shift and go to state 148
    check_name                     shift and go to state 83

state 99

    (120) var_cte -> CTE_INT . getvalue_i
    (126) getvalue_i -> .

    SEMICOLON       reduce using rule 126 (getvalue_i -> .)
    DIVIDE          reduce using rule 126 (getvalue_i -> .)
    TIMES           reduce using rule 126 (getvalue_i -> .)
    MINUS           reduce using rule 126 (getvalue_i -> .)
    PLUS            reduce using rule 126 (getvalue_i -> .)
    LESSER          reduce using rule 126 (getvalue_i -> .)
    GREATER         reduce using rule 126 (getvalue_i -> .)
    EQUAL           reduce using rule 126 (getvalue_i -> .)
    NOTEQUAL        reduce using rule 126 (getvalue_i -> .)
    GREATEROREQUAL  reduce using rule 126 (getvalue_i -> .)
    LESSEROREQUAL   reduce using rule 126 (getvalue_i -> .)
    RPAREN          reduce using rule 126 (getvalue_i -> .)
    COMMA           reduce using rule 126 (getvalue_i -> .)
    RBRACKET        reduce using rule 126 (getvalue_i -> .)

    getvalue_i                     shift and go to state 149

state 100

    (121) var_cte -> CTE_FLOAT . getvalue_f
    (127) getvalue_f -> .

    SEMICOLON       reduce using rule 127 (getvalue_f -> .)
    DIVIDE          reduce using rule 127 (getvalue_f -> .)
    TIMES           reduce using rule 127 (getvalue_f -> .)
    MINUS           reduce using rule 127 (getvalue_f -> .)
    PLUS            reduce using rule 127 (getvalue_f -> .)
    LESSER          reduce using rule 127 (getvalue_f -> .)
    GREATER         reduce using rule 127 (getvalue_f -> .)
    EQUAL           reduce using rule 127 (getvalue_f -> .)
    NOTEQUAL        reduce using rule 127 (getvalue_f -> .)
    GREATEROREQUAL  reduce using rule 127 (getvalue_f -> .)
    LESSEROREQUAL   reduce using rule 127 (getvalue_f -> .)
    RPAREN          reduce using rule 127 (getvalue_f -> .)
    COMMA           reduce using rule 127 (getvalue_f -> .)
    RBRACKET        reduce using rule 127 (getvalue_f -> .)

    getvalue_f                     shift and go to state 150

state 101

    (122) var_cte -> cte_bool . getvalue_b
    (58) st_cte -> cte_bool .
    (128) getvalue_b -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 58 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 58 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 128 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 151

state 102

    (124) var_cte -> call . getcallvalue
    (89) getcallvalue -> .

    SEMICOLON       reduce using rule 89 (getcallvalue -> .)
    DIVIDE          reduce using rule 89 (getcallvalue -> .)
    TIMES           reduce using rule 89 (getcallvalue -> .)
    MINUS           reduce using rule 89 (getcallvalue -> .)
    PLUS            reduce using rule 89 (getcallvalue -> .)
    LESSER          reduce using rule 89 (getcallvalue -> .)
    GREATER         reduce using rule 89 (getcallvalue -> .)
    EQUAL           reduce using rule 89 (getcallvalue -> .)
    NOTEQUAL        reduce using rule 89 (getcallvalue -> .)
    GREATEROREQUAL  reduce using rule 89 (getcallvalue -> .)
    LESSEROREQUAL   reduce using rule 89 (getcallvalue -> .)
    RPAREN          reduce using rule 89 (getcallvalue -> .)
    COMMA           reduce using rule 89 (getcallvalue -> .)
    RBRACKET        reduce using rule 89 (getcallvalue -> .)

    getcallvalue                   shift and go to state 152

state 103

    (57) st_cte -> STRING .

    SEMICOLON       reduce using rule 57 (st_cte -> STRING .)
    RPAREN          reduce using rule 57 (st_cte -> STRING .)


state 104

    (90) cte_bool -> TRUE .

    SEMICOLON       reduce using rule 90 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 90 (cte_bool -> TRUE .)
    TIMES           reduce using rule 90 (cte_bool -> TRUE .)
    MINUS           reduce using rule 90 (cte_bool -> TRUE .)
    PLUS            reduce using rule 90 (cte_bool -> TRUE .)
    LESSER          reduce using rule 90 (cte_bool -> TRUE .)
    GREATER         reduce using rule 90 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 90 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 90 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 90 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 90 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 90 (cte_bool -> TRUE .)
    COMMA           reduce using rule 90 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 90 (cte_bool -> TRUE .)


state 105

    (91) cte_bool -> FALSE .

    SEMICOLON       reduce using rule 91 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 91 (cte_bool -> FALSE .)
    TIMES           reduce using rule 91 (cte_bool -> FALSE .)
    MINUS           reduce using rule 91 (cte_bool -> FALSE .)
    PLUS            reduce using rule 91 (cte_bool -> FALSE .)
    LESSER          reduce using rule 91 (cte_bool -> FALSE .)
    GREATER         reduce using rule 91 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 91 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 91 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 91 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 91 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 91 (cte_bool -> FALSE .)
    COMMA           reduce using rule 91 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 91 (cte_bool -> FALSE .)


state 106

    (82) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 153


state 107

    (83) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 154


state 108

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN . type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 155

state 109

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN . type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 156

state 110

    (16) vars2 -> type save_type vars3 SEMICOLON vars2 .

    DAVINCI         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    FUNC            reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 16 (vars2 -> type save_type vars3 SEMICOLON vars2 .)


state 111

    (18) vars3 -> ID list savelist . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (144) empty -> .

    COMMA           shift and go to state 113
    SEMICOLON       reduce using rule 144 (empty -> .)

    vars4                          shift and go to state 157
    empty                          shift and go to state 114

state 112

    (19) vars3 -> ID saveid vars4 .

    SEMICOLON       reduce using rule 19 (vars3 -> ID saveid vars4 .)


state 113

    (22) vars4 -> COMMA . vars3
    (18) vars3 -> . ID list savelist vars4
    (19) vars3 -> . ID saveid vars4

    ID              shift and go to state 37

    vars3                          shift and go to state 158

state 114

    (23) vars4 -> empty .

    SEMICOLON       reduce using rule 23 (vars4 -> empty .)


state 115

    (25) list -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 159


state 116

    (46) assignment -> ID verify_id ASSIGN . push_sign expression set_value SEMICOLON
    (131) push_sign -> .

    LPAREN          reduce using rule 131 (push_sign -> .)
    ID              reduce using rule 131 (push_sign -> .)
    CTE_INT         reduce using rule 131 (push_sign -> .)
    CTE_FLOAT       reduce using rule 131 (push_sign -> .)
    TRUE            reduce using rule 131 (push_sign -> .)
    FALSE           reduce using rule 131 (push_sign -> .)

    push_sign                      shift and go to state 160

state 117

    (47) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 161
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 118

    (135) call -> ID check_name LPAREN . create_era call1 RPAREN SEMICOLON gosub
    (137) create_era -> .

    ID              reduce using rule 137 (create_era -> .)
    STRING          reduce using rule 137 (create_era -> .)
    TRUE            reduce using rule 137 (create_era -> .)
    FALSE           reduce using rule 137 (create_era -> .)
    LPAREN          reduce using rule 137 (create_era -> .)
    CTE_INT         reduce using rule 137 (create_era -> .)
    CTE_FLOAT       reduce using rule 137 (create_era -> .)

    create_era                     shift and go to state 162

state 119

    (115) factor -> LPAREN . false_bottom expression RPAREN end_par
    (132) false_bottom -> .

    LPAREN          reduce using rule 132 (false_bottom -> .)
    ID              reduce using rule 132 (false_bottom -> .)
    CTE_INT         reduce using rule 132 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 132 (false_bottom -> .)
    TRUE            reduce using rule 132 (false_bottom -> .)
    FALSE           reduce using rule 132 (false_bottom -> .)

    false_bottom                   shift and go to state 163

state 120

    (92) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 164


state 121

    (98) expression -> exp . expression1
    (99) expression1 -> . LESSER relop exp top_relop
    (100) expression1 -> . GREATER relop exp top_relop
    (101) expression1 -> . EQUAL relop exp top_relop
    (102) expression1 -> . NOTEQUAL relop exp top_relop
    (103) expression1 -> . GREATEROREQUAL relop exp top_relop
    (104) expression1 -> . LESSEROREQUAL relop exp top_relop
    (105) expression1 -> . empty
    (144) empty -> .

    LESSER          shift and go to state 166
    GREATER         shift and go to state 167
    EQUAL           shift and go to state 168
    NOTEQUAL        shift and go to state 169
    GREATEROREQUAL  shift and go to state 170
    LESSEROREQUAL   shift and go to state 171
    RPAREN          reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    expression1                    shift and go to state 165
    empty                          shift and go to state 172

state 122

    (106) exp -> term . top_exp exp1
    (110) top_exp -> .

    MINUS           reduce using rule 110 (top_exp -> .)
    PLUS            reduce using rule 110 (top_exp -> .)
    LESSER          reduce using rule 110 (top_exp -> .)
    GREATER         reduce using rule 110 (top_exp -> .)
    EQUAL           reduce using rule 110 (top_exp -> .)
    NOTEQUAL        reduce using rule 110 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 110 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 110 (top_exp -> .)
    RPAREN          reduce using rule 110 (top_exp -> .)
    COMMA           reduce using rule 110 (top_exp -> .)
    RBRACKET        reduce using rule 110 (top_exp -> .)
    SEMICOLON       reduce using rule 110 (top_exp -> .)

    top_exp                        shift and go to state 173

state 123

    (111) term -> factor . top_factor term1
    (118) top_factor -> .

    DIVIDE          reduce using rule 118 (top_factor -> .)
    TIMES           reduce using rule 118 (top_factor -> .)
    MINUS           reduce using rule 118 (top_factor -> .)
    PLUS            reduce using rule 118 (top_factor -> .)
    LESSER          reduce using rule 118 (top_factor -> .)
    GREATER         reduce using rule 118 (top_factor -> .)
    EQUAL           reduce using rule 118 (top_factor -> .)
    NOTEQUAL        reduce using rule 118 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 118 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 118 (top_factor -> .)
    RPAREN          reduce using rule 118 (top_factor -> .)
    COMMA           reduce using rule 118 (top_factor -> .)
    RBRACKET        reduce using rule 118 (top_factor -> .)
    SEMICOLON       reduce using rule 118 (top_factor -> .)

    top_factor                     shift and go to state 174

state 124

    (116) factor -> var_cte .

    DIVIDE          reduce using rule 116 (factor -> var_cte .)
    TIMES           reduce using rule 116 (factor -> var_cte .)
    MINUS           reduce using rule 116 (factor -> var_cte .)
    PLUS            reduce using rule 116 (factor -> var_cte .)
    LESSER          reduce using rule 116 (factor -> var_cte .)
    GREATER         reduce using rule 116 (factor -> var_cte .)
    EQUAL           reduce using rule 116 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 116 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 116 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 116 (factor -> var_cte .)
    RPAREN          reduce using rule 116 (factor -> var_cte .)
    COMMA           reduce using rule 116 (factor -> var_cte .)
    RBRACKET        reduce using rule 116 (factor -> var_cte .)
    SEMICOLON       reduce using rule 116 (factor -> var_cte .)


state 125

    (117) factor -> ID . push_id
    (119) var_cte -> ID . getidvalue
    (123) var_cte -> ID . list getarrayvalue
    (135) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (134) push_id -> .
    (125) getidvalue -> .
    (25) list -> . LBRACKET CTE_INT RBRACKET
    (136) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for LESSER resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for GREATER resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for EQUAL resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 125 (getidvalue -> .)
    DIVIDE          reduce using rule 125 (getidvalue -> .)
    TIMES           reduce using rule 125 (getidvalue -> .)
    MINUS           reduce using rule 125 (getidvalue -> .)
    PLUS            reduce using rule 125 (getidvalue -> .)
    LESSER          reduce using rule 125 (getidvalue -> .)
    GREATER         reduce using rule 125 (getidvalue -> .)
    EQUAL           reduce using rule 125 (getidvalue -> .)
    NOTEQUAL        reduce using rule 125 (getidvalue -> .)
    GREATEROREQUAL  reduce using rule 125 (getidvalue -> .)
    LESSEROREQUAL   reduce using rule 125 (getidvalue -> .)
    RPAREN          reduce using rule 125 (getidvalue -> .)
    COMMA           reduce using rule 125 (getidvalue -> .)
    RBRACKET        reduce using rule 125 (getidvalue -> .)
    SEMICOLON       reduce using rule 125 (getidvalue -> .)
    LBRACKET        shift and go to state 79
    LPAREN          reduce using rule 136 (check_name -> .)

  ! DIVIDE          [ reduce using rule 134 (push_id -> .) ]
  ! TIMES           [ reduce using rule 134 (push_id -> .) ]
  ! MINUS           [ reduce using rule 134 (push_id -> .) ]
  ! PLUS            [ reduce using rule 134 (push_id -> .) ]
  ! LESSER          [ reduce using rule 134 (push_id -> .) ]
  ! GREATER         [ reduce using rule 134 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 134 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 134 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 134 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 134 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 134 (push_id -> .) ]
  ! COMMA           [ reduce using rule 134 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 134 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 134 (push_id -> .) ]

    push_id                        shift and go to state 175
    getidvalue                     shift and go to state 147
    list                           shift and go to state 148
    check_name                     shift and go to state 83

state 126

    (122) var_cte -> cte_bool . getvalue_b
    (128) getvalue_b -> .

    DIVIDE          reduce using rule 128 (getvalue_b -> .)
    TIMES           reduce using rule 128 (getvalue_b -> .)
    MINUS           reduce using rule 128 (getvalue_b -> .)
    PLUS            reduce using rule 128 (getvalue_b -> .)
    LESSER          reduce using rule 128 (getvalue_b -> .)
    GREATER         reduce using rule 128 (getvalue_b -> .)
    EQUAL           reduce using rule 128 (getvalue_b -> .)
    NOTEQUAL        reduce using rule 128 (getvalue_b -> .)
    GREATEROREQUAL  reduce using rule 128 (getvalue_b -> .)
    LESSEROREQUAL   reduce using rule 128 (getvalue_b -> .)
    RPAREN          reduce using rule 128 (getvalue_b -> .)
    COMMA           reduce using rule 128 (getvalue_b -> .)
    RBRACKET        reduce using rule 128 (getvalue_b -> .)
    SEMICOLON       reduce using rule 128 (getvalue_b -> .)

    getvalue_b                     shift and go to state 151

state 127

    (74) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 176


state 128

    (75) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 129

    (73) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 178


state 130

    (72) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 131

    (76) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 180


state 132

    (71) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 181


state 133

    (51) color_cte -> RED .

    RPAREN          reduce using rule 51 (color_cte -> RED .)


state 134

    (52) color_cte -> BLUE .

    RPAREN          reduce using rule 52 (color_cte -> BLUE .)


state 135

    (53) color_cte -> YELLOW .

    RPAREN          reduce using rule 53 (color_cte -> YELLOW .)


state 136

    (54) color_cte -> GREEN .

    RPAREN          reduce using rule 54 (color_cte -> GREEN .)


state 137

    (55) color_cte -> PINK .

    RPAREN          reduce using rule 55 (color_cte -> PINK .)


state 138

    (56) color_cte -> PURPLE .

    RPAREN          reduce using rule 56 (color_cte -> PURPLE .)


state 139

    (79) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 140

    (80) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 141

    (81) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 142

    (77) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 143

    (78) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 144

    (43) while -> WHILE while_return LPAREN . type_check expression RPAREN LBRACE b2 RBRACE end_while
    (95) type_check -> .

    LPAREN          reduce using rule 95 (type_check -> .)
    ID              reduce using rule 95 (type_check -> .)
    CTE_INT         reduce using rule 95 (type_check -> .)
    CTE_FLOAT       reduce using rule 95 (type_check -> .)
    TRUE            reduce using rule 95 (type_check -> .)
    FALSE           reduce using rule 95 (type_check -> .)

    type_check                     shift and go to state 187

state 145

    (142) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 142 (return -> RETURN var_cte SEMICOLON .)


state 146

    (143) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 143 (return -> RETURN st_cte SEMICOLON .)


state 147

    (119) var_cte -> ID getidvalue .

    SEMICOLON       reduce using rule 119 (var_cte -> ID getidvalue .)
    DIVIDE          reduce using rule 119 (var_cte -> ID getidvalue .)
    TIMES           reduce using rule 119 (var_cte -> ID getidvalue .)
    MINUS           reduce using rule 119 (var_cte -> ID getidvalue .)
    PLUS            reduce using rule 119 (var_cte -> ID getidvalue .)
    LESSER          reduce using rule 119 (var_cte -> ID getidvalue .)
    GREATER         reduce using rule 119 (var_cte -> ID getidvalue .)
    EQUAL           reduce using rule 119 (var_cte -> ID getidvalue .)
    NOTEQUAL        reduce using rule 119 (var_cte -> ID getidvalue .)
    GREATEROREQUAL  reduce using rule 119 (var_cte -> ID getidvalue .)
    LESSEROREQUAL   reduce using rule 119 (var_cte -> ID getidvalue .)
    RPAREN          reduce using rule 119 (var_cte -> ID getidvalue .)
    COMMA           reduce using rule 119 (var_cte -> ID getidvalue .)
    RBRACKET        reduce using rule 119 (var_cte -> ID getidvalue .)


state 148

    (123) var_cte -> ID list . getarrayvalue
    (88) getarrayvalue -> .

    SEMICOLON       reduce using rule 88 (getarrayvalue -> .)
    DIVIDE          reduce using rule 88 (getarrayvalue -> .)
    TIMES           reduce using rule 88 (getarrayvalue -> .)
    MINUS           reduce using rule 88 (getarrayvalue -> .)
    PLUS            reduce using rule 88 (getarrayvalue -> .)
    LESSER          reduce using rule 88 (getarrayvalue -> .)
    GREATER         reduce using rule 88 (getarrayvalue -> .)
    EQUAL           reduce using rule 88 (getarrayvalue -> .)
    NOTEQUAL        reduce using rule 88 (getarrayvalue -> .)
    GREATEROREQUAL  reduce using rule 88 (getarrayvalue -> .)
    LESSEROREQUAL   reduce using rule 88 (getarrayvalue -> .)
    RPAREN          reduce using rule 88 (getarrayvalue -> .)
    COMMA           reduce using rule 88 (getarrayvalue -> .)
    RBRACKET        reduce using rule 88 (getarrayvalue -> .)

    getarrayvalue                  shift and go to state 188

state 149

    (120) var_cte -> CTE_INT getvalue_i .

    SEMICOLON       reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    DIVIDE          reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    TIMES           reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    MINUS           reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    PLUS            reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    LESSER          reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    GREATER         reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    EQUAL           reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    NOTEQUAL        reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    GREATEROREQUAL  reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    LESSEROREQUAL   reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    RPAREN          reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    COMMA           reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)
    RBRACKET        reduce using rule 120 (var_cte -> CTE_INT getvalue_i .)


state 150

    (121) var_cte -> CTE_FLOAT getvalue_f .

    SEMICOLON       reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    DIVIDE          reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    TIMES           reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    MINUS           reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    PLUS            reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSER          reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATER         reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    EQUAL           reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    NOTEQUAL        reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATEROREQUAL  reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSEROREQUAL   reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    RPAREN          reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    COMMA           reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)
    RBRACKET        reduce using rule 121 (var_cte -> CTE_FLOAT getvalue_f .)


state 151

    (122) var_cte -> cte_bool getvalue_b .

    SEMICOLON       reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    DIVIDE          reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    TIMES           reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    MINUS           reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    PLUS            reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    LESSER          reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    GREATER         reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    EQUAL           reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    NOTEQUAL        reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    GREATEROREQUAL  reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    LESSEROREQUAL   reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    RPAREN          reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    COMMA           reduce using rule 122 (var_cte -> cte_bool getvalue_b .)
    RBRACKET        reduce using rule 122 (var_cte -> cte_bool getvalue_b .)


state 152

    (124) var_cte -> call getcallvalue .

    SEMICOLON       reduce using rule 124 (var_cte -> call getcallvalue .)
    DIVIDE          reduce using rule 124 (var_cte -> call getcallvalue .)
    TIMES           reduce using rule 124 (var_cte -> call getcallvalue .)
    MINUS           reduce using rule 124 (var_cte -> call getcallvalue .)
    PLUS            reduce using rule 124 (var_cte -> call getcallvalue .)
    LESSER          reduce using rule 124 (var_cte -> call getcallvalue .)
    GREATER         reduce using rule 124 (var_cte -> call getcallvalue .)
    EQUAL           reduce using rule 124 (var_cte -> call getcallvalue .)
    NOTEQUAL        reduce using rule 124 (var_cte -> call getcallvalue .)
    GREATEROREQUAL  reduce using rule 124 (var_cte -> call getcallvalue .)
    LESSEROREQUAL   reduce using rule 124 (var_cte -> call getcallvalue .)
    RPAREN          reduce using rule 124 (var_cte -> call getcallvalue .)
    COMMA           reduce using rule 124 (var_cte -> call getcallvalue .)
    RBRACKET        reduce using rule 124 (var_cte -> call getcallvalue .)


state 153

    (82) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 154

    (83) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 155

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type . save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (24) save_type -> .

    ID              reduce using rule 24 (save_type -> .)

    save_type                      shift and go to state 191

state 156

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type . save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (24) save_type -> .

    ID              reduce using rule 24 (save_type -> .)

    save_type                      shift and go to state 192

state 157

    (18) vars3 -> ID list savelist vars4 .

    SEMICOLON       reduce using rule 18 (vars3 -> ID list savelist vars4 .)


state 158

    (22) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 22 (vars4 -> COMMA vars3 .)


state 159

    (25) list -> LBRACKET CTE_INT RBRACKET .

    COMMA           reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    TIMES           reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSER          reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATER         reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    EQUAL           reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATEROREQUAL  reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSEROREQUAL   reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 25 (list -> LBRACKET CTE_INT RBRACKET .)


state 160

    (46) assignment -> ID verify_id ASSIGN push_sign . expression set_value SEMICOLON
    (98) expression -> . exp expression1
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    expression                     shift and go to state 193
    exp                            shift and go to state 121
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 161

    (47) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 194


state 162

    (135) call -> ID check_name LPAREN create_era . call1 RPAREN SEMICOLON gosub
    (139) call1 -> . ID COMMA call1
    (140) call1 -> . exp
    (141) call1 -> . st_cte
    (106) exp -> . term top_exp exp1
    (57) st_cte -> . STRING
    (58) st_cte -> . cte_bool
    (111) term -> . factor top_factor term1
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 195
    STRING          shift and go to state 103
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    LPAREN          shift and go to state 119
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100

    call1                          shift and go to state 196
    exp                            shift and go to state 197
    st_cte                         shift and go to state 198
    term                           shift and go to state 122
    cte_bool                       shift and go to state 199
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    call                           shift and go to state 102

state 163

    (115) factor -> LPAREN false_bottom . expression RPAREN end_par
    (98) expression -> . exp expression1
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    expression                     shift and go to state 200
    exp                            shift and go to state 121
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 164

    (92) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (95) type_check -> .

    LBRACE          reduce using rule 95 (type_check -> .)

    type_check                     shift and go to state 201

state 165

    (98) expression -> exp expression1 .

    RPAREN          reduce using rule 98 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 98 (expression -> exp expression1 .)


state 166

    (99) expression1 -> LESSER . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 202

state 167

    (100) expression1 -> GREATER . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 203

state 168

    (101) expression1 -> EQUAL . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 204

state 169

    (102) expression1 -> NOTEQUAL . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 205

state 170

    (103) expression1 -> GREATEROREQUAL . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 206

state 171

    (104) expression1 -> LESSEROREQUAL . relop exp top_relop
    (129) relop -> .

    LPAREN          reduce using rule 129 (relop -> .)
    ID              reduce using rule 129 (relop -> .)
    CTE_INT         reduce using rule 129 (relop -> .)
    CTE_FLOAT       reduce using rule 129 (relop -> .)
    TRUE            reduce using rule 129 (relop -> .)
    FALSE           reduce using rule 129 (relop -> .)

    relop                          shift and go to state 207

state 172

    (105) expression1 -> empty .

    RPAREN          reduce using rule 105 (expression1 -> empty .)
    SEMICOLON       reduce using rule 105 (expression1 -> empty .)


state 173

    (106) exp -> term top_exp . exp1
    (107) exp1 -> . MINUS push_sign exp
    (108) exp1 -> . PLUS push_sign exp
    (109) exp1 -> . empty
    (144) empty -> .

    MINUS           shift and go to state 209
    PLUS            shift and go to state 210
    LESSER          reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    EQUAL           reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    GREATEROREQUAL  reduce using rule 144 (empty -> .)
    LESSEROREQUAL   reduce using rule 144 (empty -> .)
    RPAREN          reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    RBRACKET        reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    exp1                           shift and go to state 208
    empty                          shift and go to state 211

state 174

    (111) term -> factor top_factor . term1
    (112) term1 -> . DIVIDE push_sign term
    (113) term1 -> . TIMES push_sign term
    (114) term1 -> . empty
    (144) empty -> .

    DIVIDE          shift and go to state 213
    TIMES           shift and go to state 214
    MINUS           reduce using rule 144 (empty -> .)
    PLUS            reduce using rule 144 (empty -> .)
    LESSER          reduce using rule 144 (empty -> .)
    GREATER         reduce using rule 144 (empty -> .)
    EQUAL           reduce using rule 144 (empty -> .)
    NOTEQUAL        reduce using rule 144 (empty -> .)
    GREATEROREQUAL  reduce using rule 144 (empty -> .)
    LESSEROREQUAL   reduce using rule 144 (empty -> .)
    RPAREN          reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)
    RBRACKET        reduce using rule 144 (empty -> .)
    SEMICOLON       reduce using rule 144 (empty -> .)

    term1                          shift and go to state 212
    empty                          shift and go to state 215

state 175

    (117) factor -> ID push_id .

    DIVIDE          reduce using rule 117 (factor -> ID push_id .)
    TIMES           reduce using rule 117 (factor -> ID push_id .)
    MINUS           reduce using rule 117 (factor -> ID push_id .)
    PLUS            reduce using rule 117 (factor -> ID push_id .)
    LESSER          reduce using rule 117 (factor -> ID push_id .)
    GREATER         reduce using rule 117 (factor -> ID push_id .)
    EQUAL           reduce using rule 117 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 117 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 117 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 117 (factor -> ID push_id .)
    RPAREN          reduce using rule 117 (factor -> ID push_id .)
    COMMA           reduce using rule 117 (factor -> ID push_id .)
    RBRACKET        reduce using rule 117 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 117 (factor -> ID push_id .)


state 176

    (74) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 216
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 177

    (75) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 217
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 178

    (73) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 179

    (72) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 180

    (76) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 220
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 181

    (71) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 221


state 182

    (79) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 222


state 183

    (80) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 184

    (81) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 185

    (77) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 186

    (78) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 187

    (43) while -> WHILE while_return LPAREN type_check . expression RPAREN LBRACE b2 RBRACE end_while
    (98) expression -> . exp expression1
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    expression                     shift and go to state 227
    exp                            shift and go to state 121
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 188

    (123) var_cte -> ID list getarrayvalue .

    SEMICOLON       reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    DIVIDE          reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    TIMES           reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    MINUS           reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    PLUS            reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    LESSER          reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    GREATER         reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    EQUAL           reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    NOTEQUAL        reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    GREATEROREQUAL  reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    LESSEROREQUAL   reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    RPAREN          reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    COMMA           reduce using rule 123 (var_cte -> ID list getarrayvalue .)
    RBRACKET        reduce using rule 123 (var_cte -> ID list getarrayvalue .)


state 189

    (82) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 82 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 190

    (83) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 83 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 191

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type . ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 228


state 192

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type . ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 229


state 193

    (46) assignment -> ID verify_id ASSIGN push_sign expression . set_value SEMICOLON
    (49) set_value -> .

    SEMICOLON       reduce using rule 49 (set_value -> .)

    set_value                      shift and go to state 230

state 194

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 231


state 195

    (139) call1 -> ID . COMMA call1
    (117) factor -> ID . push_id
    (119) var_cte -> ID . getidvalue
    (123) var_cte -> ID . list getarrayvalue
    (135) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (134) push_id -> .
    (125) getidvalue -> .
    (25) list -> . LBRACKET CTE_INT RBRACKET
    (136) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 125 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 125 (getidvalue -> .)
    COMMA           shift and go to state 232
    DIVIDE          reduce using rule 125 (getidvalue -> .)
    TIMES           reduce using rule 125 (getidvalue -> .)
    MINUS           reduce using rule 125 (getidvalue -> .)
    PLUS            reduce using rule 125 (getidvalue -> .)
    RPAREN          reduce using rule 125 (getidvalue -> .)
    LBRACKET        shift and go to state 79
    LPAREN          reduce using rule 136 (check_name -> .)

  ! DIVIDE          [ reduce using rule 134 (push_id -> .) ]
  ! TIMES           [ reduce using rule 134 (push_id -> .) ]
  ! MINUS           [ reduce using rule 134 (push_id -> .) ]
  ! PLUS            [ reduce using rule 134 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 134 (push_id -> .) ]

    push_id                        shift and go to state 175
    getidvalue                     shift and go to state 147
    list                           shift and go to state 148
    check_name                     shift and go to state 83

state 196

    (135) call -> ID check_name LPAREN create_era call1 . RPAREN SEMICOLON gosub

    RPAREN          shift and go to state 233


state 197

    (140) call1 -> exp .

    RPAREN          reduce using rule 140 (call1 -> exp .)


state 198

    (141) call1 -> st_cte .

    RPAREN          reduce using rule 141 (call1 -> st_cte .)


state 199

    (58) st_cte -> cte_bool .
    (122) var_cte -> cte_bool . getvalue_b
    (128) getvalue_b -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 58 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 58 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 128 (getvalue_b -> .)
    TIMES           reduce using rule 128 (getvalue_b -> .)
    MINUS           reduce using rule 128 (getvalue_b -> .)
    PLUS            reduce using rule 128 (getvalue_b -> .)

  ! RPAREN          [ reduce using rule 128 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 151

state 200

    (115) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 234


state 201

    (92) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 235


state 202

    (99) expression1 -> LESSER relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 236
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 203

    (100) expression1 -> GREATER relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 237
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 204

    (101) expression1 -> EQUAL relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 238
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 205

    (102) expression1 -> NOTEQUAL relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 239
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 206

    (103) expression1 -> GREATEROREQUAL relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 240
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 207

    (104) expression1 -> LESSEROREQUAL relop . exp top_relop
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 241
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 208

    (106) exp -> term top_exp exp1 .

    LESSER          reduce using rule 106 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 106 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 106 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 106 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 106 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 106 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 106 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 106 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 106 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 106 (exp -> term top_exp exp1 .)


state 209

    (107) exp1 -> MINUS . push_sign exp
    (131) push_sign -> .

    LPAREN          reduce using rule 131 (push_sign -> .)
    ID              reduce using rule 131 (push_sign -> .)
    CTE_INT         reduce using rule 131 (push_sign -> .)
    CTE_FLOAT       reduce using rule 131 (push_sign -> .)
    TRUE            reduce using rule 131 (push_sign -> .)
    FALSE           reduce using rule 131 (push_sign -> .)

    push_sign                      shift and go to state 242

state 210

    (108) exp1 -> PLUS . push_sign exp
    (131) push_sign -> .

    LPAREN          reduce using rule 131 (push_sign -> .)
    ID              reduce using rule 131 (push_sign -> .)
    CTE_INT         reduce using rule 131 (push_sign -> .)
    CTE_FLOAT       reduce using rule 131 (push_sign -> .)
    TRUE            reduce using rule 131 (push_sign -> .)
    FALSE           reduce using rule 131 (push_sign -> .)

    push_sign                      shift and go to state 243

state 211

    (109) exp1 -> empty .

    LESSER          reduce using rule 109 (exp1 -> empty .)
    GREATER         reduce using rule 109 (exp1 -> empty .)
    EQUAL           reduce using rule 109 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 109 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 109 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 109 (exp1 -> empty .)
    RPAREN          reduce using rule 109 (exp1 -> empty .)
    COMMA           reduce using rule 109 (exp1 -> empty .)
    RBRACKET        reduce using rule 109 (exp1 -> empty .)
    SEMICOLON       reduce using rule 109 (exp1 -> empty .)


state 212

    (111) term -> factor top_factor term1 .

    MINUS           reduce using rule 111 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 111 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 111 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 111 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 111 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 111 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 111 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 111 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 111 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 111 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 111 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 111 (term -> factor top_factor term1 .)


state 213

    (112) term1 -> DIVIDE . push_sign term
    (131) push_sign -> .

    LPAREN          reduce using rule 131 (push_sign -> .)
    ID              reduce using rule 131 (push_sign -> .)
    CTE_INT         reduce using rule 131 (push_sign -> .)
    CTE_FLOAT       reduce using rule 131 (push_sign -> .)
    TRUE            reduce using rule 131 (push_sign -> .)
    FALSE           reduce using rule 131 (push_sign -> .)

    push_sign                      shift and go to state 244

state 214

    (113) term1 -> TIMES . push_sign term
    (131) push_sign -> .

    LPAREN          reduce using rule 131 (push_sign -> .)
    ID              reduce using rule 131 (push_sign -> .)
    CTE_INT         reduce using rule 131 (push_sign -> .)
    CTE_FLOAT       reduce using rule 131 (push_sign -> .)
    TRUE            reduce using rule 131 (push_sign -> .)
    FALSE           reduce using rule 131 (push_sign -> .)

    push_sign                      shift and go to state 245

state 215

    (114) term1 -> empty .

    MINUS           reduce using rule 114 (term1 -> empty .)
    PLUS            reduce using rule 114 (term1 -> empty .)
    LESSER          reduce using rule 114 (term1 -> empty .)
    GREATER         reduce using rule 114 (term1 -> empty .)
    EQUAL           reduce using rule 114 (term1 -> empty .)
    NOTEQUAL        reduce using rule 114 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 114 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 114 (term1 -> empty .)
    RPAREN          reduce using rule 114 (term1 -> empty .)
    COMMA           reduce using rule 114 (term1 -> empty .)
    RBRACKET        reduce using rule 114 (term1 -> empty .)
    SEMICOLON       reduce using rule 114 (term1 -> empty .)


state 216

    (74) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 246


state 217

    (75) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 247


state 218

    (73) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 219

    (72) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 220

    (76) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 248


state 221

    (71) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 222

    (79) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 79 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 223

    (80) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 80 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 224

    (81) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 81 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 225

    (77) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 77 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 226

    (78) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 227

    (43) while -> WHILE while_return LPAREN type_check expression . RPAREN LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 249


state 228

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID . save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (70) save_par -> .

    RPAREN          reduce using rule 70 (save_par -> .)
    COMMA           reduce using rule 70 (save_par -> .)

    save_par                       shift and go to state 250

state 229

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID . save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (70) save_par -> .

    RPAREN          reduce using rule 70 (save_par -> .)
    COMMA           reduce using rule 70 (save_par -> .)

    save_par                       shift and go to state 251

state 230

    (46) assignment -> ID verify_id ASSIGN push_sign expression set_value . SEMICOLON

    SEMICOLON       shift and go to state 252


state 231

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (98) expression -> . exp expression1
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 121
    expression                     shift and go to state 253
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 232

    (139) call1 -> ID COMMA . call1
    (139) call1 -> . ID COMMA call1
    (140) call1 -> . exp
    (141) call1 -> . st_cte
    (106) exp -> . term top_exp exp1
    (57) st_cte -> . STRING
    (58) st_cte -> . cte_bool
    (111) term -> . factor top_factor term1
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 195
    STRING          shift and go to state 103
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105
    LPAREN          shift and go to state 119
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100

    call1                          shift and go to state 254
    exp                            shift and go to state 197
    st_cte                         shift and go to state 198
    term                           shift and go to state 122
    cte_bool                       shift and go to state 199
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    call                           shift and go to state 102

state 233

    (135) call -> ID check_name LPAREN create_era call1 RPAREN . SEMICOLON gosub

    SEMICOLON       shift and go to state 255


state 234

    (115) factor -> LPAREN false_bottom expression RPAREN . end_par
    (133) end_par -> .

    DIVIDE          reduce using rule 133 (end_par -> .)
    TIMES           reduce using rule 133 (end_par -> .)
    MINUS           reduce using rule 133 (end_par -> .)
    PLUS            reduce using rule 133 (end_par -> .)
    LESSER          reduce using rule 133 (end_par -> .)
    GREATER         reduce using rule 133 (end_par -> .)
    EQUAL           reduce using rule 133 (end_par -> .)
    NOTEQUAL        reduce using rule 133 (end_par -> .)
    GREATEROREQUAL  reduce using rule 133 (end_par -> .)
    LESSEROREQUAL   reduce using rule 133 (end_par -> .)
    RPAREN          reduce using rule 133 (end_par -> .)
    COMMA           reduce using rule 133 (end_par -> .)
    RBRACKET        reduce using rule 133 (end_par -> .)
    SEMICOLON       reduce using rule 133 (end_par -> .)

    end_par                        shift and go to state 256

state 235

    (92) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (144) empty -> .

    RBRACE          reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)

    b2                             shift and go to state 257
    empty                          shift and go to state 33

state 236

    (99) expression1 -> LESSER relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 258

state 237

    (100) expression1 -> GREATER relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 259

state 238

    (101) expression1 -> EQUAL relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 260

state 239

    (102) expression1 -> NOTEQUAL relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 261

state 240

    (103) expression1 -> GREATEROREQUAL relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 262

state 241

    (104) expression1 -> LESSEROREQUAL relop exp . top_relop
    (130) top_relop -> .

    RPAREN          reduce using rule 130 (top_relop -> .)
    SEMICOLON       reduce using rule 130 (top_relop -> .)

    top_relop                      shift and go to state 263

state 242

    (107) exp1 -> MINUS push_sign . exp
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 264
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 243

    (108) exp1 -> PLUS push_sign . exp
    (106) exp -> . term top_exp exp1
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    exp                            shift and go to state 265
    term                           shift and go to state 122
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 244

    (112) term1 -> DIVIDE push_sign . term
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    term                           shift and go to state 266
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 245

    (113) term1 -> TIMES push_sign . term
    (111) term -> . factor top_factor term1
    (115) factor -> . LPAREN false_bottom expression RPAREN end_par
    (116) factor -> . var_cte
    (117) factor -> . ID push_id
    (119) var_cte -> . ID getidvalue
    (120) var_cte -> . CTE_INT getvalue_i
    (121) var_cte -> . CTE_FLOAT getvalue_f
    (122) var_cte -> . cte_bool getvalue_b
    (123) var_cte -> . ID list getarrayvalue
    (124) var_cte -> . call getcallvalue
    (90) cte_bool -> . TRUE
    (91) cte_bool -> . FALSE
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 119
    ID              shift and go to state 125
    CTE_INT         shift and go to state 99
    CTE_FLOAT       shift and go to state 100
    TRUE            shift and go to state 104
    FALSE           shift and go to state 105

    term                           shift and go to state 267
    factor                         shift and go to state 123
    var_cte                        shift and go to state 124
    cte_bool                       shift and go to state 126
    call                           shift and go to state 102

state 246

    (74) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 247

    (75) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 269


state 248

    (76) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 270


state 249

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 271


state 250

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (61) funcs1 -> . funcs1 COMMA type save_type ID save_par
    (62) funcs1 -> . empty
    (144) empty -> .

    RPAREN          reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)

    funcs1                         shift and go to state 272
    empty                          shift and go to state 273

state 251

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (61) funcs1 -> . funcs1 COMMA type save_type ID save_par
    (62) funcs1 -> . empty
    (144) empty -> .

    RPAREN          reduce using rule 144 (empty -> .)
    COMMA           reduce using rule 144 (empty -> .)

    funcs1                         shift and go to state 274
    empty                          shift and go to state 273

state 252

    (46) assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .

    ID              reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    IF              reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    TRIANGLE        reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RECTANGLE       reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    SQUARE          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    CIRCLE          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    POLIGON         reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    COLOR           reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENSIZE         reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENFORWARD      reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENBACK         reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    ROTATE          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    WHILE           reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RETURN          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENON           reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENOFF          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RBRACE          reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    VAR             reduce using rule 46 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)


state 253

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 275


state 254

    (139) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 139 (call1 -> ID COMMA call1 .)


state 255

    (135) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON . gosub
    (138) gosub -> .

    ID              reduce using rule 138 (gosub -> .)
    IF              reduce using rule 138 (gosub -> .)
    TRIANGLE        reduce using rule 138 (gosub -> .)
    RECTANGLE       reduce using rule 138 (gosub -> .)
    SQUARE          reduce using rule 138 (gosub -> .)
    CIRCLE          reduce using rule 138 (gosub -> .)
    POLIGON         reduce using rule 138 (gosub -> .)
    COLOR           reduce using rule 138 (gosub -> .)
    PENSIZE         reduce using rule 138 (gosub -> .)
    PENFORWARD      reduce using rule 138 (gosub -> .)
    PENBACK         reduce using rule 138 (gosub -> .)
    ROTATE          reduce using rule 138 (gosub -> .)
    WHILE           reduce using rule 138 (gosub -> .)
    RETURN          reduce using rule 138 (gosub -> .)
    PENON           reduce using rule 138 (gosub -> .)
    PENOFF          reduce using rule 138 (gosub -> .)
    RBRACE          reduce using rule 138 (gosub -> .)
    SEMICOLON       reduce using rule 138 (gosub -> .)
    DIVIDE          reduce using rule 138 (gosub -> .)
    TIMES           reduce using rule 138 (gosub -> .)
    MINUS           reduce using rule 138 (gosub -> .)
    PLUS            reduce using rule 138 (gosub -> .)
    LESSER          reduce using rule 138 (gosub -> .)
    GREATER         reduce using rule 138 (gosub -> .)
    EQUAL           reduce using rule 138 (gosub -> .)
    NOTEQUAL        reduce using rule 138 (gosub -> .)
    GREATEROREQUAL  reduce using rule 138 (gosub -> .)
    LESSEROREQUAL   reduce using rule 138 (gosub -> .)
    RPAREN          reduce using rule 138 (gosub -> .)
    COMMA           reduce using rule 138 (gosub -> .)
    RBRACKET        reduce using rule 138 (gosub -> .)
    VAR             reduce using rule 138 (gosub -> .)

    gosub                          shift and go to state 276

state 256

    (115) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 115 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 257

    (92) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 277
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 258

    (99) expression1 -> LESSER relop exp top_relop .

    RPAREN          reduce using rule 99 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 99 (expression1 -> LESSER relop exp top_relop .)


state 259

    (100) expression1 -> GREATER relop exp top_relop .

    RPAREN          reduce using rule 100 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 100 (expression1 -> GREATER relop exp top_relop .)


state 260

    (101) expression1 -> EQUAL relop exp top_relop .

    RPAREN          reduce using rule 101 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 101 (expression1 -> EQUAL relop exp top_relop .)


state 261

    (102) expression1 -> NOTEQUAL relop exp top_relop .

    RPAREN          reduce using rule 102 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 102 (expression1 -> NOTEQUAL relop exp top_relop .)


state 262

    (103) expression1 -> GREATEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 103 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 103 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 263

    (104) expression1 -> LESSEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 104 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 104 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 264

    (107) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 107 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 107 (exp1 -> MINUS push_sign exp .)


state 265

    (108) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 108 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 108 (exp1 -> PLUS push_sign exp .)


state 266

    (112) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 112 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 112 (term1 -> DIVIDE push_sign term .)


state 267

    (113) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 113 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 113 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 113 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 113 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 113 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 113 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 113 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 113 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 113 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 113 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 113 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 113 (term1 -> TIMES push_sign term .)


state 268

    (74) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 74 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 269

    (75) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 75 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 270

    (76) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 76 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 271

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE . b2 RBRACE end_while
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (144) empty -> .

    RBRACE          reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)

    b2                             shift and go to state 278
    empty                          shift and go to state 33

state 272

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (61) funcs1 -> funcs1 . COMMA type save_type ID save_par

    RPAREN          shift and go to state 279
    COMMA           shift and go to state 280


state 273

    (62) funcs1 -> empty .

    RPAREN          reduce using rule 62 (funcs1 -> empty .)
    COMMA           reduce using rule 62 (funcs1 -> empty .)


state 274

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (61) funcs1 -> funcs1 . COMMA type save_type ID save_par

    RPAREN          shift and go to state 281
    COMMA           shift and go to state 280


state 275

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 276

    (135) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .

    ID              reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    IF              reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TRIANGLE        reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RECTANGLE       reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SQUARE          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    CIRCLE          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    POLIGON         reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COLOR           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENSIZE         reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENFORWARD      reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENBACK         reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    ROTATE          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    WHILE           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RETURN          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENON           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENOFF          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACE          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SEMICOLON       reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    DIVIDE          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TIMES           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    MINUS           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PLUS            reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSER          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATER         reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    EQUAL           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    NOTEQUAL        reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATEROREQUAL  reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSEROREQUAL   reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RPAREN          reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COMMA           reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACKET        reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    VAR             reduce using rule 135 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)


state 277

    (92) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (93) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (94) condition1 -> . empty
    (96) gotoElse -> .
    (144) empty -> .

    ELSE            reduce using rule 96 (gotoElse -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)
    RBRACE          reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)

    condition1                     shift and go to state 282
    gotoElse                       shift and go to state 283
    empty                          shift and go to state 284

state 278

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 . RBRACE end_while
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 285
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 279

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 286


state 280

    (61) funcs1 -> funcs1 COMMA . type save_type ID save_par
    (84) type -> . INT
    (85) type -> . FLOAT
    (86) type -> . STRING
    (87) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 287

state 281

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 288


state 282

    (92) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (97) end_if -> .

    ID              reduce using rule 97 (end_if -> .)
    IF              reduce using rule 97 (end_if -> .)
    TRIANGLE        reduce using rule 97 (end_if -> .)
    RECTANGLE       reduce using rule 97 (end_if -> .)
    SQUARE          reduce using rule 97 (end_if -> .)
    CIRCLE          reduce using rule 97 (end_if -> .)
    POLIGON         reduce using rule 97 (end_if -> .)
    COLOR           reduce using rule 97 (end_if -> .)
    PENSIZE         reduce using rule 97 (end_if -> .)
    PENFORWARD      reduce using rule 97 (end_if -> .)
    PENBACK         reduce using rule 97 (end_if -> .)
    ROTATE          reduce using rule 97 (end_if -> .)
    WHILE           reduce using rule 97 (end_if -> .)
    RETURN          reduce using rule 97 (end_if -> .)
    PENON           reduce using rule 97 (end_if -> .)
    PENOFF          reduce using rule 97 (end_if -> .)
    RBRACE          reduce using rule 97 (end_if -> .)
    VAR             reduce using rule 97 (end_if -> .)

    end_if                         shift and go to state 289

state 283

    (93) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 290


state 284

    (94) condition1 -> empty .

    ID              reduce using rule 94 (condition1 -> empty .)
    IF              reduce using rule 94 (condition1 -> empty .)
    TRIANGLE        reduce using rule 94 (condition1 -> empty .)
    RECTANGLE       reduce using rule 94 (condition1 -> empty .)
    SQUARE          reduce using rule 94 (condition1 -> empty .)
    CIRCLE          reduce using rule 94 (condition1 -> empty .)
    POLIGON         reduce using rule 94 (condition1 -> empty .)
    COLOR           reduce using rule 94 (condition1 -> empty .)
    PENSIZE         reduce using rule 94 (condition1 -> empty .)
    PENFORWARD      reduce using rule 94 (condition1 -> empty .)
    PENBACK         reduce using rule 94 (condition1 -> empty .)
    ROTATE          reduce using rule 94 (condition1 -> empty .)
    WHILE           reduce using rule 94 (condition1 -> empty .)
    RETURN          reduce using rule 94 (condition1 -> empty .)
    PENON           reduce using rule 94 (condition1 -> empty .)
    PENOFF          reduce using rule 94 (condition1 -> empty .)
    RBRACE          reduce using rule 94 (condition1 -> empty .)
    VAR             reduce using rule 94 (condition1 -> empty .)


state 285

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE . end_while
    (45) end_while -> .

    ID              reduce using rule 45 (end_while -> .)
    IF              reduce using rule 45 (end_while -> .)
    TRIANGLE        reduce using rule 45 (end_while -> .)
    RECTANGLE       reduce using rule 45 (end_while -> .)
    SQUARE          reduce using rule 45 (end_while -> .)
    CIRCLE          reduce using rule 45 (end_while -> .)
    POLIGON         reduce using rule 45 (end_while -> .)
    COLOR           reduce using rule 45 (end_while -> .)
    PENSIZE         reduce using rule 45 (end_while -> .)
    PENFORWARD      reduce using rule 45 (end_while -> .)
    PENBACK         reduce using rule 45 (end_while -> .)
    ROTATE          reduce using rule 45 (end_while -> .)
    WHILE           reduce using rule 45 (end_while -> .)
    RETURN          reduce using rule 45 (end_while -> .)
    PENON           reduce using rule 45 (end_while -> .)
    PENOFF          reduce using rule 45 (end_while -> .)
    RBRACE          reduce using rule 45 (end_while -> .)
    VAR             reduce using rule 45 (end_while -> .)

    end_while                      shift and go to state 291

state 286

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (63) funcs2 -> . funcs2 vars local_vars
    (64) funcs2 -> . funcs2 statute
    (65) funcs2 -> . empty
    (144) empty -> .

    RBRACE          reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)

    funcs2                         shift and go to state 292
    empty                          shift and go to state 293

state 287

    (61) funcs1 -> funcs1 COMMA type . save_type ID save_par
    (24) save_type -> .

    ID              reduce using rule 24 (save_type -> .)

    save_type                      shift and go to state 294

state 288

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (63) funcs2 -> . funcs2 vars local_vars
    (64) funcs2 -> . funcs2 statute
    (65) funcs2 -> . empty
    (144) empty -> .

    RBRACE          reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)

    funcs2                         shift and go to state 295
    empty                          shift and go to state 293

state 289

    (92) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    VAR             reduce using rule 92 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 290

    (93) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 296


state 291

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .

    ID              reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    VAR             reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)


state 292

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (63) funcs2 -> funcs2 . vars local_vars
    (64) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 297
    VAR             shift and go to state 12
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    vars                           shift and go to state 298
    statute                        shift and go to state 299
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 293

    (65) funcs2 -> empty .

    RBRACE          reduce using rule 65 (funcs2 -> empty .)
    VAR             reduce using rule 65 (funcs2 -> empty .)
    ID              reduce using rule 65 (funcs2 -> empty .)
    IF              reduce using rule 65 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 65 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 65 (funcs2 -> empty .)
    SQUARE          reduce using rule 65 (funcs2 -> empty .)
    CIRCLE          reduce using rule 65 (funcs2 -> empty .)
    POLIGON         reduce using rule 65 (funcs2 -> empty .)
    COLOR           reduce using rule 65 (funcs2 -> empty .)
    PENSIZE         reduce using rule 65 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 65 (funcs2 -> empty .)
    PENBACK         reduce using rule 65 (funcs2 -> empty .)
    ROTATE          reduce using rule 65 (funcs2 -> empty .)
    WHILE           reduce using rule 65 (funcs2 -> empty .)
    RETURN          reduce using rule 65 (funcs2 -> empty .)
    PENON           reduce using rule 65 (funcs2 -> empty .)
    PENOFF          reduce using rule 65 (funcs2 -> empty .)


state 294

    (61) funcs1 -> funcs1 COMMA type save_type . ID save_par

    ID              shift and go to state 300


state 295

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (63) funcs2 -> funcs2 . vars local_vars
    (64) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 301
    VAR             shift and go to state 12
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    vars                           shift and go to state 298
    statute                        shift and go to state 299
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 296

    (93) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (144) empty -> .

    RBRACE          reduce using rule 144 (empty -> .)
    ID              reduce using rule 144 (empty -> .)
    IF              reduce using rule 144 (empty -> .)
    TRIANGLE        reduce using rule 144 (empty -> .)
    RECTANGLE       reduce using rule 144 (empty -> .)
    SQUARE          reduce using rule 144 (empty -> .)
    CIRCLE          reduce using rule 144 (empty -> .)
    POLIGON         reduce using rule 144 (empty -> .)
    COLOR           reduce using rule 144 (empty -> .)
    PENSIZE         reduce using rule 144 (empty -> .)
    PENFORWARD      reduce using rule 144 (empty -> .)
    PENBACK         reduce using rule 144 (empty -> .)
    ROTATE          reduce using rule 144 (empty -> .)
    WHILE           reduce using rule 144 (empty -> .)
    RETURN          reduce using rule 144 (empty -> .)
    PENON           reduce using rule 144 (empty -> .)
    PENOFF          reduce using rule 144 (empty -> .)

    b2                             shift and go to state 302
    empty                          shift and go to state 33

state 297

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (66) funcs3 -> . funcs
    (67) funcs3 -> . empty
    (59) funcs -> . FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (60) funcs -> . FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (144) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)

  ! FUNC            [ reduce using rule 144 (empty -> .) ]

    funcs3                         shift and go to state 303
    funcs                          shift and go to state 304
    empty                          shift and go to state 305

state 298

    (63) funcs2 -> funcs2 vars . local_vars
    (12) local_vars -> .

    RBRACE          reduce using rule 12 (local_vars -> .)
    VAR             reduce using rule 12 (local_vars -> .)
    ID              reduce using rule 12 (local_vars -> .)
    IF              reduce using rule 12 (local_vars -> .)
    TRIANGLE        reduce using rule 12 (local_vars -> .)
    RECTANGLE       reduce using rule 12 (local_vars -> .)
    SQUARE          reduce using rule 12 (local_vars -> .)
    CIRCLE          reduce using rule 12 (local_vars -> .)
    POLIGON         reduce using rule 12 (local_vars -> .)
    COLOR           reduce using rule 12 (local_vars -> .)
    PENSIZE         reduce using rule 12 (local_vars -> .)
    PENFORWARD      reduce using rule 12 (local_vars -> .)
    PENBACK         reduce using rule 12 (local_vars -> .)
    ROTATE          reduce using rule 12 (local_vars -> .)
    WHILE           reduce using rule 12 (local_vars -> .)
    RETURN          reduce using rule 12 (local_vars -> .)
    PENON           reduce using rule 12 (local_vars -> .)
    PENOFF          reduce using rule 12 (local_vars -> .)

    local_vars                     shift and go to state 306

state 299

    (64) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 64 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 64 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 64 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 64 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 64 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 64 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 64 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 64 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 64 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 64 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 64 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 64 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 64 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 64 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 64 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 64 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 64 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 64 (funcs2 -> funcs2 statute .)


state 300

    (61) funcs1 -> funcs1 COMMA type save_type ID . save_par
    (70) save_par -> .

    RPAREN          reduce using rule 70 (save_par -> .)
    COMMA           reduce using rule 70 (save_par -> .)

    save_par                       shift and go to state 307

state 301

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (66) funcs3 -> . funcs
    (67) funcs3 -> . empty
    (59) funcs -> . FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (60) funcs -> . FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (144) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 144 (empty -> .)
    VAR             reduce using rule 144 (empty -> .)

  ! FUNC            [ reduce using rule 144 (empty -> .) ]

    funcs3                         shift and go to state 308
    funcs                          shift and go to state 304
    empty                          shift and go to state 305

state 302

    (93) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (135) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (92) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (74) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (75) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (73) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (72) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (76) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (71) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (79) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (80) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (81) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (77) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (78) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (142) return -> . RETURN var_cte SEMICOLON
    (143) return -> . RETURN st_cte SEMICOLON
    (82) penon -> . PENON LPAREN RPAREN SEMICOLON
    (83) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 309
    ID              shift and go to state 58
    IF              shift and go to state 59
    TRIANGLE        shift and go to state 60
    RECTANGLE       shift and go to state 61
    SQUARE          shift and go to state 62
    CIRCLE          shift and go to state 63
    POLIGON         shift and go to state 64
    COLOR           shift and go to state 65
    PENSIZE         shift and go to state 66
    PENFORWARD      shift and go to state 67
    PENBACK         shift and go to state 68
    ROTATE          shift and go to state 69
    WHILE           shift and go to state 70
    RETURN          shift and go to state 71
    PENON           shift and go to state 72
    PENOFF          shift and go to state 73

    statute                        shift and go to state 40
    assignment                     shift and go to state 41
    call                           shift and go to state 42
    condition                      shift and go to state 43
    triangle                       shift and go to state 44
    rectangle                      shift and go to state 45
    square                         shift and go to state 46
    circle                         shift and go to state 47
    poligon                        shift and go to state 48
    color                          shift and go to state 49
    pensize                        shift and go to state 50
    penforward                     shift and go to state 51
    penback                        shift and go to state 52
    rotate                         shift and go to state 53
    while                          shift and go to state 54
    return                         shift and go to state 55
    penon                          shift and go to state 56
    penoff                         shift and go to state 57

state 303

    (59) funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 59 (funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 59 (funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 59 (funcs -> FUNC type ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 304

    (66) funcs3 -> funcs .

    DAVINCI         reduce using rule 66 (funcs3 -> funcs .)
    FUNC            reduce using rule 66 (funcs3 -> funcs .)
    VAR             reduce using rule 66 (funcs3 -> funcs .)


state 305

    (67) funcs3 -> empty .

    DAVINCI         reduce using rule 67 (funcs3 -> empty .)
    FUNC            reduce using rule 67 (funcs3 -> empty .)
    VAR             reduce using rule 67 (funcs3 -> empty .)


state 306

    (63) funcs2 -> funcs2 vars local_vars .

    RBRACE          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    VAR             reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    ID              reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    IF              reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    TRIANGLE        reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    RECTANGLE       reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    SQUARE          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    CIRCLE          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    POLIGON         reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    COLOR           reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    PENSIZE         reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    PENFORWARD      reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    PENBACK         reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    ROTATE          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    WHILE           reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    RETURN          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    PENON           reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)
    PENOFF          reduce using rule 63 (funcs2 -> funcs2 vars local_vars .)


state 307

    (61) funcs1 -> funcs1 COMMA type save_type ID save_par .

    RPAREN          reduce using rule 61 (funcs1 -> funcs1 COMMA type save_type ID save_par .)
    COMMA           reduce using rule 61 (funcs1 -> funcs1 COMMA type save_type ID save_par .)


state 308

    (60) funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 60 (funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 60 (funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 60 (funcs -> FUNC VOID ID saveidfunc createcontext LPAREN type save_type ID save_par funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 309

    (93) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 93 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 297 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 301 resolved as shift
WARNING: reduce/reduce conflict in state 101 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 125 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 195 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 195
WARNING: reduce/reduce conflict in state 199 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 199
WARNING: Rule (push_id -> <empty>) is never reduced
