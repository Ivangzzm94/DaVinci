Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASSIGN
    ASSIGNMENT
    CALL
    COLOR_CTE
    CONDITION
    EXP
    FACTOR
    GREATEROREQUAL
    LESSEROREQUAL
    NOT
    OR
    SIZE
    STATUTE
    TERM
    TYPE
    VARS
    VAR_CTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 DAVINCI block
Rule 2     program1 -> funcs
Rule 3     program1 -> vars
Rule 4     program1 -> funcs vars
Rule 5     program1 -> vars funcs
Rule 6     block -> LBRACE b1 RBRACE
Rule 7     b1 -> vars b2
Rule 8     b1 -> b2
Rule 9     b2 -> statute
Rule 10    b2 -> statute b2
Rule 11    b2 -> empty
Rule 12    vars -> VAR vars2
Rule 13    vars2 -> type ID vars3 SEMICOLON vars2
Rule 14    vars2 -> type ID vars3 SEMICOLON
Rule 15    vars3 -> COMMA ID vars3
Rule 16    vars3 -> list vars3
Rule 17    vars3 -> list COMMA ID vars3
Rule 18    vars3 -> empty
Rule 19    list -> LBRACKET exp RBRACKET
Rule 20    statute -> assignment
Rule 21    statute -> call
Rule 22    statute -> condition
Rule 23    statute -> triangle
Rule 24    statute -> rectangle
Rule 25    statute -> square
Rule 26    statute -> circle
Rule 27    statute -> poligon
Rule 28    statute -> color
Rule 29    statute -> pensize
Rule 30    statute -> penforward
Rule 31    statute -> penback
Rule 32    statute -> rotate
Rule 33    statute -> WHILE
Rule 34    statute -> return
Rule 35    statute -> penon
Rule 36    statute -> penoff
Rule 37    assignment -> ID EQUAL expression SEMICOLON
Rule 38    assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
Rule 39    color_cte -> RED
Rule 40    color_cte -> BLUE
Rule 41    color_cte -> YELLOW
Rule 42    color_cte -> GREEN
Rule 43    color_cte -> PINK
Rule 44    color_cte -> PURPLE
Rule 45    st_cte -> STRING SEMICOLON
Rule 46    st_cte -> CTE_BOOL SEMICOLON
Rule 47    funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 48    funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 49    funcs1 -> COMMA type ID funcs1
Rule 50    funcs1 -> empty
Rule 51    funcs2 -> vars
Rule 52    funcs2 -> vars statute
Rule 53    funcs2 -> statute vars
Rule 54    funcs2 -> statute
Rule 55    funcs2 -> empty
Rule 56    funcs3 -> funcs
Rule 57    funcs3 -> empty
Rule 58    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 59    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 60    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 61    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 62    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 63    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 64    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 65    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 66    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 67    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 68    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 69    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 70    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 71    type -> INT
Rule 72    type -> FLOAT
Rule 73    type -> BOOL
Rule 74    type -> STRING
Rule 75    cte_bool -> TRUE
Rule 76    cte_bool -> FALSE
Rule 77    var_cte -> ID var_cte1
Rule 78    var_cte -> CTE_INT
Rule 79    var_cte -> CTE_FLOAT
Rule 80    var_cte -> call
Rule 81    var_cte1 -> LBRACKET exp RBRACKET
Rule 82    var_cte1 -> LPAREN exp RPAREN
Rule 83    var_cte1 -> empty
Rule 84    condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
Rule 85    condition1 -> ELSE BLOCK
Rule 86    condition1 -> empty
Rule 87    expression -> exp expression1 ID
Rule 88    expression1 -> expression2
Rule 89    expression2 -> LESSER
Rule 90    expression2 -> GREATER
Rule 91    expression2 -> EQUAL
Rule 92    expression2 -> NOTEQUAL
Rule 93    exp -> term exp1
Rule 94    exp1 -> MINUS term exp1
Rule 95    exp1 -> PLUS term exp1
Rule 96    exp1 -> empty
Rule 97    factor -> LPAREN EXPRESSION RPAREN
Rule 98    factor -> var_cte
Rule 99    factor -> factor1 var_cte
Rule 100   factor1 -> MINUS
Rule 101   factor1 -> PLUS
Rule 102   term -> DIVIDE
Rule 103   term -> TIMES
Rule 104   term -> factor
Rule 105   call -> ID LPAREN call1 RPAREN SEMICOLON
Rule 106   call1 -> ID COMMA call1
Rule 107   call1 -> exp
Rule 108   call1 -> ST_CTE
Rule 109   return -> exp SEMICOLON
Rule 110   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 
ASSIGNMENT           : 
BLOCK                : 84 85
BLUE                 : 40
BOOL                 : 73
CALL                 : 
CIRCLE               : 59
COLOR                : 58
COLOR_CTE            : 
COMMA                : 15 17 49 61 62 63 106
CONDITION            : 
CTE_BOOL             : 46
CTE_FLOAT            : 79
CTE_INT              : 78
CTE_STRING           : 65
DAVINCI              : 1
DIVIDE               : 102
ELSE                 : 85
EQUAL                : 37 38 91
EXP                  : 
EXPRESSION           : 84 97
FACTOR               : 
FALSE                : 76
FLOAT                : 72
GREATER              : 90
GREATEROREQUAL       : 
GREEN                : 42
ID                   : 1 13 14 15 17 37 38 47 47 48 48 49 77 87 105 106
IF                   : 84
INT                  : 71
LBRACE               : 6 47 48
LBRACKET             : 19 38 81
LESSER               : 89
LESSEROREQUAL        : 
LPAREN               : 47 48 58 59 60 61 62 63 64 65 66 67 68 69 70 82 84 97 105
MINUS                : 94 100
NOT                  : 
NOTEQUAL             : 92
OR                   : 
PENBACK              : 68
PENFORWARD           : 67
PENOFF               : 70
PENON                : 69
PENSIZE              : 66
PINK                 : 43
PLUS                 : 95 101
POLIGON              : 63
PROGRAM              : 1
PURPLE               : 44
RBRACE               : 6 47 48
RBRACKET             : 19 38 81
RECTANGLE            : 62
RED                  : 39
ROTATE               : 64 65
RPAREN               : 47 48 58 59 60 61 62 63 64 65 66 67 68 69 70 82 84 97 105
SEMICOLON            : 1 13 14 37 38 45 46 58 59 60 61 62 63 64 65 66 67 68 69 70 84 105 109
SIZE                 : 
SQUARE               : 60
STATUTE              : 
STRING               : 45 74
ST_CTE               : 108
TERM                 : 
TIMES                : 103
TRIANGLE             : 61
TRUE                 : 75
TYPE                 : 
VAR                  : 12
VARS                 : 
VAR_CTE              : 
VOID                 : 48
WHILE                : 33
YELLOW               : 41
error                : 

Nonterminals, with rules where they appear

assignment           : 20
b1                   : 6
b2                   : 7 8 10
block                : 1
call                 : 21 80
call1                : 105 106
circle               : 26
color                : 28
color_cte            : 58
condition            : 22
condition1           : 84
cte_bool             : 
empty                : 11 18 50 55 57 83 86 96
exp                  : 19 38 59 60 61 61 62 62 63 63 64 66 67 68 81 82 87 107 109
exp1                 : 93 94 95
expression           : 37 38
expression1          : 87
expression2          : 88
factor               : 104
factor1              : 99
funcs                : 2 4 5 56
funcs1               : 47 48 49
funcs2               : 47 48
funcs3               : 47 48
list                 : 16 17
penback              : 31
penforward           : 30
penoff               : 36
penon                : 35
pensize              : 29
poligon              : 27
program              : 0
program1             : 1
rectangle            : 24
return               : 34
rotate               : 32
square               : 25
st_cte               : 
statute              : 9 10 52 53 54
term                 : 93 94 95
triangle             : 23
type                 : 13 14 47 47 48 49
var_cte              : 98 99
var_cte1             : 77
vars                 : 3 4 5 7 51 52 53
vars2                : 12 13
vars3                : 13 14 15 16 17

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 DAVINCI block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 DAVINCI block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 DAVINCI block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 DAVINCI block
    (2) program1 -> . funcs
    (3) program1 -> . vars
    (4) program1 -> . funcs vars
    (5) program1 -> . vars funcs
    (47) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (48) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (12) vars -> . VAR vars2
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    VOID            shift and go to state 9
    VAR             shift and go to state 10
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    program1                       shift and go to state 5
    funcs                          shift and go to state 6
    vars                           shift and go to state 7
    type                           shift and go to state 8

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . DAVINCI block

    DAVINCI         shift and go to state 15


state 6

    (2) program1 -> funcs .
    (4) program1 -> funcs . vars
    (12) vars -> . VAR vars2

    DAVINCI         reduce using rule 2 (program1 -> funcs .)
    VAR             shift and go to state 10

    vars                           shift and go to state 16

state 7

    (3) program1 -> vars .
    (5) program1 -> vars . funcs
    (47) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (48) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    DAVINCI         reduce using rule 3 (program1 -> vars .)
    VOID            shift and go to state 9
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    funcs                          shift and go to state 17
    type                           shift and go to state 8

state 8

    (47) funcs -> type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 18


state 9

    (48) funcs -> VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 19


state 10

    (12) vars -> VAR . vars2
    (13) vars2 -> . type ID vars3 SEMICOLON vars2
    (14) vars2 -> . type ID vars3 SEMICOLON
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    vars2                          shift and go to state 20
    type                           shift and go to state 21

state 11

    (71) type -> INT .

    ID              reduce using rule 71 (type -> INT .)


state 12

    (72) type -> FLOAT .

    ID              reduce using rule 72 (type -> FLOAT .)


state 13

    (73) type -> BOOL .

    ID              reduce using rule 73 (type -> BOOL .)


state 14

    (74) type -> STRING .

    ID              reduce using rule 74 (type -> STRING .)


state 15

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI . block
    (6) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 23

    block                          shift and go to state 22

state 16

    (4) program1 -> funcs vars .

    DAVINCI         reduce using rule 4 (program1 -> funcs vars .)


state 17

    (5) program1 -> vars funcs .

    DAVINCI         reduce using rule 5 (program1 -> vars funcs .)


state 18

    (47) funcs -> type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 24


state 19

    (48) funcs -> VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 25


state 20

    (12) vars -> VAR vars2 .

    VOID            reduce using rule 12 (vars -> VAR vars2 .)
    INT             reduce using rule 12 (vars -> VAR vars2 .)
    FLOAT           reduce using rule 12 (vars -> VAR vars2 .)
    BOOL            reduce using rule 12 (vars -> VAR vars2 .)
    STRING          reduce using rule 12 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 12 (vars -> VAR vars2 .)
    WHILE           reduce using rule 12 (vars -> VAR vars2 .)
    ID              reduce using rule 12 (vars -> VAR vars2 .)
    IF              reduce using rule 12 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 12 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 12 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 12 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 12 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 12 (vars -> VAR vars2 .)
    COLOR           reduce using rule 12 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 12 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 12 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 12 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 12 (vars -> VAR vars2 .)
    PENON           reduce using rule 12 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 12 (vars -> VAR vars2 .)
    DIVIDE          reduce using rule 12 (vars -> VAR vars2 .)
    TIMES           reduce using rule 12 (vars -> VAR vars2 .)
    LPAREN          reduce using rule 12 (vars -> VAR vars2 .)
    CTE_INT         reduce using rule 12 (vars -> VAR vars2 .)
    CTE_FLOAT       reduce using rule 12 (vars -> VAR vars2 .)
    MINUS           reduce using rule 12 (vars -> VAR vars2 .)
    PLUS            reduce using rule 12 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 12 (vars -> VAR vars2 .)


state 21

    (13) vars2 -> type . ID vars3 SEMICOLON vars2
    (14) vars2 -> type . ID vars3 SEMICOLON

    ID              shift and go to state 26


state 22

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 DAVINCI block .)


state 23

    (6) block -> LBRACE . b1 RBRACE
    (7) b1 -> . vars b2
    (8) b1 -> . b2
    (12) vars -> . VAR vars2
    (9) b2 -> . statute
    (10) b2 -> . statute b2
    (11) b2 -> . empty
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (110) empty -> .
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

    VAR             shift and go to state 10
    WHILE           shift and go to state 45
    RBRACE          reduce using rule 110 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    b1                             shift and go to state 27
    vars                           shift and go to state 28
    b2                             shift and go to state 29
    statute                        shift and go to state 30
    empty                          shift and go to state 31
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 24

    (47) funcs -> type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    type                           shift and go to state 75

state 25

    (48) funcs -> VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    type                           shift and go to state 76

state 26

    (13) vars2 -> type ID . vars3 SEMICOLON vars2
    (14) vars2 -> type ID . vars3 SEMICOLON
    (15) vars3 -> . COMMA ID vars3
    (16) vars3 -> . list vars3
    (17) vars3 -> . list COMMA ID vars3
    (18) vars3 -> . empty
    (19) list -> . LBRACKET exp RBRACKET
    (110) empty -> .

    COMMA           shift and go to state 78
    LBRACKET        shift and go to state 81
    SEMICOLON       reduce using rule 110 (empty -> .)

    vars3                          shift and go to state 77
    list                           shift and go to state 79
    empty                          shift and go to state 80

state 27

    (6) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 82


state 28

    (7) b1 -> vars . b2
    (9) b2 -> . statute
    (10) b2 -> . statute b2
    (11) b2 -> . empty
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (110) empty -> .
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

    WHILE           shift and go to state 45
    RBRACE          reduce using rule 110 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    b2                             shift and go to state 83
    statute                        shift and go to state 30
    empty                          shift and go to state 31
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 29

    (8) b1 -> b2 .

    RBRACE          reduce using rule 8 (b1 -> b2 .)


state 30

    (9) b2 -> statute .
    (10) b2 -> statute . b2
    (9) b2 -> . statute
    (10) b2 -> . statute b2
    (11) b2 -> . empty
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (110) empty -> .
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

  ! reduce/reduce conflict for RBRACE resolved using rule 9 (b2 -> statute .)
    RBRACE          reduce using rule 9 (b2 -> statute .)
    WHILE           shift and go to state 45
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

  ! RBRACE          [ reduce using rule 110 (empty -> .) ]

    statute                        shift and go to state 30
    b2                             shift and go to state 84
    empty                          shift and go to state 31
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 31

    (11) b2 -> empty .

    RBRACE          reduce using rule 11 (b2 -> empty .)


state 32

    (20) statute -> assignment .

    WHILE           reduce using rule 20 (statute -> assignment .)
    ID              reduce using rule 20 (statute -> assignment .)
    IF              reduce using rule 20 (statute -> assignment .)
    TRIANGLE        reduce using rule 20 (statute -> assignment .)
    RECTANGLE       reduce using rule 20 (statute -> assignment .)
    SQUARE          reduce using rule 20 (statute -> assignment .)
    CIRCLE          reduce using rule 20 (statute -> assignment .)
    POLIGON         reduce using rule 20 (statute -> assignment .)
    COLOR           reduce using rule 20 (statute -> assignment .)
    PENSIZE         reduce using rule 20 (statute -> assignment .)
    PENFORWARD      reduce using rule 20 (statute -> assignment .)
    PENBACK         reduce using rule 20 (statute -> assignment .)
    ROTATE          reduce using rule 20 (statute -> assignment .)
    PENON           reduce using rule 20 (statute -> assignment .)
    PENOFF          reduce using rule 20 (statute -> assignment .)
    DIVIDE          reduce using rule 20 (statute -> assignment .)
    TIMES           reduce using rule 20 (statute -> assignment .)
    LPAREN          reduce using rule 20 (statute -> assignment .)
    CTE_INT         reduce using rule 20 (statute -> assignment .)
    CTE_FLOAT       reduce using rule 20 (statute -> assignment .)
    MINUS           reduce using rule 20 (statute -> assignment .)
    PLUS            reduce using rule 20 (statute -> assignment .)
    RBRACE          reduce using rule 20 (statute -> assignment .)
    VAR             reduce using rule 20 (statute -> assignment .)


state 33

    (21) statute -> call .
    (80) var_cte -> call .

  ! reduce/reduce conflict for MINUS resolved using rule 21 (statute -> call .)
  ! reduce/reduce conflict for PLUS resolved using rule 21 (statute -> call .)
    WHILE           reduce using rule 21 (statute -> call .)
    ID              reduce using rule 21 (statute -> call .)
    IF              reduce using rule 21 (statute -> call .)
    TRIANGLE        reduce using rule 21 (statute -> call .)
    RECTANGLE       reduce using rule 21 (statute -> call .)
    SQUARE          reduce using rule 21 (statute -> call .)
    CIRCLE          reduce using rule 21 (statute -> call .)
    POLIGON         reduce using rule 21 (statute -> call .)
    COLOR           reduce using rule 21 (statute -> call .)
    PENSIZE         reduce using rule 21 (statute -> call .)
    PENFORWARD      reduce using rule 21 (statute -> call .)
    PENBACK         reduce using rule 21 (statute -> call .)
    ROTATE          reduce using rule 21 (statute -> call .)
    PENON           reduce using rule 21 (statute -> call .)
    PENOFF          reduce using rule 21 (statute -> call .)
    DIVIDE          reduce using rule 21 (statute -> call .)
    TIMES           reduce using rule 21 (statute -> call .)
    LPAREN          reduce using rule 21 (statute -> call .)
    CTE_INT         reduce using rule 21 (statute -> call .)
    CTE_FLOAT       reduce using rule 21 (statute -> call .)
    MINUS           reduce using rule 21 (statute -> call .)
    PLUS            reduce using rule 21 (statute -> call .)
    RBRACE          reduce using rule 21 (statute -> call .)
    VAR             reduce using rule 21 (statute -> call .)
    SEMICOLON       reduce using rule 80 (var_cte -> call .)

  ! MINUS           [ reduce using rule 80 (var_cte -> call .) ]
  ! PLUS            [ reduce using rule 80 (var_cte -> call .) ]


state 34

    (22) statute -> condition .

    WHILE           reduce using rule 22 (statute -> condition .)
    ID              reduce using rule 22 (statute -> condition .)
    IF              reduce using rule 22 (statute -> condition .)
    TRIANGLE        reduce using rule 22 (statute -> condition .)
    RECTANGLE       reduce using rule 22 (statute -> condition .)
    SQUARE          reduce using rule 22 (statute -> condition .)
    CIRCLE          reduce using rule 22 (statute -> condition .)
    POLIGON         reduce using rule 22 (statute -> condition .)
    COLOR           reduce using rule 22 (statute -> condition .)
    PENSIZE         reduce using rule 22 (statute -> condition .)
    PENFORWARD      reduce using rule 22 (statute -> condition .)
    PENBACK         reduce using rule 22 (statute -> condition .)
    ROTATE          reduce using rule 22 (statute -> condition .)
    PENON           reduce using rule 22 (statute -> condition .)
    PENOFF          reduce using rule 22 (statute -> condition .)
    DIVIDE          reduce using rule 22 (statute -> condition .)
    TIMES           reduce using rule 22 (statute -> condition .)
    LPAREN          reduce using rule 22 (statute -> condition .)
    CTE_INT         reduce using rule 22 (statute -> condition .)
    CTE_FLOAT       reduce using rule 22 (statute -> condition .)
    MINUS           reduce using rule 22 (statute -> condition .)
    PLUS            reduce using rule 22 (statute -> condition .)
    RBRACE          reduce using rule 22 (statute -> condition .)
    VAR             reduce using rule 22 (statute -> condition .)


state 35

    (23) statute -> triangle .

    WHILE           reduce using rule 23 (statute -> triangle .)
    ID              reduce using rule 23 (statute -> triangle .)
    IF              reduce using rule 23 (statute -> triangle .)
    TRIANGLE        reduce using rule 23 (statute -> triangle .)
    RECTANGLE       reduce using rule 23 (statute -> triangle .)
    SQUARE          reduce using rule 23 (statute -> triangle .)
    CIRCLE          reduce using rule 23 (statute -> triangle .)
    POLIGON         reduce using rule 23 (statute -> triangle .)
    COLOR           reduce using rule 23 (statute -> triangle .)
    PENSIZE         reduce using rule 23 (statute -> triangle .)
    PENFORWARD      reduce using rule 23 (statute -> triangle .)
    PENBACK         reduce using rule 23 (statute -> triangle .)
    ROTATE          reduce using rule 23 (statute -> triangle .)
    PENON           reduce using rule 23 (statute -> triangle .)
    PENOFF          reduce using rule 23 (statute -> triangle .)
    DIVIDE          reduce using rule 23 (statute -> triangle .)
    TIMES           reduce using rule 23 (statute -> triangle .)
    LPAREN          reduce using rule 23 (statute -> triangle .)
    CTE_INT         reduce using rule 23 (statute -> triangle .)
    CTE_FLOAT       reduce using rule 23 (statute -> triangle .)
    MINUS           reduce using rule 23 (statute -> triangle .)
    PLUS            reduce using rule 23 (statute -> triangle .)
    RBRACE          reduce using rule 23 (statute -> triangle .)
    VAR             reduce using rule 23 (statute -> triangle .)


state 36

    (24) statute -> rectangle .

    WHILE           reduce using rule 24 (statute -> rectangle .)
    ID              reduce using rule 24 (statute -> rectangle .)
    IF              reduce using rule 24 (statute -> rectangle .)
    TRIANGLE        reduce using rule 24 (statute -> rectangle .)
    RECTANGLE       reduce using rule 24 (statute -> rectangle .)
    SQUARE          reduce using rule 24 (statute -> rectangle .)
    CIRCLE          reduce using rule 24 (statute -> rectangle .)
    POLIGON         reduce using rule 24 (statute -> rectangle .)
    COLOR           reduce using rule 24 (statute -> rectangle .)
    PENSIZE         reduce using rule 24 (statute -> rectangle .)
    PENFORWARD      reduce using rule 24 (statute -> rectangle .)
    PENBACK         reduce using rule 24 (statute -> rectangle .)
    ROTATE          reduce using rule 24 (statute -> rectangle .)
    PENON           reduce using rule 24 (statute -> rectangle .)
    PENOFF          reduce using rule 24 (statute -> rectangle .)
    DIVIDE          reduce using rule 24 (statute -> rectangle .)
    TIMES           reduce using rule 24 (statute -> rectangle .)
    LPAREN          reduce using rule 24 (statute -> rectangle .)
    CTE_INT         reduce using rule 24 (statute -> rectangle .)
    CTE_FLOAT       reduce using rule 24 (statute -> rectangle .)
    MINUS           reduce using rule 24 (statute -> rectangle .)
    PLUS            reduce using rule 24 (statute -> rectangle .)
    RBRACE          reduce using rule 24 (statute -> rectangle .)
    VAR             reduce using rule 24 (statute -> rectangle .)


state 37

    (25) statute -> square .

    WHILE           reduce using rule 25 (statute -> square .)
    ID              reduce using rule 25 (statute -> square .)
    IF              reduce using rule 25 (statute -> square .)
    TRIANGLE        reduce using rule 25 (statute -> square .)
    RECTANGLE       reduce using rule 25 (statute -> square .)
    SQUARE          reduce using rule 25 (statute -> square .)
    CIRCLE          reduce using rule 25 (statute -> square .)
    POLIGON         reduce using rule 25 (statute -> square .)
    COLOR           reduce using rule 25 (statute -> square .)
    PENSIZE         reduce using rule 25 (statute -> square .)
    PENFORWARD      reduce using rule 25 (statute -> square .)
    PENBACK         reduce using rule 25 (statute -> square .)
    ROTATE          reduce using rule 25 (statute -> square .)
    PENON           reduce using rule 25 (statute -> square .)
    PENOFF          reduce using rule 25 (statute -> square .)
    DIVIDE          reduce using rule 25 (statute -> square .)
    TIMES           reduce using rule 25 (statute -> square .)
    LPAREN          reduce using rule 25 (statute -> square .)
    CTE_INT         reduce using rule 25 (statute -> square .)
    CTE_FLOAT       reduce using rule 25 (statute -> square .)
    MINUS           reduce using rule 25 (statute -> square .)
    PLUS            reduce using rule 25 (statute -> square .)
    RBRACE          reduce using rule 25 (statute -> square .)
    VAR             reduce using rule 25 (statute -> square .)


state 38

    (26) statute -> circle .

    WHILE           reduce using rule 26 (statute -> circle .)
    ID              reduce using rule 26 (statute -> circle .)
    IF              reduce using rule 26 (statute -> circle .)
    TRIANGLE        reduce using rule 26 (statute -> circle .)
    RECTANGLE       reduce using rule 26 (statute -> circle .)
    SQUARE          reduce using rule 26 (statute -> circle .)
    CIRCLE          reduce using rule 26 (statute -> circle .)
    POLIGON         reduce using rule 26 (statute -> circle .)
    COLOR           reduce using rule 26 (statute -> circle .)
    PENSIZE         reduce using rule 26 (statute -> circle .)
    PENFORWARD      reduce using rule 26 (statute -> circle .)
    PENBACK         reduce using rule 26 (statute -> circle .)
    ROTATE          reduce using rule 26 (statute -> circle .)
    PENON           reduce using rule 26 (statute -> circle .)
    PENOFF          reduce using rule 26 (statute -> circle .)
    DIVIDE          reduce using rule 26 (statute -> circle .)
    TIMES           reduce using rule 26 (statute -> circle .)
    LPAREN          reduce using rule 26 (statute -> circle .)
    CTE_INT         reduce using rule 26 (statute -> circle .)
    CTE_FLOAT       reduce using rule 26 (statute -> circle .)
    MINUS           reduce using rule 26 (statute -> circle .)
    PLUS            reduce using rule 26 (statute -> circle .)
    RBRACE          reduce using rule 26 (statute -> circle .)
    VAR             reduce using rule 26 (statute -> circle .)


state 39

    (27) statute -> poligon .

    WHILE           reduce using rule 27 (statute -> poligon .)
    ID              reduce using rule 27 (statute -> poligon .)
    IF              reduce using rule 27 (statute -> poligon .)
    TRIANGLE        reduce using rule 27 (statute -> poligon .)
    RECTANGLE       reduce using rule 27 (statute -> poligon .)
    SQUARE          reduce using rule 27 (statute -> poligon .)
    CIRCLE          reduce using rule 27 (statute -> poligon .)
    POLIGON         reduce using rule 27 (statute -> poligon .)
    COLOR           reduce using rule 27 (statute -> poligon .)
    PENSIZE         reduce using rule 27 (statute -> poligon .)
    PENFORWARD      reduce using rule 27 (statute -> poligon .)
    PENBACK         reduce using rule 27 (statute -> poligon .)
    ROTATE          reduce using rule 27 (statute -> poligon .)
    PENON           reduce using rule 27 (statute -> poligon .)
    PENOFF          reduce using rule 27 (statute -> poligon .)
    DIVIDE          reduce using rule 27 (statute -> poligon .)
    TIMES           reduce using rule 27 (statute -> poligon .)
    LPAREN          reduce using rule 27 (statute -> poligon .)
    CTE_INT         reduce using rule 27 (statute -> poligon .)
    CTE_FLOAT       reduce using rule 27 (statute -> poligon .)
    MINUS           reduce using rule 27 (statute -> poligon .)
    PLUS            reduce using rule 27 (statute -> poligon .)
    RBRACE          reduce using rule 27 (statute -> poligon .)
    VAR             reduce using rule 27 (statute -> poligon .)


state 40

    (28) statute -> color .

    WHILE           reduce using rule 28 (statute -> color .)
    ID              reduce using rule 28 (statute -> color .)
    IF              reduce using rule 28 (statute -> color .)
    TRIANGLE        reduce using rule 28 (statute -> color .)
    RECTANGLE       reduce using rule 28 (statute -> color .)
    SQUARE          reduce using rule 28 (statute -> color .)
    CIRCLE          reduce using rule 28 (statute -> color .)
    POLIGON         reduce using rule 28 (statute -> color .)
    COLOR           reduce using rule 28 (statute -> color .)
    PENSIZE         reduce using rule 28 (statute -> color .)
    PENFORWARD      reduce using rule 28 (statute -> color .)
    PENBACK         reduce using rule 28 (statute -> color .)
    ROTATE          reduce using rule 28 (statute -> color .)
    PENON           reduce using rule 28 (statute -> color .)
    PENOFF          reduce using rule 28 (statute -> color .)
    DIVIDE          reduce using rule 28 (statute -> color .)
    TIMES           reduce using rule 28 (statute -> color .)
    LPAREN          reduce using rule 28 (statute -> color .)
    CTE_INT         reduce using rule 28 (statute -> color .)
    CTE_FLOAT       reduce using rule 28 (statute -> color .)
    MINUS           reduce using rule 28 (statute -> color .)
    PLUS            reduce using rule 28 (statute -> color .)
    RBRACE          reduce using rule 28 (statute -> color .)
    VAR             reduce using rule 28 (statute -> color .)


state 41

    (29) statute -> pensize .

    WHILE           reduce using rule 29 (statute -> pensize .)
    ID              reduce using rule 29 (statute -> pensize .)
    IF              reduce using rule 29 (statute -> pensize .)
    TRIANGLE        reduce using rule 29 (statute -> pensize .)
    RECTANGLE       reduce using rule 29 (statute -> pensize .)
    SQUARE          reduce using rule 29 (statute -> pensize .)
    CIRCLE          reduce using rule 29 (statute -> pensize .)
    POLIGON         reduce using rule 29 (statute -> pensize .)
    COLOR           reduce using rule 29 (statute -> pensize .)
    PENSIZE         reduce using rule 29 (statute -> pensize .)
    PENFORWARD      reduce using rule 29 (statute -> pensize .)
    PENBACK         reduce using rule 29 (statute -> pensize .)
    ROTATE          reduce using rule 29 (statute -> pensize .)
    PENON           reduce using rule 29 (statute -> pensize .)
    PENOFF          reduce using rule 29 (statute -> pensize .)
    DIVIDE          reduce using rule 29 (statute -> pensize .)
    TIMES           reduce using rule 29 (statute -> pensize .)
    LPAREN          reduce using rule 29 (statute -> pensize .)
    CTE_INT         reduce using rule 29 (statute -> pensize .)
    CTE_FLOAT       reduce using rule 29 (statute -> pensize .)
    MINUS           reduce using rule 29 (statute -> pensize .)
    PLUS            reduce using rule 29 (statute -> pensize .)
    RBRACE          reduce using rule 29 (statute -> pensize .)
    VAR             reduce using rule 29 (statute -> pensize .)


state 42

    (30) statute -> penforward .

    WHILE           reduce using rule 30 (statute -> penforward .)
    ID              reduce using rule 30 (statute -> penforward .)
    IF              reduce using rule 30 (statute -> penforward .)
    TRIANGLE        reduce using rule 30 (statute -> penforward .)
    RECTANGLE       reduce using rule 30 (statute -> penforward .)
    SQUARE          reduce using rule 30 (statute -> penforward .)
    CIRCLE          reduce using rule 30 (statute -> penforward .)
    POLIGON         reduce using rule 30 (statute -> penforward .)
    COLOR           reduce using rule 30 (statute -> penforward .)
    PENSIZE         reduce using rule 30 (statute -> penforward .)
    PENFORWARD      reduce using rule 30 (statute -> penforward .)
    PENBACK         reduce using rule 30 (statute -> penforward .)
    ROTATE          reduce using rule 30 (statute -> penforward .)
    PENON           reduce using rule 30 (statute -> penforward .)
    PENOFF          reduce using rule 30 (statute -> penforward .)
    DIVIDE          reduce using rule 30 (statute -> penforward .)
    TIMES           reduce using rule 30 (statute -> penforward .)
    LPAREN          reduce using rule 30 (statute -> penforward .)
    CTE_INT         reduce using rule 30 (statute -> penforward .)
    CTE_FLOAT       reduce using rule 30 (statute -> penforward .)
    MINUS           reduce using rule 30 (statute -> penforward .)
    PLUS            reduce using rule 30 (statute -> penforward .)
    RBRACE          reduce using rule 30 (statute -> penforward .)
    VAR             reduce using rule 30 (statute -> penforward .)


state 43

    (31) statute -> penback .

    WHILE           reduce using rule 31 (statute -> penback .)
    ID              reduce using rule 31 (statute -> penback .)
    IF              reduce using rule 31 (statute -> penback .)
    TRIANGLE        reduce using rule 31 (statute -> penback .)
    RECTANGLE       reduce using rule 31 (statute -> penback .)
    SQUARE          reduce using rule 31 (statute -> penback .)
    CIRCLE          reduce using rule 31 (statute -> penback .)
    POLIGON         reduce using rule 31 (statute -> penback .)
    COLOR           reduce using rule 31 (statute -> penback .)
    PENSIZE         reduce using rule 31 (statute -> penback .)
    PENFORWARD      reduce using rule 31 (statute -> penback .)
    PENBACK         reduce using rule 31 (statute -> penback .)
    ROTATE          reduce using rule 31 (statute -> penback .)
    PENON           reduce using rule 31 (statute -> penback .)
    PENOFF          reduce using rule 31 (statute -> penback .)
    DIVIDE          reduce using rule 31 (statute -> penback .)
    TIMES           reduce using rule 31 (statute -> penback .)
    LPAREN          reduce using rule 31 (statute -> penback .)
    CTE_INT         reduce using rule 31 (statute -> penback .)
    CTE_FLOAT       reduce using rule 31 (statute -> penback .)
    MINUS           reduce using rule 31 (statute -> penback .)
    PLUS            reduce using rule 31 (statute -> penback .)
    RBRACE          reduce using rule 31 (statute -> penback .)
    VAR             reduce using rule 31 (statute -> penback .)


state 44

    (32) statute -> rotate .

    WHILE           reduce using rule 32 (statute -> rotate .)
    ID              reduce using rule 32 (statute -> rotate .)
    IF              reduce using rule 32 (statute -> rotate .)
    TRIANGLE        reduce using rule 32 (statute -> rotate .)
    RECTANGLE       reduce using rule 32 (statute -> rotate .)
    SQUARE          reduce using rule 32 (statute -> rotate .)
    CIRCLE          reduce using rule 32 (statute -> rotate .)
    POLIGON         reduce using rule 32 (statute -> rotate .)
    COLOR           reduce using rule 32 (statute -> rotate .)
    PENSIZE         reduce using rule 32 (statute -> rotate .)
    PENFORWARD      reduce using rule 32 (statute -> rotate .)
    PENBACK         reduce using rule 32 (statute -> rotate .)
    ROTATE          reduce using rule 32 (statute -> rotate .)
    PENON           reduce using rule 32 (statute -> rotate .)
    PENOFF          reduce using rule 32 (statute -> rotate .)
    DIVIDE          reduce using rule 32 (statute -> rotate .)
    TIMES           reduce using rule 32 (statute -> rotate .)
    LPAREN          reduce using rule 32 (statute -> rotate .)
    CTE_INT         reduce using rule 32 (statute -> rotate .)
    CTE_FLOAT       reduce using rule 32 (statute -> rotate .)
    MINUS           reduce using rule 32 (statute -> rotate .)
    PLUS            reduce using rule 32 (statute -> rotate .)
    RBRACE          reduce using rule 32 (statute -> rotate .)
    VAR             reduce using rule 32 (statute -> rotate .)


state 45

    (33) statute -> WHILE .

    WHILE           reduce using rule 33 (statute -> WHILE .)
    ID              reduce using rule 33 (statute -> WHILE .)
    IF              reduce using rule 33 (statute -> WHILE .)
    TRIANGLE        reduce using rule 33 (statute -> WHILE .)
    RECTANGLE       reduce using rule 33 (statute -> WHILE .)
    SQUARE          reduce using rule 33 (statute -> WHILE .)
    CIRCLE          reduce using rule 33 (statute -> WHILE .)
    POLIGON         reduce using rule 33 (statute -> WHILE .)
    COLOR           reduce using rule 33 (statute -> WHILE .)
    PENSIZE         reduce using rule 33 (statute -> WHILE .)
    PENFORWARD      reduce using rule 33 (statute -> WHILE .)
    PENBACK         reduce using rule 33 (statute -> WHILE .)
    ROTATE          reduce using rule 33 (statute -> WHILE .)
    PENON           reduce using rule 33 (statute -> WHILE .)
    PENOFF          reduce using rule 33 (statute -> WHILE .)
    DIVIDE          reduce using rule 33 (statute -> WHILE .)
    TIMES           reduce using rule 33 (statute -> WHILE .)
    LPAREN          reduce using rule 33 (statute -> WHILE .)
    CTE_INT         reduce using rule 33 (statute -> WHILE .)
    CTE_FLOAT       reduce using rule 33 (statute -> WHILE .)
    MINUS           reduce using rule 33 (statute -> WHILE .)
    PLUS            reduce using rule 33 (statute -> WHILE .)
    RBRACE          reduce using rule 33 (statute -> WHILE .)
    VAR             reduce using rule 33 (statute -> WHILE .)


state 46

    (34) statute -> return .

    WHILE           reduce using rule 34 (statute -> return .)
    ID              reduce using rule 34 (statute -> return .)
    IF              reduce using rule 34 (statute -> return .)
    TRIANGLE        reduce using rule 34 (statute -> return .)
    RECTANGLE       reduce using rule 34 (statute -> return .)
    SQUARE          reduce using rule 34 (statute -> return .)
    CIRCLE          reduce using rule 34 (statute -> return .)
    POLIGON         reduce using rule 34 (statute -> return .)
    COLOR           reduce using rule 34 (statute -> return .)
    PENSIZE         reduce using rule 34 (statute -> return .)
    PENFORWARD      reduce using rule 34 (statute -> return .)
    PENBACK         reduce using rule 34 (statute -> return .)
    ROTATE          reduce using rule 34 (statute -> return .)
    PENON           reduce using rule 34 (statute -> return .)
    PENOFF          reduce using rule 34 (statute -> return .)
    DIVIDE          reduce using rule 34 (statute -> return .)
    TIMES           reduce using rule 34 (statute -> return .)
    LPAREN          reduce using rule 34 (statute -> return .)
    CTE_INT         reduce using rule 34 (statute -> return .)
    CTE_FLOAT       reduce using rule 34 (statute -> return .)
    MINUS           reduce using rule 34 (statute -> return .)
    PLUS            reduce using rule 34 (statute -> return .)
    RBRACE          reduce using rule 34 (statute -> return .)
    VAR             reduce using rule 34 (statute -> return .)


state 47

    (35) statute -> penon .

    WHILE           reduce using rule 35 (statute -> penon .)
    ID              reduce using rule 35 (statute -> penon .)
    IF              reduce using rule 35 (statute -> penon .)
    TRIANGLE        reduce using rule 35 (statute -> penon .)
    RECTANGLE       reduce using rule 35 (statute -> penon .)
    SQUARE          reduce using rule 35 (statute -> penon .)
    CIRCLE          reduce using rule 35 (statute -> penon .)
    POLIGON         reduce using rule 35 (statute -> penon .)
    COLOR           reduce using rule 35 (statute -> penon .)
    PENSIZE         reduce using rule 35 (statute -> penon .)
    PENFORWARD      reduce using rule 35 (statute -> penon .)
    PENBACK         reduce using rule 35 (statute -> penon .)
    ROTATE          reduce using rule 35 (statute -> penon .)
    PENON           reduce using rule 35 (statute -> penon .)
    PENOFF          reduce using rule 35 (statute -> penon .)
    DIVIDE          reduce using rule 35 (statute -> penon .)
    TIMES           reduce using rule 35 (statute -> penon .)
    LPAREN          reduce using rule 35 (statute -> penon .)
    CTE_INT         reduce using rule 35 (statute -> penon .)
    CTE_FLOAT       reduce using rule 35 (statute -> penon .)
    MINUS           reduce using rule 35 (statute -> penon .)
    PLUS            reduce using rule 35 (statute -> penon .)
    RBRACE          reduce using rule 35 (statute -> penon .)
    VAR             reduce using rule 35 (statute -> penon .)


state 48

    (36) statute -> penoff .

    WHILE           reduce using rule 36 (statute -> penoff .)
    ID              reduce using rule 36 (statute -> penoff .)
    IF              reduce using rule 36 (statute -> penoff .)
    TRIANGLE        reduce using rule 36 (statute -> penoff .)
    RECTANGLE       reduce using rule 36 (statute -> penoff .)
    SQUARE          reduce using rule 36 (statute -> penoff .)
    CIRCLE          reduce using rule 36 (statute -> penoff .)
    POLIGON         reduce using rule 36 (statute -> penoff .)
    COLOR           reduce using rule 36 (statute -> penoff .)
    PENSIZE         reduce using rule 36 (statute -> penoff .)
    PENFORWARD      reduce using rule 36 (statute -> penoff .)
    PENBACK         reduce using rule 36 (statute -> penoff .)
    ROTATE          reduce using rule 36 (statute -> penoff .)
    PENON           reduce using rule 36 (statute -> penoff .)
    PENOFF          reduce using rule 36 (statute -> penoff .)
    DIVIDE          reduce using rule 36 (statute -> penoff .)
    TIMES           reduce using rule 36 (statute -> penoff .)
    LPAREN          reduce using rule 36 (statute -> penoff .)
    CTE_INT         reduce using rule 36 (statute -> penoff .)
    CTE_FLOAT       reduce using rule 36 (statute -> penoff .)
    MINUS           reduce using rule 36 (statute -> penoff .)
    PLUS            reduce using rule 36 (statute -> penoff .)
    RBRACE          reduce using rule 36 (statute -> penoff .)
    VAR             reduce using rule 36 (statute -> penoff .)


state 49

    (37) assignment -> ID . EQUAL expression SEMICOLON
    (38) assignment -> ID . LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (77) var_cte -> ID . var_cte1
    (81) var_cte1 -> . LBRACKET exp RBRACKET
    (82) var_cte1 -> . LPAREN exp RPAREN
    (83) var_cte1 -> . empty
    (110) empty -> .

    EQUAL           shift and go to state 85
    LBRACKET        shift and go to state 86
    LPAREN          shift and go to state 87
    MINUS           reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)

    var_cte1                       shift and go to state 88
    empty                          shift and go to state 89

state 50

    (109) return -> exp . SEMICOLON

    SEMICOLON       shift and go to state 90


state 51

    (97) factor -> LPAREN . EXPRESSION RPAREN

    EXPRESSION      shift and go to state 91


state 52

    (84) condition -> IF . LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON

    LPAREN          shift and go to state 92


state 53

    (61) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 93


state 54

    (62) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 55

    (60) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 56

    (59) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 96


state 57

    (63) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 97


state 58

    (58) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 98


state 59

    (66) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 60

    (67) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 61

    (68) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 101


state 62

    (64) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (65) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 102


state 63

    (69) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 103


state 64

    (70) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 65

    (93) exp -> term . exp1
    (94) exp1 -> . MINUS term exp1
    (95) exp1 -> . PLUS term exp1
    (96) exp1 -> . empty
    (110) empty -> .

    MINUS           shift and go to state 106
    PLUS            shift and go to state 107
    SEMICOLON       reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    LESSER          reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    EQUAL           reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)

    exp1                           shift and go to state 105
    empty                          shift and go to state 108

state 66

    (102) term -> DIVIDE .

    MINUS           reduce using rule 102 (term -> DIVIDE .)
    PLUS            reduce using rule 102 (term -> DIVIDE .)
    SEMICOLON       reduce using rule 102 (term -> DIVIDE .)
    RBRACKET        reduce using rule 102 (term -> DIVIDE .)
    LESSER          reduce using rule 102 (term -> DIVIDE .)
    GREATER         reduce using rule 102 (term -> DIVIDE .)
    EQUAL           reduce using rule 102 (term -> DIVIDE .)
    NOTEQUAL        reduce using rule 102 (term -> DIVIDE .)
    RPAREN          reduce using rule 102 (term -> DIVIDE .)
    COMMA           reduce using rule 102 (term -> DIVIDE .)


state 67

    (103) term -> TIMES .

    MINUS           reduce using rule 103 (term -> TIMES .)
    PLUS            reduce using rule 103 (term -> TIMES .)
    SEMICOLON       reduce using rule 103 (term -> TIMES .)
    RBRACKET        reduce using rule 103 (term -> TIMES .)
    LESSER          reduce using rule 103 (term -> TIMES .)
    GREATER         reduce using rule 103 (term -> TIMES .)
    EQUAL           reduce using rule 103 (term -> TIMES .)
    NOTEQUAL        reduce using rule 103 (term -> TIMES .)
    RPAREN          reduce using rule 103 (term -> TIMES .)
    COMMA           reduce using rule 103 (term -> TIMES .)


state 68

    (104) term -> factor .

    MINUS           reduce using rule 104 (term -> factor .)
    PLUS            reduce using rule 104 (term -> factor .)
    SEMICOLON       reduce using rule 104 (term -> factor .)
    RBRACKET        reduce using rule 104 (term -> factor .)
    LESSER          reduce using rule 104 (term -> factor .)
    GREATER         reduce using rule 104 (term -> factor .)
    EQUAL           reduce using rule 104 (term -> factor .)
    NOTEQUAL        reduce using rule 104 (term -> factor .)
    RPAREN          reduce using rule 104 (term -> factor .)
    COMMA           reduce using rule 104 (term -> factor .)


state 69

    (98) factor -> var_cte .

    MINUS           reduce using rule 98 (factor -> var_cte .)
    PLUS            reduce using rule 98 (factor -> var_cte .)
    SEMICOLON       reduce using rule 98 (factor -> var_cte .)
    RBRACKET        reduce using rule 98 (factor -> var_cte .)
    LESSER          reduce using rule 98 (factor -> var_cte .)
    GREATER         reduce using rule 98 (factor -> var_cte .)
    EQUAL           reduce using rule 98 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 98 (factor -> var_cte .)
    RPAREN          reduce using rule 98 (factor -> var_cte .)
    COMMA           reduce using rule 98 (factor -> var_cte .)


state 70

    (99) factor -> factor1 . var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72

    var_cte                        shift and go to state 109
    call                           shift and go to state 111

state 71

    (78) var_cte -> CTE_INT .

    MINUS           reduce using rule 78 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 78 (var_cte -> CTE_INT .)
    SEMICOLON       reduce using rule 78 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 78 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 78 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 78 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 78 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 78 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 78 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 78 (var_cte -> CTE_INT .)


state 72

    (79) var_cte -> CTE_FLOAT .

    MINUS           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 79 (var_cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 79 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 79 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 79 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 79 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 79 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 79 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 79 (var_cte -> CTE_FLOAT .)


state 73

    (100) factor1 -> MINUS .

    ID              reduce using rule 100 (factor1 -> MINUS .)
    CTE_INT         reduce using rule 100 (factor1 -> MINUS .)
    CTE_FLOAT       reduce using rule 100 (factor1 -> MINUS .)


state 74

    (101) factor1 -> PLUS .

    ID              reduce using rule 101 (factor1 -> PLUS .)
    CTE_INT         reduce using rule 101 (factor1 -> PLUS .)
    CTE_FLOAT       reduce using rule 101 (factor1 -> PLUS .)


state 75

    (47) funcs -> type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 112


state 76

    (48) funcs -> VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 113


state 77

    (13) vars2 -> type ID vars3 . SEMICOLON vars2
    (14) vars2 -> type ID vars3 . SEMICOLON

    SEMICOLON       shift and go to state 114


state 78

    (15) vars3 -> COMMA . ID vars3

    ID              shift and go to state 115


state 79

    (16) vars3 -> list . vars3
    (17) vars3 -> list . COMMA ID vars3
    (15) vars3 -> . COMMA ID vars3
    (16) vars3 -> . list vars3
    (17) vars3 -> . list COMMA ID vars3
    (18) vars3 -> . empty
    (19) list -> . LBRACKET exp RBRACKET
    (110) empty -> .

    COMMA           shift and go to state 117
    LBRACKET        shift and go to state 81
    SEMICOLON       reduce using rule 110 (empty -> .)

    list                           shift and go to state 79
    vars3                          shift and go to state 116
    empty                          shift and go to state 80

state 80

    (18) vars3 -> empty .

    SEMICOLON       reduce using rule 18 (vars3 -> empty .)


state 81

    (19) list -> LBRACKET . exp RBRACKET
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 118
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 82

    (6) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 6 (block -> LBRACE b1 RBRACE .)


state 83

    (7) b1 -> vars b2 .

    RBRACE          reduce using rule 7 (b1 -> vars b2 .)


state 84

    (10) b2 -> statute b2 .

    RBRACE          reduce using rule 10 (b2 -> statute b2 .)


state 85

    (37) assignment -> ID EQUAL . expression SEMICOLON
    (87) expression -> . exp expression1 ID
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    expression                     shift and go to state 119
    exp                            shift and go to state 120
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 86

    (38) assignment -> ID LBRACKET . exp RBRACKET EQUAL expression SEMICOLON
    (81) var_cte1 -> LBRACKET . exp RBRACKET
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 121
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 87

    (105) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (82) var_cte1 -> LPAREN . exp RPAREN
    (106) call1 -> . ID COMMA call1
    (107) call1 -> . exp
    (108) call1 -> . ST_CTE
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 122
    ST_CTE          shift and go to state 125
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    call1                          shift and go to state 123
    exp                            shift and go to state 124
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 88

    (77) var_cte -> ID var_cte1 .

    MINUS           reduce using rule 77 (var_cte -> ID var_cte1 .)
    PLUS            reduce using rule 77 (var_cte -> ID var_cte1 .)
    SEMICOLON       reduce using rule 77 (var_cte -> ID var_cte1 .)
    RBRACKET        reduce using rule 77 (var_cte -> ID var_cte1 .)
    LESSER          reduce using rule 77 (var_cte -> ID var_cte1 .)
    GREATER         reduce using rule 77 (var_cte -> ID var_cte1 .)
    EQUAL           reduce using rule 77 (var_cte -> ID var_cte1 .)
    NOTEQUAL        reduce using rule 77 (var_cte -> ID var_cte1 .)
    RPAREN          reduce using rule 77 (var_cte -> ID var_cte1 .)
    COMMA           reduce using rule 77 (var_cte -> ID var_cte1 .)


state 89

    (83) var_cte1 -> empty .

    MINUS           reduce using rule 83 (var_cte1 -> empty .)
    PLUS            reduce using rule 83 (var_cte1 -> empty .)
    SEMICOLON       reduce using rule 83 (var_cte1 -> empty .)
    RBRACKET        reduce using rule 83 (var_cte1 -> empty .)
    LESSER          reduce using rule 83 (var_cte1 -> empty .)
    GREATER         reduce using rule 83 (var_cte1 -> empty .)
    EQUAL           reduce using rule 83 (var_cte1 -> empty .)
    NOTEQUAL        reduce using rule 83 (var_cte1 -> empty .)
    RPAREN          reduce using rule 83 (var_cte1 -> empty .)
    COMMA           reduce using rule 83 (var_cte1 -> empty .)


state 90

    (109) return -> exp SEMICOLON .

    WHILE           reduce using rule 109 (return -> exp SEMICOLON .)
    ID              reduce using rule 109 (return -> exp SEMICOLON .)
    IF              reduce using rule 109 (return -> exp SEMICOLON .)
    TRIANGLE        reduce using rule 109 (return -> exp SEMICOLON .)
    RECTANGLE       reduce using rule 109 (return -> exp SEMICOLON .)
    SQUARE          reduce using rule 109 (return -> exp SEMICOLON .)
    CIRCLE          reduce using rule 109 (return -> exp SEMICOLON .)
    POLIGON         reduce using rule 109 (return -> exp SEMICOLON .)
    COLOR           reduce using rule 109 (return -> exp SEMICOLON .)
    PENSIZE         reduce using rule 109 (return -> exp SEMICOLON .)
    PENFORWARD      reduce using rule 109 (return -> exp SEMICOLON .)
    PENBACK         reduce using rule 109 (return -> exp SEMICOLON .)
    ROTATE          reduce using rule 109 (return -> exp SEMICOLON .)
    PENON           reduce using rule 109 (return -> exp SEMICOLON .)
    PENOFF          reduce using rule 109 (return -> exp SEMICOLON .)
    DIVIDE          reduce using rule 109 (return -> exp SEMICOLON .)
    TIMES           reduce using rule 109 (return -> exp SEMICOLON .)
    LPAREN          reduce using rule 109 (return -> exp SEMICOLON .)
    CTE_INT         reduce using rule 109 (return -> exp SEMICOLON .)
    CTE_FLOAT       reduce using rule 109 (return -> exp SEMICOLON .)
    MINUS           reduce using rule 109 (return -> exp SEMICOLON .)
    PLUS            reduce using rule 109 (return -> exp SEMICOLON .)
    RBRACE          reduce using rule 109 (return -> exp SEMICOLON .)
    VAR             reduce using rule 109 (return -> exp SEMICOLON .)


state 91

    (97) factor -> LPAREN EXPRESSION . RPAREN

    RPAREN          shift and go to state 126


state 92

    (84) condition -> IF LPAREN . EXPRESSION RPAREN BLOCK condition1 SEMICOLON

    EXPRESSION      shift and go to state 127


state 93

    (61) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 128
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 94

    (62) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 129
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 95

    (60) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 130
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 96

    (59) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 131
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 97

    (63) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 132
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 98

    (58) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (39) color_cte -> . RED
    (40) color_cte -> . BLUE
    (41) color_cte -> . YELLOW
    (42) color_cte -> . GREEN
    (43) color_cte -> . PINK
    (44) color_cte -> . PURPLE

    RED             shift and go to state 134
    BLUE            shift and go to state 135
    YELLOW          shift and go to state 136
    GREEN           shift and go to state 137
    PINK            shift and go to state 138
    PURPLE          shift and go to state 139

    color_cte                      shift and go to state 133

state 99

    (66) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 140
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 100

    (67) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 141
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 101

    (68) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 142
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 102

    (64) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (65) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    CTE_STRING      shift and go to state 144
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 143
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 103

    (69) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 145


state 104

    (70) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 146


state 105

    (93) exp -> term exp1 .

    SEMICOLON       reduce using rule 93 (exp -> term exp1 .)
    RBRACKET        reduce using rule 93 (exp -> term exp1 .)
    LESSER          reduce using rule 93 (exp -> term exp1 .)
    GREATER         reduce using rule 93 (exp -> term exp1 .)
    EQUAL           reduce using rule 93 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 93 (exp -> term exp1 .)
    RPAREN          reduce using rule 93 (exp -> term exp1 .)
    COMMA           reduce using rule 93 (exp -> term exp1 .)


state 106

    (94) exp1 -> MINUS . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    term                           shift and go to state 147
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 107

    (95) exp1 -> PLUS . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    term                           shift and go to state 148
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 108

    (96) exp1 -> empty .

    SEMICOLON       reduce using rule 96 (exp1 -> empty .)
    RBRACKET        reduce using rule 96 (exp1 -> empty .)
    LESSER          reduce using rule 96 (exp1 -> empty .)
    GREATER         reduce using rule 96 (exp1 -> empty .)
    EQUAL           reduce using rule 96 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 96 (exp1 -> empty .)
    RPAREN          reduce using rule 96 (exp1 -> empty .)
    COMMA           reduce using rule 96 (exp1 -> empty .)


state 109

    (99) factor -> factor1 var_cte .

    MINUS           reduce using rule 99 (factor -> factor1 var_cte .)
    PLUS            reduce using rule 99 (factor -> factor1 var_cte .)
    SEMICOLON       reduce using rule 99 (factor -> factor1 var_cte .)
    RBRACKET        reduce using rule 99 (factor -> factor1 var_cte .)
    LESSER          reduce using rule 99 (factor -> factor1 var_cte .)
    GREATER         reduce using rule 99 (factor -> factor1 var_cte .)
    EQUAL           reduce using rule 99 (factor -> factor1 var_cte .)
    NOTEQUAL        reduce using rule 99 (factor -> factor1 var_cte .)
    RPAREN          reduce using rule 99 (factor -> factor1 var_cte .)
    COMMA           reduce using rule 99 (factor -> factor1 var_cte .)


state 110

    (77) var_cte -> ID . var_cte1
    (105) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (81) var_cte1 -> . LBRACKET exp RBRACKET
    (82) var_cte1 -> . LPAREN exp RPAREN
    (83) var_cte1 -> . empty
    (110) empty -> .

    LPAREN          shift and go to state 87
    LBRACKET        shift and go to state 149
    MINUS           reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    SEMICOLON       reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    LESSER          reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    EQUAL           reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)

    var_cte1                       shift and go to state 88
    empty                          shift and go to state 89

state 111

    (80) var_cte -> call .

    MINUS           reduce using rule 80 (var_cte -> call .)
    PLUS            reduce using rule 80 (var_cte -> call .)
    SEMICOLON       reduce using rule 80 (var_cte -> call .)
    RBRACKET        reduce using rule 80 (var_cte -> call .)
    LESSER          reduce using rule 80 (var_cte -> call .)
    GREATER         reduce using rule 80 (var_cte -> call .)
    EQUAL           reduce using rule 80 (var_cte -> call .)
    NOTEQUAL        reduce using rule 80 (var_cte -> call .)
    RPAREN          reduce using rule 80 (var_cte -> call .)
    COMMA           reduce using rule 80 (var_cte -> call .)


state 112

    (47) funcs -> type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (49) funcs1 -> . COMMA type ID funcs1
    (50) funcs1 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 110 (empty -> .)

    funcs1                         shift and go to state 150
    empty                          shift and go to state 152

state 113

    (48) funcs -> VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (49) funcs1 -> . COMMA type ID funcs1
    (50) funcs1 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 110 (empty -> .)

    funcs1                         shift and go to state 153
    empty                          shift and go to state 152

state 114

    (13) vars2 -> type ID vars3 SEMICOLON . vars2
    (14) vars2 -> type ID vars3 SEMICOLON .
    (13) vars2 -> . type ID vars3 SEMICOLON vars2
    (14) vars2 -> . type ID vars3 SEMICOLON
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    VOID            reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    DAVINCI         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    WHILE           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    ID              reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    IF              reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    TRIANGLE        reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    RECTANGLE       reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    SQUARE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    CIRCLE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    POLIGON         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    COLOR           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PENSIZE         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PENFORWARD      reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PENBACK         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    ROTATE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PENON           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PENOFF          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    DIVIDE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    TIMES           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    LPAREN          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    CTE_INT         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    CTE_FLOAT       reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    MINUS           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    PLUS            reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    RBRACE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

  ! INT             [ reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! BOOL            [ reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! STRING          [ reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON .) ]

    type                           shift and go to state 21
    vars2                          shift and go to state 154

state 115

    (15) vars3 -> COMMA ID . vars3
    (15) vars3 -> . COMMA ID vars3
    (16) vars3 -> . list vars3
    (17) vars3 -> . list COMMA ID vars3
    (18) vars3 -> . empty
    (19) list -> . LBRACKET exp RBRACKET
    (110) empty -> .

    COMMA           shift and go to state 78
    LBRACKET        shift and go to state 81
    SEMICOLON       reduce using rule 110 (empty -> .)

    vars3                          shift and go to state 155
    list                           shift and go to state 79
    empty                          shift and go to state 80

state 116

    (16) vars3 -> list vars3 .

    SEMICOLON       reduce using rule 16 (vars3 -> list vars3 .)


state 117

    (17) vars3 -> list COMMA . ID vars3
    (15) vars3 -> COMMA . ID vars3

    ID              shift and go to state 156


state 118

    (19) list -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 157


state 119

    (37) assignment -> ID EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 158


state 120

    (87) expression -> exp . expression1 ID
    (88) expression1 -> . expression2
    (89) expression2 -> . LESSER
    (90) expression2 -> . GREATER
    (91) expression2 -> . EQUAL
    (92) expression2 -> . NOTEQUAL

    LESSER          shift and go to state 161
    GREATER         shift and go to state 162
    EQUAL           shift and go to state 163
    NOTEQUAL        shift and go to state 164

    expression1                    shift and go to state 159
    expression2                    shift and go to state 160

state 121

    (38) assignment -> ID LBRACKET exp . RBRACKET EQUAL expression SEMICOLON
    (81) var_cte1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 165


state 122

    (106) call1 -> ID . COMMA call1
    (77) var_cte -> ID . var_cte1
    (105) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (81) var_cte1 -> . LBRACKET exp RBRACKET
    (82) var_cte1 -> . LPAREN exp RPAREN
    (83) var_cte1 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 166
    LPAREN          shift and go to state 87
    LBRACKET        shift and go to state 149
    MINUS           reduce using rule 110 (empty -> .)
    PLUS            reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)

    var_cte1                       shift and go to state 88
    empty                          shift and go to state 89

state 123

    (105) call -> ID LPAREN call1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 167


state 124

    (82) var_cte1 -> LPAREN exp . RPAREN
    (107) call1 -> exp .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 168

  ! RPAREN          [ reduce using rule 107 (call1 -> exp .) ]


state 125

    (108) call1 -> ST_CTE .

    RPAREN          reduce using rule 108 (call1 -> ST_CTE .)


state 126

    (97) factor -> LPAREN EXPRESSION RPAREN .

    MINUS           reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    SEMICOLON       reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    RBRACKET        reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    LESSER          reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    GREATER         reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    EQUAL           reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    NOTEQUAL        reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 97 (factor -> LPAREN EXPRESSION RPAREN .)


state 127

    (84) condition -> IF LPAREN EXPRESSION . RPAREN BLOCK condition1 SEMICOLON

    RPAREN          shift and go to state 169


state 128

    (61) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 170


state 129

    (62) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 171


state 130

    (60) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 172


state 131

    (59) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 173


state 132

    (63) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 174


state 133

    (58) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 175


state 134

    (39) color_cte -> RED .

    RPAREN          reduce using rule 39 (color_cte -> RED .)


state 135

    (40) color_cte -> BLUE .

    RPAREN          reduce using rule 40 (color_cte -> BLUE .)


state 136

    (41) color_cte -> YELLOW .

    RPAREN          reduce using rule 41 (color_cte -> YELLOW .)


state 137

    (42) color_cte -> GREEN .

    RPAREN          reduce using rule 42 (color_cte -> GREEN .)


state 138

    (43) color_cte -> PINK .

    RPAREN          reduce using rule 43 (color_cte -> PINK .)


state 139

    (44) color_cte -> PURPLE .

    RPAREN          reduce using rule 44 (color_cte -> PURPLE .)


state 140

    (66) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 176


state 141

    (67) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 177


state 142

    (68) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 178


state 143

    (64) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 144

    (65) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 145

    (69) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 181


state 146

    (70) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 182


state 147

    (94) exp1 -> MINUS term . exp1
    (94) exp1 -> . MINUS term exp1
    (95) exp1 -> . PLUS term exp1
    (96) exp1 -> . empty
    (110) empty -> .

    MINUS           shift and go to state 106
    PLUS            shift and go to state 107
    SEMICOLON       reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    LESSER          reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    EQUAL           reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)

    exp1                           shift and go to state 183
    empty                          shift and go to state 108

state 148

    (95) exp1 -> PLUS term . exp1
    (94) exp1 -> . MINUS term exp1
    (95) exp1 -> . PLUS term exp1
    (96) exp1 -> . empty
    (110) empty -> .

    MINUS           shift and go to state 106
    PLUS            shift and go to state 107
    SEMICOLON       reduce using rule 110 (empty -> .)
    RBRACKET        reduce using rule 110 (empty -> .)
    LESSER          reduce using rule 110 (empty -> .)
    GREATER         reduce using rule 110 (empty -> .)
    EQUAL           reduce using rule 110 (empty -> .)
    NOTEQUAL        reduce using rule 110 (empty -> .)
    RPAREN          reduce using rule 110 (empty -> .)
    COMMA           reduce using rule 110 (empty -> .)

    exp1                           shift and go to state 184
    empty                          shift and go to state 108

state 149

    (81) var_cte1 -> LBRACKET . exp RBRACKET
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 185
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 150

    (47) funcs -> type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 186


state 151

    (49) funcs1 -> COMMA . type ID funcs1
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    type                           shift and go to state 187

state 152

    (50) funcs1 -> empty .

    RPAREN          reduce using rule 50 (funcs1 -> empty .)


state 153

    (48) funcs -> VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 188


state 154

    (13) vars2 -> type ID vars3 SEMICOLON vars2 .

    VOID            reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    INT             reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    FLOAT           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    BOOL            reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    STRING          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    DAVINCI         reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    ID              reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    IF              reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    DIVIDE          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    TIMES           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    LPAREN          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    CTE_INT         reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    CTE_FLOAT       reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    MINUS           reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PLUS            reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 13 (vars2 -> type ID vars3 SEMICOLON vars2 .)


state 155

    (15) vars3 -> COMMA ID vars3 .

    SEMICOLON       reduce using rule 15 (vars3 -> COMMA ID vars3 .)


state 156

    (17) vars3 -> list COMMA ID . vars3
    (15) vars3 -> COMMA ID . vars3
    (15) vars3 -> . COMMA ID vars3
    (16) vars3 -> . list vars3
    (17) vars3 -> . list COMMA ID vars3
    (18) vars3 -> . empty
    (19) list -> . LBRACKET exp RBRACKET
    (110) empty -> .

    COMMA           shift and go to state 78
    LBRACKET        shift and go to state 81
    SEMICOLON       reduce using rule 110 (empty -> .)

    list                           shift and go to state 79
    vars3                          shift and go to state 189
    empty                          shift and go to state 80

state 157

    (19) list -> LBRACKET exp RBRACKET .

    COMMA           reduce using rule 19 (list -> LBRACKET exp RBRACKET .)
    LBRACKET        reduce using rule 19 (list -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 19 (list -> LBRACKET exp RBRACKET .)


state 158

    (37) assignment -> ID EQUAL expression SEMICOLON .

    WHILE           reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    ID              reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    IF              reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    TRIANGLE        reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    RECTANGLE       reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    SQUARE          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    CIRCLE          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    POLIGON         reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    COLOR           reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PENSIZE         reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PENFORWARD      reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PENBACK         reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    ROTATE          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PENON           reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PENOFF          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    DIVIDE          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    TIMES           reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    CTE_INT         reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    CTE_FLOAT       reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    MINUS           reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    PLUS            reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)
    VAR             reduce using rule 37 (assignment -> ID EQUAL expression SEMICOLON .)


state 159

    (87) expression -> exp expression1 . ID

    ID              shift and go to state 190


state 160

    (88) expression1 -> expression2 .

    ID              reduce using rule 88 (expression1 -> expression2 .)


state 161

    (89) expression2 -> LESSER .

    ID              reduce using rule 89 (expression2 -> LESSER .)


state 162

    (90) expression2 -> GREATER .

    ID              reduce using rule 90 (expression2 -> GREATER .)


state 163

    (91) expression2 -> EQUAL .

    ID              reduce using rule 91 (expression2 -> EQUAL .)


state 164

    (92) expression2 -> NOTEQUAL .

    ID              reduce using rule 92 (expression2 -> NOTEQUAL .)


state 165

    (38) assignment -> ID LBRACKET exp RBRACKET . EQUAL expression SEMICOLON
    (81) var_cte1 -> LBRACKET exp RBRACKET .

    EQUAL           shift and go to state 191
    MINUS           reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)


state 166

    (106) call1 -> ID COMMA . call1
    (106) call1 -> . ID COMMA call1
    (107) call1 -> . exp
    (108) call1 -> . ST_CTE
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 122
    ST_CTE          shift and go to state 125
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    call1                          shift and go to state 192
    exp                            shift and go to state 193
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 167

    (105) call -> ID LPAREN call1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 168

    (82) var_cte1 -> LPAREN exp RPAREN .

    MINUS           reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    LESSER          reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    GREATER         reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 82 (var_cte1 -> LPAREN exp RPAREN .)


state 169

    (84) condition -> IF LPAREN EXPRESSION RPAREN . BLOCK condition1 SEMICOLON

    BLOCK           shift and go to state 195


state 170

    (61) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 196
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 171

    (62) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 197
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 172

    (60) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 198


state 173

    (59) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 199


state 174

    (63) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 200
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 175

    (58) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 176

    (66) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 202


state 177

    (67) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 178

    (68) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 204


state 179

    (64) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 205


state 180

    (65) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 206


state 181

    (69) penon -> PENON LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TIMES           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 182

    (70) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TIMES           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    LPAREN          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    MINUS           reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PLUS            reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 183

    (94) exp1 -> MINUS term exp1 .

    SEMICOLON       reduce using rule 94 (exp1 -> MINUS term exp1 .)
    RBRACKET        reduce using rule 94 (exp1 -> MINUS term exp1 .)
    LESSER          reduce using rule 94 (exp1 -> MINUS term exp1 .)
    GREATER         reduce using rule 94 (exp1 -> MINUS term exp1 .)
    EQUAL           reduce using rule 94 (exp1 -> MINUS term exp1 .)
    NOTEQUAL        reduce using rule 94 (exp1 -> MINUS term exp1 .)
    RPAREN          reduce using rule 94 (exp1 -> MINUS term exp1 .)
    COMMA           reduce using rule 94 (exp1 -> MINUS term exp1 .)


state 184

    (95) exp1 -> PLUS term exp1 .

    SEMICOLON       reduce using rule 95 (exp1 -> PLUS term exp1 .)
    RBRACKET        reduce using rule 95 (exp1 -> PLUS term exp1 .)
    LESSER          reduce using rule 95 (exp1 -> PLUS term exp1 .)
    GREATER         reduce using rule 95 (exp1 -> PLUS term exp1 .)
    EQUAL           reduce using rule 95 (exp1 -> PLUS term exp1 .)
    NOTEQUAL        reduce using rule 95 (exp1 -> PLUS term exp1 .)
    RPAREN          reduce using rule 95 (exp1 -> PLUS term exp1 .)
    COMMA           reduce using rule 95 (exp1 -> PLUS term exp1 .)


state 185

    (81) var_cte1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 207


state 186

    (47) funcs -> type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 208


state 187

    (49) funcs1 -> COMMA type . ID funcs1

    ID              shift and go to state 209


state 188

    (48) funcs -> VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 210


state 189

    (17) vars3 -> list COMMA ID vars3 .
    (15) vars3 -> COMMA ID vars3 .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 15 (vars3 -> COMMA ID vars3 .)
    SEMICOLON       reduce using rule 15 (vars3 -> COMMA ID vars3 .)

  ! SEMICOLON       [ reduce using rule 17 (vars3 -> list COMMA ID vars3 .) ]


state 190

    (87) expression -> exp expression1 ID .

    SEMICOLON       reduce using rule 87 (expression -> exp expression1 ID .)


state 191

    (38) assignment -> ID LBRACKET exp RBRACKET EQUAL . expression SEMICOLON
    (87) expression -> . exp expression1 ID
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    ID              shift and go to state 110
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    exp                            shift and go to state 120
    expression                     shift and go to state 211
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70
    call                           shift and go to state 111

state 192

    (106) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 106 (call1 -> ID COMMA call1 .)


state 193

    (107) call1 -> exp .

    RPAREN          reduce using rule 107 (call1 -> exp .)


state 194

    (105) call -> ID LPAREN call1 RPAREN SEMICOLON .

    WHILE           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ID              reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    IF              reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SQUARE          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    POLIGON         reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COLOR           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENBACK         reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ROTATE          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENON           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENOFF          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TIMES           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LPAREN          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    MINUS           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PLUS            reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSER          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATER         reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    EQUAL           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COMMA           reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    VAR             reduce using rule 105 (call -> ID LPAREN call1 RPAREN SEMICOLON .)


state 195

    (84) condition -> IF LPAREN EXPRESSION RPAREN BLOCK . condition1 SEMICOLON
    (85) condition1 -> . ELSE BLOCK
    (86) condition1 -> . empty
    (110) empty -> .

    ELSE            shift and go to state 213
    SEMICOLON       reduce using rule 110 (empty -> .)

    condition1                     shift and go to state 212
    empty                          shift and go to state 214

state 196

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 215


state 197

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 216


state 198

    (60) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 60 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 199

    (59) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 59 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 200

    (63) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 217


state 201

    (58) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    WHILE           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ID              reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TIMES           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    LPAREN          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    MINUS           reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PLUS            reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 58 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 202

    (66) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 203

    (67) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 204

    (68) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 205

    (64) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 206

    (65) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    WHILE           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ID              reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TIMES           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    MINUS           reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PLUS            reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 207

    (81) var_cte1 -> LBRACKET exp RBRACKET .

    MINUS           reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    LESSER          reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    GREATER         reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    EQUAL           reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    NOTEQUAL        reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 81 (var_cte1 -> LBRACKET exp RBRACKET .)


state 208

    (47) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (51) funcs2 -> . vars
    (52) funcs2 -> . vars statute
    (53) funcs2 -> . statute vars
    (54) funcs2 -> . statute
    (55) funcs2 -> . empty
    (12) vars -> . VAR vars2
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (110) empty -> .
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

    VAR             shift and go to state 10
    WHILE           shift and go to state 45
    RBRACE          reduce using rule 110 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    funcs2                         shift and go to state 218
    vars                           shift and go to state 219
    statute                        shift and go to state 220
    empty                          shift and go to state 221
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 209

    (49) funcs1 -> COMMA type ID . funcs1
    (49) funcs1 -> . COMMA type ID funcs1
    (50) funcs1 -> . empty
    (110) empty -> .

    COMMA           shift and go to state 151
    RPAREN          reduce using rule 110 (empty -> .)

    funcs1                         shift and go to state 222
    empty                          shift and go to state 152

state 210

    (48) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (51) funcs2 -> . vars
    (52) funcs2 -> . vars statute
    (53) funcs2 -> . statute vars
    (54) funcs2 -> . statute
    (55) funcs2 -> . empty
    (12) vars -> . VAR vars2
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (110) empty -> .
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

    VAR             shift and go to state 10
    WHILE           shift and go to state 45
    RBRACE          reduce using rule 110 (empty -> .)
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    funcs2                         shift and go to state 223
    vars                           shift and go to state 219
    statute                        shift and go to state 220
    empty                          shift and go to state 221
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 211

    (38) assignment -> ID LBRACKET exp RBRACKET EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 224


state 212

    (84) condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 . SEMICOLON

    SEMICOLON       shift and go to state 225


state 213

    (85) condition1 -> ELSE . BLOCK

    BLOCK           shift and go to state 226


state 214

    (86) condition1 -> empty .

    SEMICOLON       reduce using rule 86 (condition1 -> empty .)


state 215

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 216

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 217

    (63) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 218

    (47) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 230


state 219

    (51) funcs2 -> vars .
    (52) funcs2 -> vars . statute
    (20) statute -> . assignment
    (21) statute -> . call
    (22) statute -> . condition
    (23) statute -> . triangle
    (24) statute -> . rectangle
    (25) statute -> . square
    (26) statute -> . circle
    (27) statute -> . poligon
    (28) statute -> . color
    (29) statute -> . pensize
    (30) statute -> . penforward
    (31) statute -> . penback
    (32) statute -> . rotate
    (33) statute -> . WHILE
    (34) statute -> . return
    (35) statute -> . penon
    (36) statute -> . penoff
    (37) assignment -> . ID EQUAL expression SEMICOLON
    (38) assignment -> . ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON
    (105) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (84) condition -> . IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON
    (61) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (59) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (63) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (58) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (66) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (67) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (68) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (64) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (65) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (109) return -> . exp SEMICOLON
    (69) penon -> . PENON LPAREN RPAREN SEMICOLON
    (70) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (93) exp -> . term exp1
    (102) term -> . DIVIDE
    (103) term -> . TIMES
    (104) term -> . factor
    (97) factor -> . LPAREN EXPRESSION RPAREN
    (98) factor -> . var_cte
    (99) factor -> . factor1 var_cte
    (77) var_cte -> . ID var_cte1
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . call
    (100) factor1 -> . MINUS
    (101) factor1 -> . PLUS

    RBRACE          reduce using rule 51 (funcs2 -> vars .)
    WHILE           shift and go to state 45
    ID              shift and go to state 49
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    PENON           shift and go to state 63
    PENOFF          shift and go to state 64
    DIVIDE          shift and go to state 66
    TIMES           shift and go to state 67
    LPAREN          shift and go to state 51
    CTE_INT         shift and go to state 71
    CTE_FLOAT       shift and go to state 72
    MINUS           shift and go to state 73
    PLUS            shift and go to state 74

    statute                        shift and go to state 231
    assignment                     shift and go to state 32
    call                           shift and go to state 33
    condition                      shift and go to state 34
    triangle                       shift and go to state 35
    rectangle                      shift and go to state 36
    square                         shift and go to state 37
    circle                         shift and go to state 38
    poligon                        shift and go to state 39
    color                          shift and go to state 40
    pensize                        shift and go to state 41
    penforward                     shift and go to state 42
    penback                        shift and go to state 43
    rotate                         shift and go to state 44
    return                         shift and go to state 46
    penon                          shift and go to state 47
    penoff                         shift and go to state 48
    exp                            shift and go to state 50
    term                           shift and go to state 65
    factor                         shift and go to state 68
    var_cte                        shift and go to state 69
    factor1                        shift and go to state 70

state 220

    (53) funcs2 -> statute . vars
    (54) funcs2 -> statute .
    (12) vars -> . VAR vars2

    RBRACE          reduce using rule 54 (funcs2 -> statute .)
    VAR             shift and go to state 10

    vars                           shift and go to state 232

state 221

    (55) funcs2 -> empty .

    RBRACE          reduce using rule 55 (funcs2 -> empty .)


state 222

    (49) funcs1 -> COMMA type ID funcs1 .

    RPAREN          reduce using rule 49 (funcs1 -> COMMA type ID funcs1 .)


state 223

    (48) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 233


state 224

    (38) assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .

    WHILE           reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    ID              reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    IF              reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    TRIANGLE        reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    RECTANGLE       reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    SQUARE          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    CIRCLE          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    POLIGON         reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    COLOR           reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PENSIZE         reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PENFORWARD      reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PENBACK         reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    ROTATE          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PENON           reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PENOFF          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    DIVIDE          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    TIMES           reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    LPAREN          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    CTE_INT         reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    CTE_FLOAT       reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    MINUS           reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    PLUS            reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    RBRACE          reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)
    VAR             reduce using rule 38 (assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON .)


state 225

    (84) condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .

    WHILE           reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    ID              reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    IF              reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    TRIANGLE        reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    RECTANGLE       reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    SQUARE          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    CIRCLE          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    POLIGON         reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    COLOR           reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PENSIZE         reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PENFORWARD      reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PENBACK         reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    ROTATE          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PENON           reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PENOFF          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    DIVIDE          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    TIMES           reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    LPAREN          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    CTE_INT         reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    CTE_FLOAT       reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    MINUS           reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    PLUS            reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    RBRACE          reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)
    VAR             reduce using rule 84 (condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON .)


state 226

    (85) condition1 -> ELSE BLOCK .

    SEMICOLON       reduce using rule 85 (condition1 -> ELSE BLOCK .)


state 227

    (61) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 228

    (62) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 229

    (63) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TIMES           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    LPAREN          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_INT         reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CTE_FLOAT       reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    MINUS           reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PLUS            reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 230

    (47) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (56) funcs3 -> . funcs
    (57) funcs3 -> . empty
    (47) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (48) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (110) empty -> .
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    VOID            shift and go to state 9
    VAR             reduce using rule 110 (empty -> .)
    DAVINCI         reduce using rule 110 (empty -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    type                           shift and go to state 8
    funcs3                         shift and go to state 234
    funcs                          shift and go to state 235
    empty                          shift and go to state 236

state 231

    (52) funcs2 -> vars statute .

    RBRACE          reduce using rule 52 (funcs2 -> vars statute .)


state 232

    (53) funcs2 -> statute vars .

    RBRACE          reduce using rule 53 (funcs2 -> statute vars .)


state 233

    (48) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (56) funcs3 -> . funcs
    (57) funcs3 -> . empty
    (47) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (48) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (110) empty -> .
    (71) type -> . INT
    (72) type -> . FLOAT
    (73) type -> . BOOL
    (74) type -> . STRING

    VOID            shift and go to state 9
    VAR             reduce using rule 110 (empty -> .)
    DAVINCI         reduce using rule 110 (empty -> .)
    INT             shift and go to state 11
    FLOAT           shift and go to state 12
    BOOL            shift and go to state 13
    STRING          shift and go to state 14

    type                           shift and go to state 8
    funcs3                         shift and go to state 237
    funcs                          shift and go to state 235
    empty                          shift and go to state 236

state 234

    (47) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 47 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 47 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 235

    (56) funcs3 -> funcs .

    VAR             reduce using rule 56 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 56 (funcs3 -> funcs .)


state 236

    (57) funcs3 -> empty .

    VAR             reduce using rule 57 (funcs3 -> empty .)
    DAVINCI         reduce using rule 57 (funcs3 -> empty .)


state 237

    (48) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 48 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 48 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 114 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 114 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 114 resolved as shift
WARNING: shift/reduce conflict for STRING in state 114 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 124 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (b2 -> statute)
WARNING: rejected rule (empty -> <empty>) in state 30
WARNING: reduce/reduce conflict in state 33 resolved using rule (statute -> call)
WARNING: rejected rule (var_cte -> call) in state 33
WARNING: reduce/reduce conflict in state 189 resolved using rule (vars3 -> COMMA ID vars3)
WARNING: rejected rule (vars3 -> list COMMA ID vars3) in state 189
WARNING: Rule (vars3 -> list COMMA ID vars3) is never reduced
