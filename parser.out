Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block
Rule 2     fillmain -> <empty>
Rule 3     gotomain -> <empty>
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     save_funcs -> <empty>
Rule 8     global_vars -> <empty>
Rule 9     block -> LBRACE b1 RBRACE
Rule 10    b1 -> vars local_vars b2
Rule 11    b1 -> b2
Rule 12    local_vars -> <empty>
Rule 13    b2 -> b2 statute
Rule 14    b2 -> empty
Rule 15    vars -> VAR vars2
Rule 16    vars2 -> type vars3 SEMICOLON vars2
Rule 17    vars2 -> empty
Rule 18    vars3 -> ID ASSIGN expression vars4
Rule 19    vars3 -> ID list vars4
Rule 20    vars3 -> ID vars4
Rule 21    vars4 -> COMMA vars3
Rule 22    vars4 -> empty
Rule 23    save_type -> <empty>
Rule 24    list -> LIST
Rule 25    statute -> assignment
Rule 26    statute -> call
Rule 27    statute -> condition
Rule 28    statute -> triangle
Rule 29    statute -> rectangle
Rule 30    statute -> square
Rule 31    statute -> circle
Rule 32    statute -> poligon
Rule 33    statute -> color
Rule 34    statute -> pensize
Rule 35    statute -> penforward
Rule 36    statute -> penback
Rule 37    statute -> rotate
Rule 38    statute -> while
Rule 39    statute -> return
Rule 40    statute -> penon
Rule 41    statute -> penoff
Rule 42    while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
Rule 43    while_return -> <empty>
Rule 44    end_while -> <empty>
Rule 45    assignment -> ID ASSIGN expression SEMICOLON
Rule 46    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 47    cte_id -> <empty>
Rule 48    color_cte -> RED
Rule 49    color_cte -> BLUE
Rule 50    color_cte -> YELLOW
Rule 51    color_cte -> GREEN
Rule 52    color_cte -> PINK
Rule 53    color_cte -> PURPLE
Rule 54    st_cte -> STRING
Rule 55    st_cte -> cte_bool
Rule 56    funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 57    funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 58    funcs1 -> funcs1 COMMA type ID
Rule 59    funcs1 -> empty
Rule 60    funcs2 -> funcs2 vars
Rule 61    funcs2 -> funcs2 statute
Rule 62    funcs2 -> empty
Rule 63    funcs3 -> funcs
Rule 64    funcs3 -> empty
Rule 65    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 66    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 67    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 68    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 69    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 70    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 71    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 72    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 73    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 74    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 75    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 76    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 77    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 78    type -> INT
Rule 79    type -> FLOAT
Rule 80    type -> STRING
Rule 81    type -> BOOL
Rule 82    var_cte -> ID getidvalue
Rule 83    var_cte -> CTE_INT getvalue_i
Rule 84    var_cte -> CTE_FLOAT getvalue_f
Rule 85    var_cte -> cte_bool getvalue_b
Rule 86    var_cte -> ID list getarrayvalue
Rule 87    var_cte -> call getcallvalue
Rule 88    getidvalue -> <empty>
Rule 89    getvalue_i -> <empty>
Rule 90    getvalue_f -> <empty>
Rule 91    getvalue_b -> <empty>
Rule 92    getarrayvalue -> <empty>
Rule 93    getcallvalue -> <empty>
Rule 94    cte_bool -> TRUE
Rule 95    cte_bool -> FALSE
Rule 96    condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 97    condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 98    condition1 -> empty
Rule 99    type_check -> <empty>
Rule 100   gotoElse -> <empty>
Rule 101   end_if -> <empty>
Rule 102   expression -> exp expression1
Rule 103   expression1 -> LESSER relop exp top_relop
Rule 104   expression1 -> GREATER relop exp top_relop
Rule 105   expression1 -> EQUAL relop exp top_relop
Rule 106   expression1 -> NOTEQUAL relop exp top_relop
Rule 107   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 108   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 109   expression1 -> empty
Rule 110   relop -> <empty>
Rule 111   top_relop -> <empty>
Rule 112   exp -> term top_exp exp1
Rule 113   exp1 -> MINUS push_sign exp
Rule 114   exp1 -> PLUS push_sign exp
Rule 115   exp1 -> empty
Rule 116   top_exp -> <empty>
Rule 117   push_sign -> <empty>
Rule 118   top_factor -> <empty>
Rule 119   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 120   factor -> var_cte
Rule 121   factor -> ID push_id
Rule 122   false_bottom -> <empty>
Rule 123   end_par -> <empty>
Rule 124   push_id -> <empty>
Rule 125   term -> factor top_factor term1
Rule 126   term1 -> DIVIDE push_sign term
Rule 127   term1 -> TIMES push_sign term
Rule 128   term1 -> empty
Rule 129   call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
Rule 130   check_name -> <empty>
Rule 131   create_era -> <empty>
Rule 132   gosub -> <empty>
Rule 133   call1 -> ID COMMA call1
Rule 134   call1 -> exp
Rule 135   call1 -> st_cte
Rule 136   return -> RETURN var_cte SEMICOLON
Rule 137   return -> RETURN st_cte SEMICOLON
Rule 138   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 18 45 46
BLUE                 : 49
BOOL                 : 81
CIRCLE               : 66
COLOR                : 65
COMMA                : 21 58 68 69 70 133
CTE_BOOL             : 
CTE_FLOAT            : 84
CTE_INT              : 83
CTE_STRING           : 72
DAVINCI              : 1
DIVIDE               : 126
ELSE                 : 97
EQUAL                : 105
EXPRESSION           : 
FALSE                : 95
FLOAT                : 79
FUNC                 : 56 57
GREATER              : 104
GREATEROREQUAL       : 107
GREEN                : 51
ID                   : 1 18 19 20 45 46 56 56 57 57 58 82 86 121 129 133
IF                   : 96
INT                  : 78
LBRACE               : 9 42 56 57 96 97
LBRACKET             : 46
LESSER               : 103
LESSEROREQUAL        : 108
LIST                 : 24
LPAREN               : 42 56 57 65 66 67 68 69 70 71 72 73 74 75 76 77 96 119 129
MINUS                : 113
NOT                  : 
NOTEQUAL             : 106
OR                   : 
PENBACK              : 75
PENFORWARD           : 74
PENOFF               : 77
PENON                : 76
PENSIZE              : 73
PINK                 : 52
PLUS                 : 114
POLIGON              : 70
PROGRAM              : 1
PURPLE               : 53
RBRACE               : 9 42 56 57 96 97
RBRACKET             : 46
RECTANGLE            : 69
RED                  : 48
RETURN               : 136 137
ROTATE               : 71 72
RPAREN               : 42 56 57 65 66 67 68 69 70 71 72 73 74 75 76 77 96 119 129
SEMICOLON            : 1 16 45 46 65 66 67 68 69 70 71 72 73 74 75 76 77 129 136 137
SIZE                 : 
SQUARE               : 67
STRING               : 54 80
ST_CTE               : 
TERM                 : 
TIMES                : 127
TRIANGLE             : 68
TRUE                 : 94
VAR                  : 15
VOID                 : 57
WHILE                : 42
YELLOW               : 50
error                : 

Nonterminals, with rules where they appear

assignment           : 25
b1                   : 9
b2                   : 10 11 13 42 96 97
block                : 1
call                 : 26 87
call1                : 129 133
check_name           : 129
circle               : 31
color                : 33
color_cte            : 65
condition            : 27
condition1           : 96
create_era           : 129
cte_bool             : 55 85
cte_id               : 46
empty                : 6 14 17 22 59 62 64 98 109 115 128
end_if               : 96
end_par              : 119
end_while            : 42
exp                  : 46 66 67 68 68 69 69 70 70 71 73 74 75 102 103 104 105 106 107 108 113 114 134
exp1                 : 112
expression           : 18 42 45 46 96 119
expression1          : 102
factor               : 125
false_bottom         : 119
fillmain             : 1
funcs                : 4 63
funcs1               : 56 57 58
funcs2               : 56 57 60 61
funcs3               : 56 57
getarrayvalue        : 86
getcallvalue         : 87
getidvalue           : 82
getvalue_b           : 85
getvalue_f           : 84
getvalue_i           : 83
global_vars          : 5
gosub                : 129
gotoElse             : 97
gotomain             : 1
list                 : 19 86
local_vars           : 10
penback              : 36
penforward           : 35
penoff               : 41
penon                : 40
pensize              : 34
poligon              : 32
program              : 0
program1             : 1 4 5
push_id              : 121
push_sign            : 113 114 126 127
rectangle            : 29
relop                : 103 104 105 106 107 108
return               : 39
rotate               : 37
save_funcs           : 4
save_type            : 
square               : 30
st_cte               : 135 137
statute              : 13 61
term                 : 112 126 127
term1                : 125
top_exp              : 112
top_factor           : 125
top_relop            : 103 104 105 106 107 108
triangle             : 28
type                 : 16 56 56 57 58
type_check           : 42 96
var_cte              : 120 136
vars                 : 5 10 60
vars2                : 15 16
vars3                : 16 21
vars4                : 18 19 20
while                : 38
while_return         : 42

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 DAVINCI fillmain block
    (3) gotomain -> .

    DAVINCI         reduce using rule 3 (gotomain -> .)
    FUNC            reduce using rule 3 (gotomain -> .)
    VAR             reduce using rule 3 (gotomain -> .)

    gotomain                       shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (138) empty -> .

    DAVINCI         reduce using rule 138 (empty -> .)
    FUNC            reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)

    program1                       shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (56) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (57) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (15) vars -> . VAR vars2

    DAVINCI         shift and go to state 8
    FUNC            shift and go to state 11
    VAR             shift and go to state 12

    funcs                          shift and go to state 9
    vars                           shift and go to state 10

state 7

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)
    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI . fillmain block
    (2) fillmain -> .

    LBRACE          reduce using rule 2 (fillmain -> .)

    fillmain                       shift and go to state 13

state 9

    (4) program1 -> program1 funcs . save_funcs
    (7) save_funcs -> .

    DAVINCI         reduce using rule 7 (save_funcs -> .)
    FUNC            reduce using rule 7 (save_funcs -> .)
    VAR             reduce using rule 7 (save_funcs -> .)

    save_funcs                     shift and go to state 14

state 10

    (5) program1 -> program1 vars . global_vars
    (8) global_vars -> .

    DAVINCI         reduce using rule 8 (global_vars -> .)
    FUNC            reduce using rule 8 (global_vars -> .)
    VAR             reduce using rule 8 (global_vars -> .)

    global_vars                    shift and go to state 15

state 11

    (56) funcs -> FUNC . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (57) funcs -> FUNC . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 16

state 12

    (15) vars -> VAR . vars2
    (16) vars2 -> . type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (138) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 138 (empty -> .)
    FUNC            reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)
    RBRACE          reduce using rule 138 (empty -> .)

    vars2                          shift and go to state 22
    type                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain . block
    (9) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 26

    block                          shift and go to state 25

state 14

    (4) program1 -> program1 funcs save_funcs .

    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 15

    (5) program1 -> program1 vars global_vars .

    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)
    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)


state 16

    (56) funcs -> FUNC type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 27


state 17

    (57) funcs -> FUNC VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 28


state 18

    (78) type -> INT .

    ID              reduce using rule 78 (type -> INT .)


state 19

    (79) type -> FLOAT .

    ID              reduce using rule 79 (type -> FLOAT .)


state 20

    (80) type -> STRING .

    ID              reduce using rule 80 (type -> STRING .)


state 21

    (81) type -> BOOL .

    ID              reduce using rule 81 (type -> BOOL .)


state 22

    (15) vars -> VAR vars2 .

    DAVINCI         reduce using rule 15 (vars -> VAR vars2 .)
    FUNC            reduce using rule 15 (vars -> VAR vars2 .)
    VAR             reduce using rule 15 (vars -> VAR vars2 .)
    ID              reduce using rule 15 (vars -> VAR vars2 .)
    IF              reduce using rule 15 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 15 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 15 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 15 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 15 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 15 (vars -> VAR vars2 .)
    COLOR           reduce using rule 15 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 15 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 15 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 15 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 15 (vars -> VAR vars2 .)
    WHILE           reduce using rule 15 (vars -> VAR vars2 .)
    RETURN          reduce using rule 15 (vars -> VAR vars2 .)
    PENON           reduce using rule 15 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 15 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 15 (vars -> VAR vars2 .)


state 23

    (16) vars2 -> type . vars3 SEMICOLON vars2
    (18) vars3 -> . ID ASSIGN expression vars4
    (19) vars3 -> . ID list vars4
    (20) vars3 -> . ID vars4

    ID              shift and go to state 30

    vars3                          shift and go to state 29

state 24

    (17) vars2 -> empty .

    DAVINCI         reduce using rule 17 (vars2 -> empty .)
    FUNC            reduce using rule 17 (vars2 -> empty .)
    VAR             reduce using rule 17 (vars2 -> empty .)
    ID              reduce using rule 17 (vars2 -> empty .)
    IF              reduce using rule 17 (vars2 -> empty .)
    TRIANGLE        reduce using rule 17 (vars2 -> empty .)
    RECTANGLE       reduce using rule 17 (vars2 -> empty .)
    SQUARE          reduce using rule 17 (vars2 -> empty .)
    CIRCLE          reduce using rule 17 (vars2 -> empty .)
    POLIGON         reduce using rule 17 (vars2 -> empty .)
    COLOR           reduce using rule 17 (vars2 -> empty .)
    PENSIZE         reduce using rule 17 (vars2 -> empty .)
    PENFORWARD      reduce using rule 17 (vars2 -> empty .)
    PENBACK         reduce using rule 17 (vars2 -> empty .)
    ROTATE          reduce using rule 17 (vars2 -> empty .)
    WHILE           reduce using rule 17 (vars2 -> empty .)
    RETURN          reduce using rule 17 (vars2 -> empty .)
    PENON           reduce using rule 17 (vars2 -> empty .)
    PENOFF          reduce using rule 17 (vars2 -> empty .)
    RBRACE          reduce using rule 17 (vars2 -> empty .)


state 25

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .)


state 26

    (9) block -> LBRACE . b1 RBRACE
    (10) b1 -> . vars local_vars b2
    (11) b1 -> . b2
    (15) vars -> . VAR vars2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (138) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)
    RBRACE          reduce using rule 138 (empty -> .)

    b1                             shift and go to state 31
    vars                           shift and go to state 32
    b2                             shift and go to state 33
    empty                          shift and go to state 34

state 27

    (56) funcs -> FUNC type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 35


state 28

    (57) funcs -> FUNC VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 36


state 29

    (16) vars2 -> type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 37


state 30

    (18) vars3 -> ID . ASSIGN expression vars4
    (19) vars3 -> ID . list vars4
    (20) vars3 -> ID . vars4
    (24) list -> . LIST
    (21) vars4 -> . COMMA vars3
    (22) vars4 -> . empty
    (138) empty -> .

    ASSIGN          shift and go to state 38
    LIST            shift and go to state 41
    COMMA           shift and go to state 42
    SEMICOLON       reduce using rule 138 (empty -> .)

    vars4                          shift and go to state 39
    list                           shift and go to state 40
    empty                          shift and go to state 43

state 31

    (9) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 44


state 32

    (10) b1 -> vars . local_vars b2
    (12) local_vars -> .

    ID              reduce using rule 12 (local_vars -> .)
    IF              reduce using rule 12 (local_vars -> .)
    TRIANGLE        reduce using rule 12 (local_vars -> .)
    RECTANGLE       reduce using rule 12 (local_vars -> .)
    SQUARE          reduce using rule 12 (local_vars -> .)
    CIRCLE          reduce using rule 12 (local_vars -> .)
    POLIGON         reduce using rule 12 (local_vars -> .)
    COLOR           reduce using rule 12 (local_vars -> .)
    PENSIZE         reduce using rule 12 (local_vars -> .)
    PENFORWARD      reduce using rule 12 (local_vars -> .)
    PENBACK         reduce using rule 12 (local_vars -> .)
    ROTATE          reduce using rule 12 (local_vars -> .)
    WHILE           reduce using rule 12 (local_vars -> .)
    RETURN          reduce using rule 12 (local_vars -> .)
    PENON           reduce using rule 12 (local_vars -> .)
    PENOFF          reduce using rule 12 (local_vars -> .)
    RBRACE          reduce using rule 12 (local_vars -> .)

    local_vars                     shift and go to state 45

state 33

    (11) b1 -> b2 .
    (13) b2 -> b2 . statute
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 11 (b1 -> b2 .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    statute                        shift and go to state 46
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 34

    (14) b2 -> empty .

    ID              reduce using rule 14 (b2 -> empty .)
    IF              reduce using rule 14 (b2 -> empty .)
    TRIANGLE        reduce using rule 14 (b2 -> empty .)
    RECTANGLE       reduce using rule 14 (b2 -> empty .)
    SQUARE          reduce using rule 14 (b2 -> empty .)
    CIRCLE          reduce using rule 14 (b2 -> empty .)
    POLIGON         reduce using rule 14 (b2 -> empty .)
    COLOR           reduce using rule 14 (b2 -> empty .)
    PENSIZE         reduce using rule 14 (b2 -> empty .)
    PENFORWARD      reduce using rule 14 (b2 -> empty .)
    PENBACK         reduce using rule 14 (b2 -> empty .)
    ROTATE          reduce using rule 14 (b2 -> empty .)
    WHILE           reduce using rule 14 (b2 -> empty .)
    RETURN          reduce using rule 14 (b2 -> empty .)
    PENON           reduce using rule 14 (b2 -> empty .)
    PENOFF          reduce using rule 14 (b2 -> empty .)
    RBRACE          reduce using rule 14 (b2 -> empty .)


state 35

    (56) funcs -> FUNC type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 80

state 36

    (57) funcs -> FUNC VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 81

state 37

    (16) vars2 -> type vars3 SEMICOLON . vars2
    (16) vars2 -> . type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL
    (138) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    DAVINCI         reduce using rule 138 (empty -> .)
    FUNC            reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)
    RBRACE          reduce using rule 138 (empty -> .)

    type                           shift and go to state 23
    vars2                          shift and go to state 82
    empty                          shift and go to state 24

state 38

    (18) vars3 -> ID ASSIGN . expression vars4
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    expression                     shift and go to state 84
    exp                            shift and go to state 85
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 39

    (20) vars3 -> ID vars4 .

    SEMICOLON       reduce using rule 20 (vars3 -> ID vars4 .)


state 40

    (19) vars3 -> ID list . vars4
    (21) vars4 -> . COMMA vars3
    (22) vars4 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 42
    SEMICOLON       reduce using rule 138 (empty -> .)

    vars4                          shift and go to state 96
    empty                          shift and go to state 43

state 41

    (24) list -> LIST .

    COMMA           reduce using rule 24 (list -> LIST .)
    SEMICOLON       reduce using rule 24 (list -> LIST .)
    DIVIDE          reduce using rule 24 (list -> LIST .)
    TIMES           reduce using rule 24 (list -> LIST .)
    MINUS           reduce using rule 24 (list -> LIST .)
    PLUS            reduce using rule 24 (list -> LIST .)
    LESSER          reduce using rule 24 (list -> LIST .)
    GREATER         reduce using rule 24 (list -> LIST .)
    EQUAL           reduce using rule 24 (list -> LIST .)
    NOTEQUAL        reduce using rule 24 (list -> LIST .)
    GREATEROREQUAL  reduce using rule 24 (list -> LIST .)
    LESSEROREQUAL   reduce using rule 24 (list -> LIST .)
    RPAREN          reduce using rule 24 (list -> LIST .)
    RBRACKET        reduce using rule 24 (list -> LIST .)


state 42

    (21) vars4 -> COMMA . vars3
    (18) vars3 -> . ID ASSIGN expression vars4
    (19) vars3 -> . ID list vars4
    (20) vars3 -> . ID vars4

    ID              shift and go to state 30

    vars3                          shift and go to state 97

state 43

    (22) vars4 -> empty .

    SEMICOLON       reduce using rule 22 (vars4 -> empty .)


state 44

    (9) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 9 (block -> LBRACE b1 RBRACE .)


state 45

    (10) b1 -> vars local_vars . b2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (138) empty -> .

    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)
    RBRACE          reduce using rule 138 (empty -> .)

    b2                             shift and go to state 98
    empty                          shift and go to state 34

state 46

    (13) b2 -> b2 statute .

    ID              reduce using rule 13 (b2 -> b2 statute .)
    IF              reduce using rule 13 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 13 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 13 (b2 -> b2 statute .)
    SQUARE          reduce using rule 13 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 13 (b2 -> b2 statute .)
    POLIGON         reduce using rule 13 (b2 -> b2 statute .)
    COLOR           reduce using rule 13 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 13 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 13 (b2 -> b2 statute .)
    PENBACK         reduce using rule 13 (b2 -> b2 statute .)
    ROTATE          reduce using rule 13 (b2 -> b2 statute .)
    WHILE           reduce using rule 13 (b2 -> b2 statute .)
    RETURN          reduce using rule 13 (b2 -> b2 statute .)
    PENON           reduce using rule 13 (b2 -> b2 statute .)
    PENOFF          reduce using rule 13 (b2 -> b2 statute .)
    RBRACE          reduce using rule 13 (b2 -> b2 statute .)


state 47

    (25) statute -> assignment .

    ID              reduce using rule 25 (statute -> assignment .)
    IF              reduce using rule 25 (statute -> assignment .)
    TRIANGLE        reduce using rule 25 (statute -> assignment .)
    RECTANGLE       reduce using rule 25 (statute -> assignment .)
    SQUARE          reduce using rule 25 (statute -> assignment .)
    CIRCLE          reduce using rule 25 (statute -> assignment .)
    POLIGON         reduce using rule 25 (statute -> assignment .)
    COLOR           reduce using rule 25 (statute -> assignment .)
    PENSIZE         reduce using rule 25 (statute -> assignment .)
    PENFORWARD      reduce using rule 25 (statute -> assignment .)
    PENBACK         reduce using rule 25 (statute -> assignment .)
    ROTATE          reduce using rule 25 (statute -> assignment .)
    WHILE           reduce using rule 25 (statute -> assignment .)
    RETURN          reduce using rule 25 (statute -> assignment .)
    PENON           reduce using rule 25 (statute -> assignment .)
    PENOFF          reduce using rule 25 (statute -> assignment .)
    RBRACE          reduce using rule 25 (statute -> assignment .)
    VAR             reduce using rule 25 (statute -> assignment .)


state 48

    (26) statute -> call .

    ID              reduce using rule 26 (statute -> call .)
    IF              reduce using rule 26 (statute -> call .)
    TRIANGLE        reduce using rule 26 (statute -> call .)
    RECTANGLE       reduce using rule 26 (statute -> call .)
    SQUARE          reduce using rule 26 (statute -> call .)
    CIRCLE          reduce using rule 26 (statute -> call .)
    POLIGON         reduce using rule 26 (statute -> call .)
    COLOR           reduce using rule 26 (statute -> call .)
    PENSIZE         reduce using rule 26 (statute -> call .)
    PENFORWARD      reduce using rule 26 (statute -> call .)
    PENBACK         reduce using rule 26 (statute -> call .)
    ROTATE          reduce using rule 26 (statute -> call .)
    WHILE           reduce using rule 26 (statute -> call .)
    RETURN          reduce using rule 26 (statute -> call .)
    PENON           reduce using rule 26 (statute -> call .)
    PENOFF          reduce using rule 26 (statute -> call .)
    RBRACE          reduce using rule 26 (statute -> call .)
    VAR             reduce using rule 26 (statute -> call .)


state 49

    (27) statute -> condition .

    ID              reduce using rule 27 (statute -> condition .)
    IF              reduce using rule 27 (statute -> condition .)
    TRIANGLE        reduce using rule 27 (statute -> condition .)
    RECTANGLE       reduce using rule 27 (statute -> condition .)
    SQUARE          reduce using rule 27 (statute -> condition .)
    CIRCLE          reduce using rule 27 (statute -> condition .)
    POLIGON         reduce using rule 27 (statute -> condition .)
    COLOR           reduce using rule 27 (statute -> condition .)
    PENSIZE         reduce using rule 27 (statute -> condition .)
    PENFORWARD      reduce using rule 27 (statute -> condition .)
    PENBACK         reduce using rule 27 (statute -> condition .)
    ROTATE          reduce using rule 27 (statute -> condition .)
    WHILE           reduce using rule 27 (statute -> condition .)
    RETURN          reduce using rule 27 (statute -> condition .)
    PENON           reduce using rule 27 (statute -> condition .)
    PENOFF          reduce using rule 27 (statute -> condition .)
    RBRACE          reduce using rule 27 (statute -> condition .)
    VAR             reduce using rule 27 (statute -> condition .)


state 50

    (28) statute -> triangle .

    ID              reduce using rule 28 (statute -> triangle .)
    IF              reduce using rule 28 (statute -> triangle .)
    TRIANGLE        reduce using rule 28 (statute -> triangle .)
    RECTANGLE       reduce using rule 28 (statute -> triangle .)
    SQUARE          reduce using rule 28 (statute -> triangle .)
    CIRCLE          reduce using rule 28 (statute -> triangle .)
    POLIGON         reduce using rule 28 (statute -> triangle .)
    COLOR           reduce using rule 28 (statute -> triangle .)
    PENSIZE         reduce using rule 28 (statute -> triangle .)
    PENFORWARD      reduce using rule 28 (statute -> triangle .)
    PENBACK         reduce using rule 28 (statute -> triangle .)
    ROTATE          reduce using rule 28 (statute -> triangle .)
    WHILE           reduce using rule 28 (statute -> triangle .)
    RETURN          reduce using rule 28 (statute -> triangle .)
    PENON           reduce using rule 28 (statute -> triangle .)
    PENOFF          reduce using rule 28 (statute -> triangle .)
    RBRACE          reduce using rule 28 (statute -> triangle .)
    VAR             reduce using rule 28 (statute -> triangle .)


state 51

    (29) statute -> rectangle .

    ID              reduce using rule 29 (statute -> rectangle .)
    IF              reduce using rule 29 (statute -> rectangle .)
    TRIANGLE        reduce using rule 29 (statute -> rectangle .)
    RECTANGLE       reduce using rule 29 (statute -> rectangle .)
    SQUARE          reduce using rule 29 (statute -> rectangle .)
    CIRCLE          reduce using rule 29 (statute -> rectangle .)
    POLIGON         reduce using rule 29 (statute -> rectangle .)
    COLOR           reduce using rule 29 (statute -> rectangle .)
    PENSIZE         reduce using rule 29 (statute -> rectangle .)
    PENFORWARD      reduce using rule 29 (statute -> rectangle .)
    PENBACK         reduce using rule 29 (statute -> rectangle .)
    ROTATE          reduce using rule 29 (statute -> rectangle .)
    WHILE           reduce using rule 29 (statute -> rectangle .)
    RETURN          reduce using rule 29 (statute -> rectangle .)
    PENON           reduce using rule 29 (statute -> rectangle .)
    PENOFF          reduce using rule 29 (statute -> rectangle .)
    RBRACE          reduce using rule 29 (statute -> rectangle .)
    VAR             reduce using rule 29 (statute -> rectangle .)


state 52

    (30) statute -> square .

    ID              reduce using rule 30 (statute -> square .)
    IF              reduce using rule 30 (statute -> square .)
    TRIANGLE        reduce using rule 30 (statute -> square .)
    RECTANGLE       reduce using rule 30 (statute -> square .)
    SQUARE          reduce using rule 30 (statute -> square .)
    CIRCLE          reduce using rule 30 (statute -> square .)
    POLIGON         reduce using rule 30 (statute -> square .)
    COLOR           reduce using rule 30 (statute -> square .)
    PENSIZE         reduce using rule 30 (statute -> square .)
    PENFORWARD      reduce using rule 30 (statute -> square .)
    PENBACK         reduce using rule 30 (statute -> square .)
    ROTATE          reduce using rule 30 (statute -> square .)
    WHILE           reduce using rule 30 (statute -> square .)
    RETURN          reduce using rule 30 (statute -> square .)
    PENON           reduce using rule 30 (statute -> square .)
    PENOFF          reduce using rule 30 (statute -> square .)
    RBRACE          reduce using rule 30 (statute -> square .)
    VAR             reduce using rule 30 (statute -> square .)


state 53

    (31) statute -> circle .

    ID              reduce using rule 31 (statute -> circle .)
    IF              reduce using rule 31 (statute -> circle .)
    TRIANGLE        reduce using rule 31 (statute -> circle .)
    RECTANGLE       reduce using rule 31 (statute -> circle .)
    SQUARE          reduce using rule 31 (statute -> circle .)
    CIRCLE          reduce using rule 31 (statute -> circle .)
    POLIGON         reduce using rule 31 (statute -> circle .)
    COLOR           reduce using rule 31 (statute -> circle .)
    PENSIZE         reduce using rule 31 (statute -> circle .)
    PENFORWARD      reduce using rule 31 (statute -> circle .)
    PENBACK         reduce using rule 31 (statute -> circle .)
    ROTATE          reduce using rule 31 (statute -> circle .)
    WHILE           reduce using rule 31 (statute -> circle .)
    RETURN          reduce using rule 31 (statute -> circle .)
    PENON           reduce using rule 31 (statute -> circle .)
    PENOFF          reduce using rule 31 (statute -> circle .)
    RBRACE          reduce using rule 31 (statute -> circle .)
    VAR             reduce using rule 31 (statute -> circle .)


state 54

    (32) statute -> poligon .

    ID              reduce using rule 32 (statute -> poligon .)
    IF              reduce using rule 32 (statute -> poligon .)
    TRIANGLE        reduce using rule 32 (statute -> poligon .)
    RECTANGLE       reduce using rule 32 (statute -> poligon .)
    SQUARE          reduce using rule 32 (statute -> poligon .)
    CIRCLE          reduce using rule 32 (statute -> poligon .)
    POLIGON         reduce using rule 32 (statute -> poligon .)
    COLOR           reduce using rule 32 (statute -> poligon .)
    PENSIZE         reduce using rule 32 (statute -> poligon .)
    PENFORWARD      reduce using rule 32 (statute -> poligon .)
    PENBACK         reduce using rule 32 (statute -> poligon .)
    ROTATE          reduce using rule 32 (statute -> poligon .)
    WHILE           reduce using rule 32 (statute -> poligon .)
    RETURN          reduce using rule 32 (statute -> poligon .)
    PENON           reduce using rule 32 (statute -> poligon .)
    PENOFF          reduce using rule 32 (statute -> poligon .)
    RBRACE          reduce using rule 32 (statute -> poligon .)
    VAR             reduce using rule 32 (statute -> poligon .)


state 55

    (33) statute -> color .

    ID              reduce using rule 33 (statute -> color .)
    IF              reduce using rule 33 (statute -> color .)
    TRIANGLE        reduce using rule 33 (statute -> color .)
    RECTANGLE       reduce using rule 33 (statute -> color .)
    SQUARE          reduce using rule 33 (statute -> color .)
    CIRCLE          reduce using rule 33 (statute -> color .)
    POLIGON         reduce using rule 33 (statute -> color .)
    COLOR           reduce using rule 33 (statute -> color .)
    PENSIZE         reduce using rule 33 (statute -> color .)
    PENFORWARD      reduce using rule 33 (statute -> color .)
    PENBACK         reduce using rule 33 (statute -> color .)
    ROTATE          reduce using rule 33 (statute -> color .)
    WHILE           reduce using rule 33 (statute -> color .)
    RETURN          reduce using rule 33 (statute -> color .)
    PENON           reduce using rule 33 (statute -> color .)
    PENOFF          reduce using rule 33 (statute -> color .)
    RBRACE          reduce using rule 33 (statute -> color .)
    VAR             reduce using rule 33 (statute -> color .)


state 56

    (34) statute -> pensize .

    ID              reduce using rule 34 (statute -> pensize .)
    IF              reduce using rule 34 (statute -> pensize .)
    TRIANGLE        reduce using rule 34 (statute -> pensize .)
    RECTANGLE       reduce using rule 34 (statute -> pensize .)
    SQUARE          reduce using rule 34 (statute -> pensize .)
    CIRCLE          reduce using rule 34 (statute -> pensize .)
    POLIGON         reduce using rule 34 (statute -> pensize .)
    COLOR           reduce using rule 34 (statute -> pensize .)
    PENSIZE         reduce using rule 34 (statute -> pensize .)
    PENFORWARD      reduce using rule 34 (statute -> pensize .)
    PENBACK         reduce using rule 34 (statute -> pensize .)
    ROTATE          reduce using rule 34 (statute -> pensize .)
    WHILE           reduce using rule 34 (statute -> pensize .)
    RETURN          reduce using rule 34 (statute -> pensize .)
    PENON           reduce using rule 34 (statute -> pensize .)
    PENOFF          reduce using rule 34 (statute -> pensize .)
    RBRACE          reduce using rule 34 (statute -> pensize .)
    VAR             reduce using rule 34 (statute -> pensize .)


state 57

    (35) statute -> penforward .

    ID              reduce using rule 35 (statute -> penforward .)
    IF              reduce using rule 35 (statute -> penforward .)
    TRIANGLE        reduce using rule 35 (statute -> penforward .)
    RECTANGLE       reduce using rule 35 (statute -> penforward .)
    SQUARE          reduce using rule 35 (statute -> penforward .)
    CIRCLE          reduce using rule 35 (statute -> penforward .)
    POLIGON         reduce using rule 35 (statute -> penforward .)
    COLOR           reduce using rule 35 (statute -> penforward .)
    PENSIZE         reduce using rule 35 (statute -> penforward .)
    PENFORWARD      reduce using rule 35 (statute -> penforward .)
    PENBACK         reduce using rule 35 (statute -> penforward .)
    ROTATE          reduce using rule 35 (statute -> penforward .)
    WHILE           reduce using rule 35 (statute -> penforward .)
    RETURN          reduce using rule 35 (statute -> penforward .)
    PENON           reduce using rule 35 (statute -> penforward .)
    PENOFF          reduce using rule 35 (statute -> penforward .)
    RBRACE          reduce using rule 35 (statute -> penforward .)
    VAR             reduce using rule 35 (statute -> penforward .)


state 58

    (36) statute -> penback .

    ID              reduce using rule 36 (statute -> penback .)
    IF              reduce using rule 36 (statute -> penback .)
    TRIANGLE        reduce using rule 36 (statute -> penback .)
    RECTANGLE       reduce using rule 36 (statute -> penback .)
    SQUARE          reduce using rule 36 (statute -> penback .)
    CIRCLE          reduce using rule 36 (statute -> penback .)
    POLIGON         reduce using rule 36 (statute -> penback .)
    COLOR           reduce using rule 36 (statute -> penback .)
    PENSIZE         reduce using rule 36 (statute -> penback .)
    PENFORWARD      reduce using rule 36 (statute -> penback .)
    PENBACK         reduce using rule 36 (statute -> penback .)
    ROTATE          reduce using rule 36 (statute -> penback .)
    WHILE           reduce using rule 36 (statute -> penback .)
    RETURN          reduce using rule 36 (statute -> penback .)
    PENON           reduce using rule 36 (statute -> penback .)
    PENOFF          reduce using rule 36 (statute -> penback .)
    RBRACE          reduce using rule 36 (statute -> penback .)
    VAR             reduce using rule 36 (statute -> penback .)


state 59

    (37) statute -> rotate .

    ID              reduce using rule 37 (statute -> rotate .)
    IF              reduce using rule 37 (statute -> rotate .)
    TRIANGLE        reduce using rule 37 (statute -> rotate .)
    RECTANGLE       reduce using rule 37 (statute -> rotate .)
    SQUARE          reduce using rule 37 (statute -> rotate .)
    CIRCLE          reduce using rule 37 (statute -> rotate .)
    POLIGON         reduce using rule 37 (statute -> rotate .)
    COLOR           reduce using rule 37 (statute -> rotate .)
    PENSIZE         reduce using rule 37 (statute -> rotate .)
    PENFORWARD      reduce using rule 37 (statute -> rotate .)
    PENBACK         reduce using rule 37 (statute -> rotate .)
    ROTATE          reduce using rule 37 (statute -> rotate .)
    WHILE           reduce using rule 37 (statute -> rotate .)
    RETURN          reduce using rule 37 (statute -> rotate .)
    PENON           reduce using rule 37 (statute -> rotate .)
    PENOFF          reduce using rule 37 (statute -> rotate .)
    RBRACE          reduce using rule 37 (statute -> rotate .)
    VAR             reduce using rule 37 (statute -> rotate .)


state 60

    (38) statute -> while .

    ID              reduce using rule 38 (statute -> while .)
    IF              reduce using rule 38 (statute -> while .)
    TRIANGLE        reduce using rule 38 (statute -> while .)
    RECTANGLE       reduce using rule 38 (statute -> while .)
    SQUARE          reduce using rule 38 (statute -> while .)
    CIRCLE          reduce using rule 38 (statute -> while .)
    POLIGON         reduce using rule 38 (statute -> while .)
    COLOR           reduce using rule 38 (statute -> while .)
    PENSIZE         reduce using rule 38 (statute -> while .)
    PENFORWARD      reduce using rule 38 (statute -> while .)
    PENBACK         reduce using rule 38 (statute -> while .)
    ROTATE          reduce using rule 38 (statute -> while .)
    WHILE           reduce using rule 38 (statute -> while .)
    RETURN          reduce using rule 38 (statute -> while .)
    PENON           reduce using rule 38 (statute -> while .)
    PENOFF          reduce using rule 38 (statute -> while .)
    RBRACE          reduce using rule 38 (statute -> while .)
    VAR             reduce using rule 38 (statute -> while .)


state 61

    (39) statute -> return .

    ID              reduce using rule 39 (statute -> return .)
    IF              reduce using rule 39 (statute -> return .)
    TRIANGLE        reduce using rule 39 (statute -> return .)
    RECTANGLE       reduce using rule 39 (statute -> return .)
    SQUARE          reduce using rule 39 (statute -> return .)
    CIRCLE          reduce using rule 39 (statute -> return .)
    POLIGON         reduce using rule 39 (statute -> return .)
    COLOR           reduce using rule 39 (statute -> return .)
    PENSIZE         reduce using rule 39 (statute -> return .)
    PENFORWARD      reduce using rule 39 (statute -> return .)
    PENBACK         reduce using rule 39 (statute -> return .)
    ROTATE          reduce using rule 39 (statute -> return .)
    WHILE           reduce using rule 39 (statute -> return .)
    RETURN          reduce using rule 39 (statute -> return .)
    PENON           reduce using rule 39 (statute -> return .)
    PENOFF          reduce using rule 39 (statute -> return .)
    RBRACE          reduce using rule 39 (statute -> return .)
    VAR             reduce using rule 39 (statute -> return .)


state 62

    (40) statute -> penon .

    ID              reduce using rule 40 (statute -> penon .)
    IF              reduce using rule 40 (statute -> penon .)
    TRIANGLE        reduce using rule 40 (statute -> penon .)
    RECTANGLE       reduce using rule 40 (statute -> penon .)
    SQUARE          reduce using rule 40 (statute -> penon .)
    CIRCLE          reduce using rule 40 (statute -> penon .)
    POLIGON         reduce using rule 40 (statute -> penon .)
    COLOR           reduce using rule 40 (statute -> penon .)
    PENSIZE         reduce using rule 40 (statute -> penon .)
    PENFORWARD      reduce using rule 40 (statute -> penon .)
    PENBACK         reduce using rule 40 (statute -> penon .)
    ROTATE          reduce using rule 40 (statute -> penon .)
    WHILE           reduce using rule 40 (statute -> penon .)
    RETURN          reduce using rule 40 (statute -> penon .)
    PENON           reduce using rule 40 (statute -> penon .)
    PENOFF          reduce using rule 40 (statute -> penon .)
    RBRACE          reduce using rule 40 (statute -> penon .)
    VAR             reduce using rule 40 (statute -> penon .)


state 63

    (41) statute -> penoff .

    ID              reduce using rule 41 (statute -> penoff .)
    IF              reduce using rule 41 (statute -> penoff .)
    TRIANGLE        reduce using rule 41 (statute -> penoff .)
    RECTANGLE       reduce using rule 41 (statute -> penoff .)
    SQUARE          reduce using rule 41 (statute -> penoff .)
    CIRCLE          reduce using rule 41 (statute -> penoff .)
    POLIGON         reduce using rule 41 (statute -> penoff .)
    COLOR           reduce using rule 41 (statute -> penoff .)
    PENSIZE         reduce using rule 41 (statute -> penoff .)
    PENFORWARD      reduce using rule 41 (statute -> penoff .)
    PENBACK         reduce using rule 41 (statute -> penoff .)
    ROTATE          reduce using rule 41 (statute -> penoff .)
    WHILE           reduce using rule 41 (statute -> penoff .)
    RETURN          reduce using rule 41 (statute -> penoff .)
    PENON           reduce using rule 41 (statute -> penoff .)
    PENOFF          reduce using rule 41 (statute -> penoff .)
    RBRACE          reduce using rule 41 (statute -> penoff .)
    VAR             reduce using rule 41 (statute -> penoff .)


state 64

    (45) assignment -> ID . ASSIGN expression SEMICOLON
    (46) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (47) cte_id -> .
    (130) check_name -> .

    ASSIGN          shift and go to state 99
    LBRACKET        reduce using rule 47 (cte_id -> .)
    LPAREN          reduce using rule 130 (check_name -> .)

    cte_id                         shift and go to state 100
    check_name                     shift and go to state 101

state 65

    (96) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 102


state 66

    (68) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 103


state 67

    (69) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 104


state 68

    (67) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 69

    (66) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 70

    (70) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 71

    (65) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 108


state 72

    (73) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 109


state 73

    (74) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 110


state 74

    (75) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 75

    (71) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (72) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 112


state 76

    (42) while -> WHILE . while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (43) while_return -> .

    LPAREN          reduce using rule 43 (while_return -> .)

    while_return                   shift and go to state 113

state 77

    (136) return -> RETURN . var_cte SEMICOLON
    (137) return -> RETURN . st_cte SEMICOLON
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (54) st_cte -> . STRING
    (55) st_cte -> . cte_bool
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 116
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    STRING          shift and go to state 118
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    var_cte                        shift and go to state 114
    st_cte                         shift and go to state 115
    cte_bool                       shift and go to state 117
    call                           shift and go to state 93

state 78

    (76) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 119


state 79

    (77) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 120


state 80

    (56) funcs -> FUNC type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 121


state 81

    (57) funcs -> FUNC VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 122


state 82

    (16) vars2 -> type vars3 SEMICOLON vars2 .

    DAVINCI         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    FUNC            reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)


state 83

    (121) factor -> ID . push_id
    (82) var_cte -> ID . getidvalue
    (86) var_cte -> ID . list getarrayvalue
    (129) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (124) push_id -> .
    (88) getidvalue -> .
    (24) list -> . LIST
    (130) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for LESSER resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for GREATER resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for EQUAL resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 88 (getidvalue -> .)
    DIVIDE          reduce using rule 88 (getidvalue -> .)
    TIMES           reduce using rule 88 (getidvalue -> .)
    MINUS           reduce using rule 88 (getidvalue -> .)
    PLUS            reduce using rule 88 (getidvalue -> .)
    LESSER          reduce using rule 88 (getidvalue -> .)
    GREATER         reduce using rule 88 (getidvalue -> .)
    EQUAL           reduce using rule 88 (getidvalue -> .)
    NOTEQUAL        reduce using rule 88 (getidvalue -> .)
    GREATEROREQUAL  reduce using rule 88 (getidvalue -> .)
    LESSEROREQUAL   reduce using rule 88 (getidvalue -> .)
    COMMA           reduce using rule 88 (getidvalue -> .)
    SEMICOLON       reduce using rule 88 (getidvalue -> .)
    RPAREN          reduce using rule 88 (getidvalue -> .)
    RBRACKET        reduce using rule 88 (getidvalue -> .)
    LIST            shift and go to state 41
    LPAREN          reduce using rule 130 (check_name -> .)

  ! DIVIDE          [ reduce using rule 124 (push_id -> .) ]
  ! TIMES           [ reduce using rule 124 (push_id -> .) ]
  ! MINUS           [ reduce using rule 124 (push_id -> .) ]
  ! PLUS            [ reduce using rule 124 (push_id -> .) ]
  ! LESSER          [ reduce using rule 124 (push_id -> .) ]
  ! GREATER         [ reduce using rule 124 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 124 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 124 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 124 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 124 (push_id -> .) ]
  ! COMMA           [ reduce using rule 124 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 124 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 124 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 124 (push_id -> .) ]

    push_id                        shift and go to state 123
    getidvalue                     shift and go to state 124
    list                           shift and go to state 125
    check_name                     shift and go to state 101

state 84

    (18) vars3 -> ID ASSIGN expression . vars4
    (21) vars4 -> . COMMA vars3
    (22) vars4 -> . empty
    (138) empty -> .

    COMMA           shift and go to state 42
    SEMICOLON       reduce using rule 138 (empty -> .)

    vars4                          shift and go to state 126
    empty                          shift and go to state 43

state 85

    (102) expression -> exp . expression1
    (103) expression1 -> . LESSER relop exp top_relop
    (104) expression1 -> . GREATER relop exp top_relop
    (105) expression1 -> . EQUAL relop exp top_relop
    (106) expression1 -> . NOTEQUAL relop exp top_relop
    (107) expression1 -> . GREATEROREQUAL relop exp top_relop
    (108) expression1 -> . LESSEROREQUAL relop exp top_relop
    (109) expression1 -> . empty
    (138) empty -> .

    LESSER          shift and go to state 128
    GREATER         shift and go to state 129
    EQUAL           shift and go to state 130
    NOTEQUAL        shift and go to state 131
    GREATEROREQUAL  shift and go to state 132
    LESSEROREQUAL   shift and go to state 133
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    RPAREN          reduce using rule 138 (empty -> .)

    expression1                    shift and go to state 127
    empty                          shift and go to state 134

state 86

    (112) exp -> term . top_exp exp1
    (116) top_exp -> .

    MINUS           reduce using rule 116 (top_exp -> .)
    PLUS            reduce using rule 116 (top_exp -> .)
    LESSER          reduce using rule 116 (top_exp -> .)
    GREATER         reduce using rule 116 (top_exp -> .)
    EQUAL           reduce using rule 116 (top_exp -> .)
    NOTEQUAL        reduce using rule 116 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 116 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 116 (top_exp -> .)
    COMMA           reduce using rule 116 (top_exp -> .)
    SEMICOLON       reduce using rule 116 (top_exp -> .)
    RPAREN          reduce using rule 116 (top_exp -> .)
    RBRACKET        reduce using rule 116 (top_exp -> .)

    top_exp                        shift and go to state 135

state 87

    (125) term -> factor . top_factor term1
    (118) top_factor -> .

    DIVIDE          reduce using rule 118 (top_factor -> .)
    TIMES           reduce using rule 118 (top_factor -> .)
    MINUS           reduce using rule 118 (top_factor -> .)
    PLUS            reduce using rule 118 (top_factor -> .)
    LESSER          reduce using rule 118 (top_factor -> .)
    GREATER         reduce using rule 118 (top_factor -> .)
    EQUAL           reduce using rule 118 (top_factor -> .)
    NOTEQUAL        reduce using rule 118 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 118 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 118 (top_factor -> .)
    COMMA           reduce using rule 118 (top_factor -> .)
    SEMICOLON       reduce using rule 118 (top_factor -> .)
    RPAREN          reduce using rule 118 (top_factor -> .)
    RBRACKET        reduce using rule 118 (top_factor -> .)

    top_factor                     shift and go to state 136

state 88

    (119) factor -> LPAREN . false_bottom expression RPAREN end_par
    (122) false_bottom -> .

    LPAREN          reduce using rule 122 (false_bottom -> .)
    ID              reduce using rule 122 (false_bottom -> .)
    CTE_INT         reduce using rule 122 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 122 (false_bottom -> .)
    TRUE            reduce using rule 122 (false_bottom -> .)
    FALSE           reduce using rule 122 (false_bottom -> .)

    false_bottom                   shift and go to state 137

state 89

    (120) factor -> var_cte .

    DIVIDE          reduce using rule 120 (factor -> var_cte .)
    TIMES           reduce using rule 120 (factor -> var_cte .)
    MINUS           reduce using rule 120 (factor -> var_cte .)
    PLUS            reduce using rule 120 (factor -> var_cte .)
    LESSER          reduce using rule 120 (factor -> var_cte .)
    GREATER         reduce using rule 120 (factor -> var_cte .)
    EQUAL           reduce using rule 120 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 120 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 120 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 120 (factor -> var_cte .)
    COMMA           reduce using rule 120 (factor -> var_cte .)
    SEMICOLON       reduce using rule 120 (factor -> var_cte .)
    RPAREN          reduce using rule 120 (factor -> var_cte .)
    RBRACKET        reduce using rule 120 (factor -> var_cte .)


state 90

    (83) var_cte -> CTE_INT . getvalue_i
    (89) getvalue_i -> .

    DIVIDE          reduce using rule 89 (getvalue_i -> .)
    TIMES           reduce using rule 89 (getvalue_i -> .)
    MINUS           reduce using rule 89 (getvalue_i -> .)
    PLUS            reduce using rule 89 (getvalue_i -> .)
    LESSER          reduce using rule 89 (getvalue_i -> .)
    GREATER         reduce using rule 89 (getvalue_i -> .)
    EQUAL           reduce using rule 89 (getvalue_i -> .)
    NOTEQUAL        reduce using rule 89 (getvalue_i -> .)
    GREATEROREQUAL  reduce using rule 89 (getvalue_i -> .)
    LESSEROREQUAL   reduce using rule 89 (getvalue_i -> .)
    COMMA           reduce using rule 89 (getvalue_i -> .)
    SEMICOLON       reduce using rule 89 (getvalue_i -> .)
    RPAREN          reduce using rule 89 (getvalue_i -> .)
    RBRACKET        reduce using rule 89 (getvalue_i -> .)

    getvalue_i                     shift and go to state 138

state 91

    (84) var_cte -> CTE_FLOAT . getvalue_f
    (90) getvalue_f -> .

    DIVIDE          reduce using rule 90 (getvalue_f -> .)
    TIMES           reduce using rule 90 (getvalue_f -> .)
    MINUS           reduce using rule 90 (getvalue_f -> .)
    PLUS            reduce using rule 90 (getvalue_f -> .)
    LESSER          reduce using rule 90 (getvalue_f -> .)
    GREATER         reduce using rule 90 (getvalue_f -> .)
    EQUAL           reduce using rule 90 (getvalue_f -> .)
    NOTEQUAL        reduce using rule 90 (getvalue_f -> .)
    GREATEROREQUAL  reduce using rule 90 (getvalue_f -> .)
    LESSEROREQUAL   reduce using rule 90 (getvalue_f -> .)
    COMMA           reduce using rule 90 (getvalue_f -> .)
    SEMICOLON       reduce using rule 90 (getvalue_f -> .)
    RPAREN          reduce using rule 90 (getvalue_f -> .)
    RBRACKET        reduce using rule 90 (getvalue_f -> .)

    getvalue_f                     shift and go to state 139

state 92

    (85) var_cte -> cte_bool . getvalue_b
    (91) getvalue_b -> .

    DIVIDE          reduce using rule 91 (getvalue_b -> .)
    TIMES           reduce using rule 91 (getvalue_b -> .)
    MINUS           reduce using rule 91 (getvalue_b -> .)
    PLUS            reduce using rule 91 (getvalue_b -> .)
    LESSER          reduce using rule 91 (getvalue_b -> .)
    GREATER         reduce using rule 91 (getvalue_b -> .)
    EQUAL           reduce using rule 91 (getvalue_b -> .)
    NOTEQUAL        reduce using rule 91 (getvalue_b -> .)
    GREATEROREQUAL  reduce using rule 91 (getvalue_b -> .)
    LESSEROREQUAL   reduce using rule 91 (getvalue_b -> .)
    COMMA           reduce using rule 91 (getvalue_b -> .)
    SEMICOLON       reduce using rule 91 (getvalue_b -> .)
    RPAREN          reduce using rule 91 (getvalue_b -> .)
    RBRACKET        reduce using rule 91 (getvalue_b -> .)

    getvalue_b                     shift and go to state 140

state 93

    (87) var_cte -> call . getcallvalue
    (93) getcallvalue -> .

    DIVIDE          reduce using rule 93 (getcallvalue -> .)
    TIMES           reduce using rule 93 (getcallvalue -> .)
    MINUS           reduce using rule 93 (getcallvalue -> .)
    PLUS            reduce using rule 93 (getcallvalue -> .)
    LESSER          reduce using rule 93 (getcallvalue -> .)
    GREATER         reduce using rule 93 (getcallvalue -> .)
    EQUAL           reduce using rule 93 (getcallvalue -> .)
    NOTEQUAL        reduce using rule 93 (getcallvalue -> .)
    GREATEROREQUAL  reduce using rule 93 (getcallvalue -> .)
    LESSEROREQUAL   reduce using rule 93 (getcallvalue -> .)
    COMMA           reduce using rule 93 (getcallvalue -> .)
    SEMICOLON       reduce using rule 93 (getcallvalue -> .)
    RPAREN          reduce using rule 93 (getcallvalue -> .)
    RBRACKET        reduce using rule 93 (getcallvalue -> .)

    getcallvalue                   shift and go to state 141

state 94

    (94) cte_bool -> TRUE .

    DIVIDE          reduce using rule 94 (cte_bool -> TRUE .)
    TIMES           reduce using rule 94 (cte_bool -> TRUE .)
    MINUS           reduce using rule 94 (cte_bool -> TRUE .)
    PLUS            reduce using rule 94 (cte_bool -> TRUE .)
    LESSER          reduce using rule 94 (cte_bool -> TRUE .)
    GREATER         reduce using rule 94 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 94 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 94 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 94 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 94 (cte_bool -> TRUE .)
    COMMA           reduce using rule 94 (cte_bool -> TRUE .)
    SEMICOLON       reduce using rule 94 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 94 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 94 (cte_bool -> TRUE .)


state 95

    (95) cte_bool -> FALSE .

    DIVIDE          reduce using rule 95 (cte_bool -> FALSE .)
    TIMES           reduce using rule 95 (cte_bool -> FALSE .)
    MINUS           reduce using rule 95 (cte_bool -> FALSE .)
    PLUS            reduce using rule 95 (cte_bool -> FALSE .)
    LESSER          reduce using rule 95 (cte_bool -> FALSE .)
    GREATER         reduce using rule 95 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 95 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 95 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 95 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 95 (cte_bool -> FALSE .)
    COMMA           reduce using rule 95 (cte_bool -> FALSE .)
    SEMICOLON       reduce using rule 95 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 95 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 95 (cte_bool -> FALSE .)


state 96

    (19) vars3 -> ID list vars4 .

    SEMICOLON       reduce using rule 19 (vars3 -> ID list vars4 .)


state 97

    (21) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 21 (vars4 -> COMMA vars3 .)


state 98

    (10) b1 -> vars local_vars b2 .
    (13) b2 -> b2 . statute
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 10 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    statute                        shift and go to state 46
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 99

    (45) assignment -> ID ASSIGN . expression SEMICOLON
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    expression                     shift and go to state 142
    exp                            shift and go to state 85
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 100

    (46) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 143


state 101

    (129) call -> ID check_name . LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 144


state 102

    (96) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    expression                     shift and go to state 145
    exp                            shift and go to state 85
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 103

    (68) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 146
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 104

    (69) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 147
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 105

    (67) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 148
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 106

    (66) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 149
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 107

    (70) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 150
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 108

    (65) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (48) color_cte -> . RED
    (49) color_cte -> . BLUE
    (50) color_cte -> . YELLOW
    (51) color_cte -> . GREEN
    (52) color_cte -> . PINK
    (53) color_cte -> . PURPLE

    RED             shift and go to state 152
    BLUE            shift and go to state 153
    YELLOW          shift and go to state 154
    GREEN           shift and go to state 155
    PINK            shift and go to state 156
    PURPLE          shift and go to state 157

    color_cte                      shift and go to state 151

state 109

    (73) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 158
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 110

    (74) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 159
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 111

    (75) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 160
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 112

    (71) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (72) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    CTE_STRING      shift and go to state 162
    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 161
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 113

    (42) while -> WHILE while_return . LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 163


state 114

    (136) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 164


state 115

    (137) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 165


state 116

    (82) var_cte -> ID . getidvalue
    (86) var_cte -> ID . list getarrayvalue
    (129) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (88) getidvalue -> .
    (24) list -> . LIST
    (130) check_name -> .

    SEMICOLON       reduce using rule 88 (getidvalue -> .)
    LIST            shift and go to state 41
    LPAREN          reduce using rule 130 (check_name -> .)

    getidvalue                     shift and go to state 124
    list                           shift and go to state 125
    check_name                     shift and go to state 101

state 117

    (85) var_cte -> cte_bool . getvalue_b
    (55) st_cte -> cte_bool .
    (91) getvalue_b -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 55 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 55 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 91 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 140

state 118

    (54) st_cte -> STRING .

    SEMICOLON       reduce using rule 54 (st_cte -> STRING .)
    RPAREN          reduce using rule 54 (st_cte -> STRING .)


state 119

    (76) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 166


state 120

    (77) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 167


state 121

    (56) funcs -> FUNC type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs1 -> . funcs1 COMMA type ID
    (59) funcs1 -> . empty
    (138) empty -> .

    RPAREN          reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)

    funcs1                         shift and go to state 168
    empty                          shift and go to state 169

state 122

    (57) funcs -> FUNC VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs1 -> . funcs1 COMMA type ID
    (59) funcs1 -> . empty
    (138) empty -> .

    RPAREN          reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)

    funcs1                         shift and go to state 170
    empty                          shift and go to state 169

state 123

    (121) factor -> ID push_id .

    DIVIDE          reduce using rule 121 (factor -> ID push_id .)
    TIMES           reduce using rule 121 (factor -> ID push_id .)
    MINUS           reduce using rule 121 (factor -> ID push_id .)
    PLUS            reduce using rule 121 (factor -> ID push_id .)
    LESSER          reduce using rule 121 (factor -> ID push_id .)
    GREATER         reduce using rule 121 (factor -> ID push_id .)
    EQUAL           reduce using rule 121 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 121 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 121 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 121 (factor -> ID push_id .)
    COMMA           reduce using rule 121 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 121 (factor -> ID push_id .)
    RPAREN          reduce using rule 121 (factor -> ID push_id .)
    RBRACKET        reduce using rule 121 (factor -> ID push_id .)


state 124

    (82) var_cte -> ID getidvalue .

    DIVIDE          reduce using rule 82 (var_cte -> ID getidvalue .)
    TIMES           reduce using rule 82 (var_cte -> ID getidvalue .)
    MINUS           reduce using rule 82 (var_cte -> ID getidvalue .)
    PLUS            reduce using rule 82 (var_cte -> ID getidvalue .)
    LESSER          reduce using rule 82 (var_cte -> ID getidvalue .)
    GREATER         reduce using rule 82 (var_cte -> ID getidvalue .)
    EQUAL           reduce using rule 82 (var_cte -> ID getidvalue .)
    NOTEQUAL        reduce using rule 82 (var_cte -> ID getidvalue .)
    GREATEROREQUAL  reduce using rule 82 (var_cte -> ID getidvalue .)
    LESSEROREQUAL   reduce using rule 82 (var_cte -> ID getidvalue .)
    COMMA           reduce using rule 82 (var_cte -> ID getidvalue .)
    SEMICOLON       reduce using rule 82 (var_cte -> ID getidvalue .)
    RPAREN          reduce using rule 82 (var_cte -> ID getidvalue .)
    RBRACKET        reduce using rule 82 (var_cte -> ID getidvalue .)


state 125

    (86) var_cte -> ID list . getarrayvalue
    (92) getarrayvalue -> .

    DIVIDE          reduce using rule 92 (getarrayvalue -> .)
    TIMES           reduce using rule 92 (getarrayvalue -> .)
    MINUS           reduce using rule 92 (getarrayvalue -> .)
    PLUS            reduce using rule 92 (getarrayvalue -> .)
    LESSER          reduce using rule 92 (getarrayvalue -> .)
    GREATER         reduce using rule 92 (getarrayvalue -> .)
    EQUAL           reduce using rule 92 (getarrayvalue -> .)
    NOTEQUAL        reduce using rule 92 (getarrayvalue -> .)
    GREATEROREQUAL  reduce using rule 92 (getarrayvalue -> .)
    LESSEROREQUAL   reduce using rule 92 (getarrayvalue -> .)
    COMMA           reduce using rule 92 (getarrayvalue -> .)
    SEMICOLON       reduce using rule 92 (getarrayvalue -> .)
    RPAREN          reduce using rule 92 (getarrayvalue -> .)
    RBRACKET        reduce using rule 92 (getarrayvalue -> .)

    getarrayvalue                  shift and go to state 171

state 126

    (18) vars3 -> ID ASSIGN expression vars4 .

    SEMICOLON       reduce using rule 18 (vars3 -> ID ASSIGN expression vars4 .)


state 127

    (102) expression -> exp expression1 .

    COMMA           reduce using rule 102 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 102 (expression -> exp expression1 .)
    RPAREN          reduce using rule 102 (expression -> exp expression1 .)


state 128

    (103) expression1 -> LESSER . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 172

state 129

    (104) expression1 -> GREATER . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 173

state 130

    (105) expression1 -> EQUAL . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 174

state 131

    (106) expression1 -> NOTEQUAL . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 175

state 132

    (107) expression1 -> GREATEROREQUAL . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 176

state 133

    (108) expression1 -> LESSEROREQUAL . relop exp top_relop
    (110) relop -> .

    LPAREN          reduce using rule 110 (relop -> .)
    ID              reduce using rule 110 (relop -> .)
    CTE_INT         reduce using rule 110 (relop -> .)
    CTE_FLOAT       reduce using rule 110 (relop -> .)
    TRUE            reduce using rule 110 (relop -> .)
    FALSE           reduce using rule 110 (relop -> .)

    relop                          shift and go to state 177

state 134

    (109) expression1 -> empty .

    COMMA           reduce using rule 109 (expression1 -> empty .)
    SEMICOLON       reduce using rule 109 (expression1 -> empty .)
    RPAREN          reduce using rule 109 (expression1 -> empty .)


state 135

    (112) exp -> term top_exp . exp1
    (113) exp1 -> . MINUS push_sign exp
    (114) exp1 -> . PLUS push_sign exp
    (115) exp1 -> . empty
    (138) empty -> .

    MINUS           shift and go to state 179
    PLUS            shift and go to state 180
    LESSER          reduce using rule 138 (empty -> .)
    GREATER         reduce using rule 138 (empty -> .)
    EQUAL           reduce using rule 138 (empty -> .)
    NOTEQUAL        reduce using rule 138 (empty -> .)
    GREATEROREQUAL  reduce using rule 138 (empty -> .)
    LESSEROREQUAL   reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    RPAREN          reduce using rule 138 (empty -> .)
    RBRACKET        reduce using rule 138 (empty -> .)

    exp1                           shift and go to state 178
    empty                          shift and go to state 181

state 136

    (125) term -> factor top_factor . term1
    (126) term1 -> . DIVIDE push_sign term
    (127) term1 -> . TIMES push_sign term
    (128) term1 -> . empty
    (138) empty -> .

    DIVIDE          shift and go to state 183
    TIMES           shift and go to state 184
    MINUS           reduce using rule 138 (empty -> .)
    PLUS            reduce using rule 138 (empty -> .)
    LESSER          reduce using rule 138 (empty -> .)
    GREATER         reduce using rule 138 (empty -> .)
    EQUAL           reduce using rule 138 (empty -> .)
    NOTEQUAL        reduce using rule 138 (empty -> .)
    GREATEROREQUAL  reduce using rule 138 (empty -> .)
    LESSEROREQUAL   reduce using rule 138 (empty -> .)
    COMMA           reduce using rule 138 (empty -> .)
    SEMICOLON       reduce using rule 138 (empty -> .)
    RPAREN          reduce using rule 138 (empty -> .)
    RBRACKET        reduce using rule 138 (empty -> .)

    term1                          shift and go to state 182
    empty                          shift and go to state 185

state 137

    (119) factor -> LPAREN false_bottom . expression RPAREN end_par
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    expression                     shift and go to state 186
    exp                            shift and go to state 85
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 138

    (83) var_cte -> CTE_INT getvalue_i .

    DIVIDE          reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    TIMES           reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    MINUS           reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    PLUS            reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    LESSER          reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    GREATER         reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    EQUAL           reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    NOTEQUAL        reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    GREATEROREQUAL  reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    LESSEROREQUAL   reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    COMMA           reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    SEMICOLON       reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    RPAREN          reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)
    RBRACKET        reduce using rule 83 (var_cte -> CTE_INT getvalue_i .)


state 139

    (84) var_cte -> CTE_FLOAT getvalue_f .

    DIVIDE          reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    TIMES           reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    MINUS           reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    PLUS            reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSER          reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATER         reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    EQUAL           reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    NOTEQUAL        reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATEROREQUAL  reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSEROREQUAL   reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    COMMA           reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    SEMICOLON       reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    RPAREN          reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)
    RBRACKET        reduce using rule 84 (var_cte -> CTE_FLOAT getvalue_f .)


state 140

    (85) var_cte -> cte_bool getvalue_b .

    DIVIDE          reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    TIMES           reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    MINUS           reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    PLUS            reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    LESSER          reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    GREATER         reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    EQUAL           reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    NOTEQUAL        reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    GREATEROREQUAL  reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    LESSEROREQUAL   reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    COMMA           reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    SEMICOLON       reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    RPAREN          reduce using rule 85 (var_cte -> cte_bool getvalue_b .)
    RBRACKET        reduce using rule 85 (var_cte -> cte_bool getvalue_b .)


state 141

    (87) var_cte -> call getcallvalue .

    DIVIDE          reduce using rule 87 (var_cte -> call getcallvalue .)
    TIMES           reduce using rule 87 (var_cte -> call getcallvalue .)
    MINUS           reduce using rule 87 (var_cte -> call getcallvalue .)
    PLUS            reduce using rule 87 (var_cte -> call getcallvalue .)
    LESSER          reduce using rule 87 (var_cte -> call getcallvalue .)
    GREATER         reduce using rule 87 (var_cte -> call getcallvalue .)
    EQUAL           reduce using rule 87 (var_cte -> call getcallvalue .)
    NOTEQUAL        reduce using rule 87 (var_cte -> call getcallvalue .)
    GREATEROREQUAL  reduce using rule 87 (var_cte -> call getcallvalue .)
    LESSEROREQUAL   reduce using rule 87 (var_cte -> call getcallvalue .)
    COMMA           reduce using rule 87 (var_cte -> call getcallvalue .)
    SEMICOLON       reduce using rule 87 (var_cte -> call getcallvalue .)
    RPAREN          reduce using rule 87 (var_cte -> call getcallvalue .)
    RBRACKET        reduce using rule 87 (var_cte -> call getcallvalue .)


state 142

    (45) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 187


state 143

    (46) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 188
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 144

    (129) call -> ID check_name LPAREN . create_era call1 RPAREN SEMICOLON gosub
    (131) create_era -> .

    ID              reduce using rule 131 (create_era -> .)
    STRING          reduce using rule 131 (create_era -> .)
    TRUE            reduce using rule 131 (create_era -> .)
    FALSE           reduce using rule 131 (create_era -> .)
    LPAREN          reduce using rule 131 (create_era -> .)
    CTE_INT         reduce using rule 131 (create_era -> .)
    CTE_FLOAT       reduce using rule 131 (create_era -> .)

    create_era                     shift and go to state 189

state 145

    (96) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 190


state 146

    (68) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 191


state 147

    (69) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 192


state 148

    (67) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 193


state 149

    (66) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 194


state 150

    (70) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 195


state 151

    (65) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 196


state 152

    (48) color_cte -> RED .

    RPAREN          reduce using rule 48 (color_cte -> RED .)


state 153

    (49) color_cte -> BLUE .

    RPAREN          reduce using rule 49 (color_cte -> BLUE .)


state 154

    (50) color_cte -> YELLOW .

    RPAREN          reduce using rule 50 (color_cte -> YELLOW .)


state 155

    (51) color_cte -> GREEN .

    RPAREN          reduce using rule 51 (color_cte -> GREEN .)


state 156

    (52) color_cte -> PINK .

    RPAREN          reduce using rule 52 (color_cte -> PINK .)


state 157

    (53) color_cte -> PURPLE .

    RPAREN          reduce using rule 53 (color_cte -> PURPLE .)


state 158

    (73) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 197


state 159

    (74) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 198


state 160

    (75) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 199


state 161

    (71) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 200


state 162

    (72) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 201


state 163

    (42) while -> WHILE while_return LPAREN . type_check expression RPAREN LBRACE b2 RBRACE end_while
    (99) type_check -> .

    LPAREN          reduce using rule 99 (type_check -> .)
    ID              reduce using rule 99 (type_check -> .)
    CTE_INT         reduce using rule 99 (type_check -> .)
    CTE_FLOAT       reduce using rule 99 (type_check -> .)
    TRUE            reduce using rule 99 (type_check -> .)
    FALSE           reduce using rule 99 (type_check -> .)

    type_check                     shift and go to state 202

state 164

    (136) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 136 (return -> RETURN var_cte SEMICOLON .)


state 165

    (137) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 137 (return -> RETURN st_cte SEMICOLON .)


state 166

    (76) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 203


state 167

    (77) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 204


state 168

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 205
    COMMA           shift and go to state 206


state 169

    (59) funcs1 -> empty .

    RPAREN          reduce using rule 59 (funcs1 -> empty .)
    COMMA           reduce using rule 59 (funcs1 -> empty .)


state 170

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 207
    COMMA           shift and go to state 206


state 171

    (86) var_cte -> ID list getarrayvalue .

    DIVIDE          reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    TIMES           reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    MINUS           reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    PLUS            reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    LESSER          reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    GREATER         reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    EQUAL           reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    NOTEQUAL        reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    GREATEROREQUAL  reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    LESSEROREQUAL   reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    COMMA           reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    SEMICOLON       reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    RPAREN          reduce using rule 86 (var_cte -> ID list getarrayvalue .)
    RBRACKET        reduce using rule 86 (var_cte -> ID list getarrayvalue .)


state 172

    (103) expression1 -> LESSER relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 208
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 173

    (104) expression1 -> GREATER relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 209
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 174

    (105) expression1 -> EQUAL relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 210
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 175

    (106) expression1 -> NOTEQUAL relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 211
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 176

    (107) expression1 -> GREATEROREQUAL relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 212
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 177

    (108) expression1 -> LESSEROREQUAL relop . exp top_relop
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 213
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 178

    (112) exp -> term top_exp exp1 .

    LESSER          reduce using rule 112 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 112 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 112 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 112 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 112 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 112 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 112 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 112 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 112 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 112 (exp -> term top_exp exp1 .)


state 179

    (113) exp1 -> MINUS . push_sign exp
    (117) push_sign -> .

    LPAREN          reduce using rule 117 (push_sign -> .)
    ID              reduce using rule 117 (push_sign -> .)
    CTE_INT         reduce using rule 117 (push_sign -> .)
    CTE_FLOAT       reduce using rule 117 (push_sign -> .)
    TRUE            reduce using rule 117 (push_sign -> .)
    FALSE           reduce using rule 117 (push_sign -> .)

    push_sign                      shift and go to state 214

state 180

    (114) exp1 -> PLUS . push_sign exp
    (117) push_sign -> .

    LPAREN          reduce using rule 117 (push_sign -> .)
    ID              reduce using rule 117 (push_sign -> .)
    CTE_INT         reduce using rule 117 (push_sign -> .)
    CTE_FLOAT       reduce using rule 117 (push_sign -> .)
    TRUE            reduce using rule 117 (push_sign -> .)
    FALSE           reduce using rule 117 (push_sign -> .)

    push_sign                      shift and go to state 215

state 181

    (115) exp1 -> empty .

    LESSER          reduce using rule 115 (exp1 -> empty .)
    GREATER         reduce using rule 115 (exp1 -> empty .)
    EQUAL           reduce using rule 115 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 115 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 115 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 115 (exp1 -> empty .)
    COMMA           reduce using rule 115 (exp1 -> empty .)
    SEMICOLON       reduce using rule 115 (exp1 -> empty .)
    RPAREN          reduce using rule 115 (exp1 -> empty .)
    RBRACKET        reduce using rule 115 (exp1 -> empty .)


state 182

    (125) term -> factor top_factor term1 .

    MINUS           reduce using rule 125 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 125 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 125 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 125 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 125 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 125 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 125 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 125 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 125 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 125 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 125 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 125 (term -> factor top_factor term1 .)


state 183

    (126) term1 -> DIVIDE . push_sign term
    (117) push_sign -> .

    LPAREN          reduce using rule 117 (push_sign -> .)
    ID              reduce using rule 117 (push_sign -> .)
    CTE_INT         reduce using rule 117 (push_sign -> .)
    CTE_FLOAT       reduce using rule 117 (push_sign -> .)
    TRUE            reduce using rule 117 (push_sign -> .)
    FALSE           reduce using rule 117 (push_sign -> .)

    push_sign                      shift and go to state 216

state 184

    (127) term1 -> TIMES . push_sign term
    (117) push_sign -> .

    LPAREN          reduce using rule 117 (push_sign -> .)
    ID              reduce using rule 117 (push_sign -> .)
    CTE_INT         reduce using rule 117 (push_sign -> .)
    CTE_FLOAT       reduce using rule 117 (push_sign -> .)
    TRUE            reduce using rule 117 (push_sign -> .)
    FALSE           reduce using rule 117 (push_sign -> .)

    push_sign                      shift and go to state 217

state 185

    (128) term1 -> empty .

    MINUS           reduce using rule 128 (term1 -> empty .)
    PLUS            reduce using rule 128 (term1 -> empty .)
    LESSER          reduce using rule 128 (term1 -> empty .)
    GREATER         reduce using rule 128 (term1 -> empty .)
    EQUAL           reduce using rule 128 (term1 -> empty .)
    NOTEQUAL        reduce using rule 128 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 128 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 128 (term1 -> empty .)
    COMMA           reduce using rule 128 (term1 -> empty .)
    SEMICOLON       reduce using rule 128 (term1 -> empty .)
    RPAREN          reduce using rule 128 (term1 -> empty .)
    RBRACKET        reduce using rule 128 (term1 -> empty .)


state 186

    (119) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 218


state 187

    (45) assignment -> ID ASSIGN expression SEMICOLON .

    ID              reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 45 (assignment -> ID ASSIGN expression SEMICOLON .)


state 188

    (46) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 219


state 189

    (129) call -> ID check_name LPAREN create_era . call1 RPAREN SEMICOLON gosub
    (133) call1 -> . ID COMMA call1
    (134) call1 -> . exp
    (135) call1 -> . st_cte
    (112) exp -> . term top_exp exp1
    (54) st_cte -> . STRING
    (55) st_cte -> . cte_bool
    (125) term -> . factor top_factor term1
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 220
    STRING          shift and go to state 118
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 88
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91

    call1                          shift and go to state 221
    exp                            shift and go to state 222
    st_cte                         shift and go to state 223
    term                           shift and go to state 86
    cte_bool                       shift and go to state 224
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    call                           shift and go to state 93

state 190

    (96) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (99) type_check -> .

    LBRACE          reduce using rule 99 (type_check -> .)

    type_check                     shift and go to state 225

state 191

    (68) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 226
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 192

    (69) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 227
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 193

    (67) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 194

    (66) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 195

    (70) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 230
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 196

    (65) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 197

    (73) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 198

    (74) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 233


state 199

    (75) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 234


state 200

    (71) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 201

    (72) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 236


state 202

    (42) while -> WHILE while_return LPAREN type_check . expression RPAREN LBRACE b2 RBRACE end_while
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    expression                     shift and go to state 237
    exp                            shift and go to state 85
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 203

    (76) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 76 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 204

    (77) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 77 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 205

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 238


state 206

    (58) funcs1 -> funcs1 COMMA . type ID
    (78) type -> . INT
    (79) type -> . FLOAT
    (80) type -> . STRING
    (81) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 239

state 207

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 240


state 208

    (103) expression1 -> LESSER relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 241

state 209

    (104) expression1 -> GREATER relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 242

state 210

    (105) expression1 -> EQUAL relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 243

state 211

    (106) expression1 -> NOTEQUAL relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 244

state 212

    (107) expression1 -> GREATEROREQUAL relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 245

state 213

    (108) expression1 -> LESSEROREQUAL relop exp . top_relop
    (111) top_relop -> .

    COMMA           reduce using rule 111 (top_relop -> .)
    SEMICOLON       reduce using rule 111 (top_relop -> .)
    RPAREN          reduce using rule 111 (top_relop -> .)

    top_relop                      shift and go to state 246

state 214

    (113) exp1 -> MINUS push_sign . exp
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 247
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 215

    (114) exp1 -> PLUS push_sign . exp
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 248
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 216

    (126) term1 -> DIVIDE push_sign . term
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    term                           shift and go to state 249
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 217

    (127) term1 -> TIMES push_sign . term
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    term                           shift and go to state 250
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 218

    (119) factor -> LPAREN false_bottom expression RPAREN . end_par
    (123) end_par -> .

    DIVIDE          reduce using rule 123 (end_par -> .)
    TIMES           reduce using rule 123 (end_par -> .)
    MINUS           reduce using rule 123 (end_par -> .)
    PLUS            reduce using rule 123 (end_par -> .)
    LESSER          reduce using rule 123 (end_par -> .)
    GREATER         reduce using rule 123 (end_par -> .)
    EQUAL           reduce using rule 123 (end_par -> .)
    NOTEQUAL        reduce using rule 123 (end_par -> .)
    GREATEROREQUAL  reduce using rule 123 (end_par -> .)
    LESSEROREQUAL   reduce using rule 123 (end_par -> .)
    COMMA           reduce using rule 123 (end_par -> .)
    SEMICOLON       reduce using rule 123 (end_par -> .)
    RPAREN          reduce using rule 123 (end_par -> .)
    RBRACKET        reduce using rule 123 (end_par -> .)

    end_par                        shift and go to state 251

state 219

    (46) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 252


state 220

    (133) call1 -> ID . COMMA call1
    (121) factor -> ID . push_id
    (82) var_cte -> ID . getidvalue
    (86) var_cte -> ID . list getarrayvalue
    (129) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (124) push_id -> .
    (88) getidvalue -> .
    (24) list -> . LIST
    (130) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 88 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 88 (getidvalue -> .)
    COMMA           shift and go to state 253
    DIVIDE          reduce using rule 88 (getidvalue -> .)
    TIMES           reduce using rule 88 (getidvalue -> .)
    MINUS           reduce using rule 88 (getidvalue -> .)
    PLUS            reduce using rule 88 (getidvalue -> .)
    RPAREN          reduce using rule 88 (getidvalue -> .)
    LIST            shift and go to state 41
    LPAREN          reduce using rule 130 (check_name -> .)

  ! DIVIDE          [ reduce using rule 124 (push_id -> .) ]
  ! TIMES           [ reduce using rule 124 (push_id -> .) ]
  ! MINUS           [ reduce using rule 124 (push_id -> .) ]
  ! PLUS            [ reduce using rule 124 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 124 (push_id -> .) ]

    push_id                        shift and go to state 123
    getidvalue                     shift and go to state 124
    list                           shift and go to state 125
    check_name                     shift and go to state 101

state 221

    (129) call -> ID check_name LPAREN create_era call1 . RPAREN SEMICOLON gosub

    RPAREN          shift and go to state 254


state 222

    (134) call1 -> exp .

    RPAREN          reduce using rule 134 (call1 -> exp .)


state 223

    (135) call1 -> st_cte .

    RPAREN          reduce using rule 135 (call1 -> st_cte .)


state 224

    (55) st_cte -> cte_bool .
    (85) var_cte -> cte_bool . getvalue_b
    (91) getvalue_b -> .

  ! reduce/reduce conflict for RPAREN resolved using rule 55 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 55 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 91 (getvalue_b -> .)
    TIMES           reduce using rule 91 (getvalue_b -> .)
    MINUS           reduce using rule 91 (getvalue_b -> .)
    PLUS            reduce using rule 91 (getvalue_b -> .)

  ! RPAREN          [ reduce using rule 91 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 140

state 225

    (96) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 255


state 226

    (68) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 256


state 227

    (69) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 257


state 228

    (67) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 229

    (66) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 230

    (70) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 258


state 231

    (65) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 232

    (73) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 233

    (74) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 74 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 234

    (75) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 75 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 235

    (71) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 236

    (72) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 237

    (42) while -> WHILE while_return LPAREN type_check expression . RPAREN LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 259


state 238

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (60) funcs2 -> . funcs2 vars
    (61) funcs2 -> . funcs2 statute
    (62) funcs2 -> . empty
    (138) empty -> .

    RBRACE          reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)

    funcs2                         shift and go to state 260
    empty                          shift and go to state 261

state 239

    (58) funcs1 -> funcs1 COMMA type . ID

    ID              shift and go to state 262


state 240

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (60) funcs2 -> . funcs2 vars
    (61) funcs2 -> . funcs2 statute
    (62) funcs2 -> . empty
    (138) empty -> .

    RBRACE          reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)

    funcs2                         shift and go to state 263
    empty                          shift and go to state 261

state 241

    (103) expression1 -> LESSER relop exp top_relop .

    COMMA           reduce using rule 103 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 103 (expression1 -> LESSER relop exp top_relop .)
    RPAREN          reduce using rule 103 (expression1 -> LESSER relop exp top_relop .)


state 242

    (104) expression1 -> GREATER relop exp top_relop .

    COMMA           reduce using rule 104 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 104 (expression1 -> GREATER relop exp top_relop .)
    RPAREN          reduce using rule 104 (expression1 -> GREATER relop exp top_relop .)


state 243

    (105) expression1 -> EQUAL relop exp top_relop .

    COMMA           reduce using rule 105 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 105 (expression1 -> EQUAL relop exp top_relop .)
    RPAREN          reduce using rule 105 (expression1 -> EQUAL relop exp top_relop .)


state 244

    (106) expression1 -> NOTEQUAL relop exp top_relop .

    COMMA           reduce using rule 106 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 106 (expression1 -> NOTEQUAL relop exp top_relop .)
    RPAREN          reduce using rule 106 (expression1 -> NOTEQUAL relop exp top_relop .)


state 245

    (107) expression1 -> GREATEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 107 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 107 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 107 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 246

    (108) expression1 -> LESSEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 108 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 108 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 108 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 247

    (113) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 113 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 113 (exp1 -> MINUS push_sign exp .)


state 248

    (114) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 114 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 114 (exp1 -> PLUS push_sign exp .)


state 249

    (126) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 126 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 126 (term1 -> DIVIDE push_sign term .)


state 250

    (127) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 127 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 127 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 127 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 127 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 127 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 127 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 127 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 127 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 127 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 127 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 127 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 127 (term1 -> TIMES push_sign term .)


state 251

    (119) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 119 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 252

    (46) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (102) expression -> . exp expression1
    (112) exp -> . term top_exp exp1
    (125) term -> . factor top_factor term1
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 88
    ID              shift and go to state 83
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95

    exp                            shift and go to state 85
    expression                     shift and go to state 264
    term                           shift and go to state 86
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    cte_bool                       shift and go to state 92
    call                           shift and go to state 93

state 253

    (133) call1 -> ID COMMA . call1
    (133) call1 -> . ID COMMA call1
    (134) call1 -> . exp
    (135) call1 -> . st_cte
    (112) exp -> . term top_exp exp1
    (54) st_cte -> . STRING
    (55) st_cte -> . cte_bool
    (125) term -> . factor top_factor term1
    (94) cte_bool -> . TRUE
    (95) cte_bool -> . FALSE
    (119) factor -> . LPAREN false_bottom expression RPAREN end_par
    (120) factor -> . var_cte
    (121) factor -> . ID push_id
    (82) var_cte -> . ID getidvalue
    (83) var_cte -> . CTE_INT getvalue_i
    (84) var_cte -> . CTE_FLOAT getvalue_f
    (85) var_cte -> . cte_bool getvalue_b
    (86) var_cte -> . ID list getarrayvalue
    (87) var_cte -> . call getcallvalue
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 220
    STRING          shift and go to state 118
    TRUE            shift and go to state 94
    FALSE           shift and go to state 95
    LPAREN          shift and go to state 88
    CTE_INT         shift and go to state 90
    CTE_FLOAT       shift and go to state 91

    call1                          shift and go to state 265
    exp                            shift and go to state 222
    st_cte                         shift and go to state 223
    term                           shift and go to state 86
    cte_bool                       shift and go to state 224
    factor                         shift and go to state 87
    var_cte                        shift and go to state 89
    call                           shift and go to state 93

state 254

    (129) call -> ID check_name LPAREN create_era call1 RPAREN . SEMICOLON gosub

    SEMICOLON       shift and go to state 266


state 255

    (96) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (138) empty -> .

    RBRACE          reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)

    b2                             shift and go to state 267
    empty                          shift and go to state 34

state 256

    (68) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 257

    (69) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 269


state 258

    (70) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 270


state 259

    (42) while -> WHILE while_return LPAREN type_check expression RPAREN . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 271


state 260

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (60) funcs2 -> funcs2 . vars
    (61) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 272
    VAR             shift and go to state 12
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    vars                           shift and go to state 273
    statute                        shift and go to state 274
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 261

    (62) funcs2 -> empty .

    RBRACE          reduce using rule 62 (funcs2 -> empty .)
    VAR             reduce using rule 62 (funcs2 -> empty .)
    ID              reduce using rule 62 (funcs2 -> empty .)
    IF              reduce using rule 62 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 62 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 62 (funcs2 -> empty .)
    SQUARE          reduce using rule 62 (funcs2 -> empty .)
    CIRCLE          reduce using rule 62 (funcs2 -> empty .)
    POLIGON         reduce using rule 62 (funcs2 -> empty .)
    COLOR           reduce using rule 62 (funcs2 -> empty .)
    PENSIZE         reduce using rule 62 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 62 (funcs2 -> empty .)
    PENBACK         reduce using rule 62 (funcs2 -> empty .)
    ROTATE          reduce using rule 62 (funcs2 -> empty .)
    WHILE           reduce using rule 62 (funcs2 -> empty .)
    RETURN          reduce using rule 62 (funcs2 -> empty .)
    PENON           reduce using rule 62 (funcs2 -> empty .)
    PENOFF          reduce using rule 62 (funcs2 -> empty .)


state 262

    (58) funcs1 -> funcs1 COMMA type ID .

    RPAREN          reduce using rule 58 (funcs1 -> funcs1 COMMA type ID .)
    COMMA           reduce using rule 58 (funcs1 -> funcs1 COMMA type ID .)


state 263

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (60) funcs2 -> funcs2 . vars
    (61) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 275
    VAR             shift and go to state 12
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    vars                           shift and go to state 273
    statute                        shift and go to state 274
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 264

    (46) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 276


state 265

    (133) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 133 (call1 -> ID COMMA call1 .)


state 266

    (129) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON . gosub
    (132) gosub -> .

    ID              reduce using rule 132 (gosub -> .)
    IF              reduce using rule 132 (gosub -> .)
    TRIANGLE        reduce using rule 132 (gosub -> .)
    RECTANGLE       reduce using rule 132 (gosub -> .)
    SQUARE          reduce using rule 132 (gosub -> .)
    CIRCLE          reduce using rule 132 (gosub -> .)
    POLIGON         reduce using rule 132 (gosub -> .)
    COLOR           reduce using rule 132 (gosub -> .)
    PENSIZE         reduce using rule 132 (gosub -> .)
    PENFORWARD      reduce using rule 132 (gosub -> .)
    PENBACK         reduce using rule 132 (gosub -> .)
    ROTATE          reduce using rule 132 (gosub -> .)
    WHILE           reduce using rule 132 (gosub -> .)
    RETURN          reduce using rule 132 (gosub -> .)
    PENON           reduce using rule 132 (gosub -> .)
    PENOFF          reduce using rule 132 (gosub -> .)
    RBRACE          reduce using rule 132 (gosub -> .)
    DIVIDE          reduce using rule 132 (gosub -> .)
    TIMES           reduce using rule 132 (gosub -> .)
    MINUS           reduce using rule 132 (gosub -> .)
    PLUS            reduce using rule 132 (gosub -> .)
    LESSER          reduce using rule 132 (gosub -> .)
    GREATER         reduce using rule 132 (gosub -> .)
    EQUAL           reduce using rule 132 (gosub -> .)
    NOTEQUAL        reduce using rule 132 (gosub -> .)
    GREATEROREQUAL  reduce using rule 132 (gosub -> .)
    LESSEROREQUAL   reduce using rule 132 (gosub -> .)
    COMMA           reduce using rule 132 (gosub -> .)
    SEMICOLON       reduce using rule 132 (gosub -> .)
    RPAREN          reduce using rule 132 (gosub -> .)
    RBRACKET        reduce using rule 132 (gosub -> .)
    VAR             reduce using rule 132 (gosub -> .)

    gosub                          shift and go to state 277

state 267

    (96) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (13) b2 -> b2 . statute
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 278
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    statute                        shift and go to state 46
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 268

    (68) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 269

    (69) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 270

    (70) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 271

    (42) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE . b2 RBRACE end_while
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (138) empty -> .

    RBRACE          reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)

    b2                             shift and go to state 279
    empty                          shift and go to state 34

state 272

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (63) funcs3 -> . funcs
    (64) funcs3 -> . empty
    (56) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (57) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (138) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)

  ! FUNC            [ reduce using rule 138 (empty -> .) ]

    funcs3                         shift and go to state 280
    funcs                          shift and go to state 281
    empty                          shift and go to state 282

state 273

    (60) funcs2 -> funcs2 vars .

    RBRACE          reduce using rule 60 (funcs2 -> funcs2 vars .)
    VAR             reduce using rule 60 (funcs2 -> funcs2 vars .)
    ID              reduce using rule 60 (funcs2 -> funcs2 vars .)
    IF              reduce using rule 60 (funcs2 -> funcs2 vars .)
    TRIANGLE        reduce using rule 60 (funcs2 -> funcs2 vars .)
    RECTANGLE       reduce using rule 60 (funcs2 -> funcs2 vars .)
    SQUARE          reduce using rule 60 (funcs2 -> funcs2 vars .)
    CIRCLE          reduce using rule 60 (funcs2 -> funcs2 vars .)
    POLIGON         reduce using rule 60 (funcs2 -> funcs2 vars .)
    COLOR           reduce using rule 60 (funcs2 -> funcs2 vars .)
    PENSIZE         reduce using rule 60 (funcs2 -> funcs2 vars .)
    PENFORWARD      reduce using rule 60 (funcs2 -> funcs2 vars .)
    PENBACK         reduce using rule 60 (funcs2 -> funcs2 vars .)
    ROTATE          reduce using rule 60 (funcs2 -> funcs2 vars .)
    WHILE           reduce using rule 60 (funcs2 -> funcs2 vars .)
    RETURN          reduce using rule 60 (funcs2 -> funcs2 vars .)
    PENON           reduce using rule 60 (funcs2 -> funcs2 vars .)
    PENOFF          reduce using rule 60 (funcs2 -> funcs2 vars .)


state 274

    (61) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 61 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 61 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 61 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 61 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 61 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 61 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 61 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 61 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 61 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 61 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 61 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 61 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 61 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 61 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 61 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 61 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 61 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 61 (funcs2 -> funcs2 statute .)


state 275

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (63) funcs3 -> . funcs
    (64) funcs3 -> . empty
    (56) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (57) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (138) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    DAVINCI         reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)

  ! FUNC            [ reduce using rule 138 (empty -> .) ]

    funcs3                         shift and go to state 283
    funcs                          shift and go to state 281
    empty                          shift and go to state 282

state 276

    (46) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 46 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 277

    (129) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .

    ID              reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    IF              reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TRIANGLE        reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RECTANGLE       reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SQUARE          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    CIRCLE          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    POLIGON         reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COLOR           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENSIZE         reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENFORWARD      reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENBACK         reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    ROTATE          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    WHILE           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RETURN          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENON           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENOFF          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACE          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    DIVIDE          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TIMES           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    MINUS           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PLUS            reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSER          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATER         reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    EQUAL           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    NOTEQUAL        reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATEROREQUAL  reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSEROREQUAL   reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COMMA           reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SEMICOLON       reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RPAREN          reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACKET        reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    VAR             reduce using rule 129 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)


state 278

    (96) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (97) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (98) condition1 -> . empty
    (100) gotoElse -> .
    (138) empty -> .

    ELSE            reduce using rule 100 (gotoElse -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)
    RBRACE          reduce using rule 138 (empty -> .)
    VAR             reduce using rule 138 (empty -> .)

    condition1                     shift and go to state 284
    gotoElse                       shift and go to state 285
    empty                          shift and go to state 286

state 279

    (42) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 . RBRACE end_while
    (13) b2 -> b2 . statute
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 287
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    statute                        shift and go to state 46
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 280

    (56) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 56 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 56 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 56 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 281

    (63) funcs3 -> funcs .

    DAVINCI         reduce using rule 63 (funcs3 -> funcs .)
    FUNC            reduce using rule 63 (funcs3 -> funcs .)
    VAR             reduce using rule 63 (funcs3 -> funcs .)


state 282

    (64) funcs3 -> empty .

    DAVINCI         reduce using rule 64 (funcs3 -> empty .)
    FUNC            reduce using rule 64 (funcs3 -> empty .)
    VAR             reduce using rule 64 (funcs3 -> empty .)


state 283

    (57) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 57 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 57 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 57 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 284

    (96) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (101) end_if -> .

    ID              reduce using rule 101 (end_if -> .)
    IF              reduce using rule 101 (end_if -> .)
    TRIANGLE        reduce using rule 101 (end_if -> .)
    RECTANGLE       reduce using rule 101 (end_if -> .)
    SQUARE          reduce using rule 101 (end_if -> .)
    CIRCLE          reduce using rule 101 (end_if -> .)
    POLIGON         reduce using rule 101 (end_if -> .)
    COLOR           reduce using rule 101 (end_if -> .)
    PENSIZE         reduce using rule 101 (end_if -> .)
    PENFORWARD      reduce using rule 101 (end_if -> .)
    PENBACK         reduce using rule 101 (end_if -> .)
    ROTATE          reduce using rule 101 (end_if -> .)
    WHILE           reduce using rule 101 (end_if -> .)
    RETURN          reduce using rule 101 (end_if -> .)
    PENON           reduce using rule 101 (end_if -> .)
    PENOFF          reduce using rule 101 (end_if -> .)
    RBRACE          reduce using rule 101 (end_if -> .)
    VAR             reduce using rule 101 (end_if -> .)

    end_if                         shift and go to state 288

state 285

    (97) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 289


state 286

    (98) condition1 -> empty .

    ID              reduce using rule 98 (condition1 -> empty .)
    IF              reduce using rule 98 (condition1 -> empty .)
    TRIANGLE        reduce using rule 98 (condition1 -> empty .)
    RECTANGLE       reduce using rule 98 (condition1 -> empty .)
    SQUARE          reduce using rule 98 (condition1 -> empty .)
    CIRCLE          reduce using rule 98 (condition1 -> empty .)
    POLIGON         reduce using rule 98 (condition1 -> empty .)
    COLOR           reduce using rule 98 (condition1 -> empty .)
    PENSIZE         reduce using rule 98 (condition1 -> empty .)
    PENFORWARD      reduce using rule 98 (condition1 -> empty .)
    PENBACK         reduce using rule 98 (condition1 -> empty .)
    ROTATE          reduce using rule 98 (condition1 -> empty .)
    WHILE           reduce using rule 98 (condition1 -> empty .)
    RETURN          reduce using rule 98 (condition1 -> empty .)
    PENON           reduce using rule 98 (condition1 -> empty .)
    PENOFF          reduce using rule 98 (condition1 -> empty .)
    RBRACE          reduce using rule 98 (condition1 -> empty .)
    VAR             reduce using rule 98 (condition1 -> empty .)


state 287

    (42) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE . end_while
    (44) end_while -> .

    ID              reduce using rule 44 (end_while -> .)
    IF              reduce using rule 44 (end_while -> .)
    TRIANGLE        reduce using rule 44 (end_while -> .)
    RECTANGLE       reduce using rule 44 (end_while -> .)
    SQUARE          reduce using rule 44 (end_while -> .)
    CIRCLE          reduce using rule 44 (end_while -> .)
    POLIGON         reduce using rule 44 (end_while -> .)
    COLOR           reduce using rule 44 (end_while -> .)
    PENSIZE         reduce using rule 44 (end_while -> .)
    PENFORWARD      reduce using rule 44 (end_while -> .)
    PENBACK         reduce using rule 44 (end_while -> .)
    ROTATE          reduce using rule 44 (end_while -> .)
    WHILE           reduce using rule 44 (end_while -> .)
    RETURN          reduce using rule 44 (end_while -> .)
    PENON           reduce using rule 44 (end_while -> .)
    PENOFF          reduce using rule 44 (end_while -> .)
    RBRACE          reduce using rule 44 (end_while -> .)
    VAR             reduce using rule 44 (end_while -> .)

    end_while                      shift and go to state 290

state 288

    (96) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    VAR             reduce using rule 96 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 289

    (97) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 291


state 290

    (42) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .

    ID              reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    VAR             reduce using rule 42 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)


state 291

    (97) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (138) empty -> .

    RBRACE          reduce using rule 138 (empty -> .)
    ID              reduce using rule 138 (empty -> .)
    IF              reduce using rule 138 (empty -> .)
    TRIANGLE        reduce using rule 138 (empty -> .)
    RECTANGLE       reduce using rule 138 (empty -> .)
    SQUARE          reduce using rule 138 (empty -> .)
    CIRCLE          reduce using rule 138 (empty -> .)
    POLIGON         reduce using rule 138 (empty -> .)
    COLOR           reduce using rule 138 (empty -> .)
    PENSIZE         reduce using rule 138 (empty -> .)
    PENFORWARD      reduce using rule 138 (empty -> .)
    PENBACK         reduce using rule 138 (empty -> .)
    ROTATE          reduce using rule 138 (empty -> .)
    WHILE           reduce using rule 138 (empty -> .)
    RETURN          reduce using rule 138 (empty -> .)
    PENON           reduce using rule 138 (empty -> .)
    PENOFF          reduce using rule 138 (empty -> .)

    b2                             shift and go to state 292
    empty                          shift and go to state 34

state 292

    (97) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (13) b2 -> b2 . statute
    (25) statute -> . assignment
    (26) statute -> . call
    (27) statute -> . condition
    (28) statute -> . triangle
    (29) statute -> . rectangle
    (30) statute -> . square
    (31) statute -> . circle
    (32) statute -> . poligon
    (33) statute -> . color
    (34) statute -> . pensize
    (35) statute -> . penforward
    (36) statute -> . penback
    (37) statute -> . rotate
    (38) statute -> . while
    (39) statute -> . return
    (40) statute -> . penon
    (41) statute -> . penoff
    (45) assignment -> . ID ASSIGN expression SEMICOLON
    (46) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (129) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (96) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (68) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (69) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (67) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (66) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (70) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (73) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (74) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (75) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (71) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (42) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (136) return -> . RETURN var_cte SEMICOLON
    (137) return -> . RETURN st_cte SEMICOLON
    (76) penon -> . PENON LPAREN RPAREN SEMICOLON
    (77) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 293
    ID              shift and go to state 64
    IF              shift and go to state 65
    TRIANGLE        shift and go to state 66
    RECTANGLE       shift and go to state 67
    SQUARE          shift and go to state 68
    CIRCLE          shift and go to state 69
    POLIGON         shift and go to state 70
    COLOR           shift and go to state 71
    PENSIZE         shift and go to state 72
    PENFORWARD      shift and go to state 73
    PENBACK         shift and go to state 74
    ROTATE          shift and go to state 75
    WHILE           shift and go to state 76
    RETURN          shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79

    statute                        shift and go to state 46
    assignment                     shift and go to state 47
    call                           shift and go to state 48
    condition                      shift and go to state 49
    triangle                       shift and go to state 50
    rectangle                      shift and go to state 51
    square                         shift and go to state 52
    circle                         shift and go to state 53
    poligon                        shift and go to state 54
    color                          shift and go to state 55
    pensize                        shift and go to state 56
    penforward                     shift and go to state 57
    penback                        shift and go to state 58
    rotate                         shift and go to state 59
    while                          shift and go to state 60
    return                         shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63

state 293

    (97) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 97 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 272 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 275 resolved as shift
WARNING: reduce/reduce conflict in state 83 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 83
WARNING: reduce/reduce conflict in state 117 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 117
WARNING: reduce/reduce conflict in state 220 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 220
WARNING: reduce/reduce conflict in state 224 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 224
WARNING: Rule (push_id -> <empty>) is never reduced
