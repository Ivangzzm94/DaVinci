Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BLOCK
    CALL
    COLOR_CTE
    CONDITION
    EXP
    FACTOR
    NOT
    OR
    SIZE
    STATUTE
    TERM
    TYPE
    VAR_CTE

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 DAVINCI block
Rule 2     program1 -> funcs
Rule 3     program1 -> vars
Rule 4     program1 -> funcs vars
Rule 5     program1 -> vars funcs
Rule 6     program1 -> empty
Rule 7     block -> LBRACE b1 RBRACE
Rule 8     b1 -> vars b2
Rule 9     b1 -> b2
Rule 10    b2 -> statute
Rule 11    b2 -> statute b2
Rule 12    b2 -> empty
Rule 13    vars -> VAR vars2
Rule 14    vars2 -> type ID vars3 SEMICOLON vars2
Rule 15    vars2 -> type ID vars3 SEMICOLON
Rule 16    vars2 -> type assignment
Rule 17    vars2 -> type assignment vars2
Rule 18    vars3 -> COMMA ID vars3
Rule 19    vars3 -> list vars3
Rule 20    vars3 -> list COMMA ID vars3
Rule 21    vars3 -> empty
Rule 22    list -> LBRACKET exp RBRACKET
Rule 23    statute -> assignment
Rule 24    statute -> call
Rule 25    statute -> condition
Rule 26    statute -> triangle
Rule 27    statute -> rectangle
Rule 28    statute -> square
Rule 29    statute -> circle
Rule 30    statute -> poligon
Rule 31    statute -> color
Rule 32    statute -> pensize
Rule 33    statute -> penforward
Rule 34    statute -> penback
Rule 35    statute -> rotate
Rule 36    statute -> WHILE
Rule 37    statute -> return
Rule 38    statute -> penon
Rule 39    statute -> penoff
Rule 40    assignment -> ID ASSIGN expression SEMICOLON
Rule 41    assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 42    color_cte -> RED
Rule 43    color_cte -> BLUE
Rule 44    color_cte -> YELLOW
Rule 45    color_cte -> GREEN
Rule 46    color_cte -> PINK
Rule 47    color_cte -> PURPLE
Rule 48    st_cte -> STRING SEMICOLON
Rule 49    st_cte -> CTE_BOOL SEMICOLON
Rule 50    funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 51    funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 52    funcs1 -> COMMA type ID funcs1
Rule 53    funcs1 -> empty
Rule 54    funcs2 -> vars
Rule 55    funcs2 -> vars statute
Rule 56    funcs2 -> statute vars
Rule 57    funcs2 -> statute
Rule 58    funcs2 -> empty
Rule 59    funcs3 -> funcs
Rule 60    funcs3 -> empty
Rule 61    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 62    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 63    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 64    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 65    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 66    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 67    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 68    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 69    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 70    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 71    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 72    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 73    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 74    type -> INT
Rule 75    type -> FLOAT
Rule 76    type -> STRING
Rule 77    type -> BOOL
Rule 78    cte_bool -> TRUE
Rule 79    cte_bool -> FALSE
Rule 80    var_cte -> ID var_cte1
Rule 81    var_cte -> CTE_INT
Rule 82    var_cte -> CTE_FLOAT
Rule 83    var_cte -> call
Rule 84    var_cte1 -> LBRACKET exp RBRACKET
Rule 85    var_cte1 -> LPAREN exp RPAREN
Rule 86    var_cte1 -> empty
Rule 87    condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
Rule 88    condition1 -> ELSE block
Rule 89    condition1 -> empty
Rule 90    expression -> exp expression1 ID
Rule 91    expression1 -> expression2
Rule 92    expression2 -> LESSER
Rule 93    expression2 -> GREATER
Rule 94    expression2 -> EQUAL
Rule 95    expression2 -> NOTEQUAL
Rule 96    expression2 -> GREATEROREQUAL
Rule 97    expression2 -> LESSEROREQUAL
Rule 98    exp -> term exp1
Rule 99    exp1 -> MINUS term exp1
Rule 100   exp1 -> PLUS term exp1
Rule 101   exp1 -> empty
Rule 102   factor -> LPAREN EXPRESSION RPAREN
Rule 103   factor -> var_cte
Rule 104   factor -> factor1 var_cte
Rule 105   factor1 -> MINUS
Rule 106   factor1 -> PLUS
Rule 107   term -> DIVIDE
Rule 108   term -> TIMES
Rule 109   term -> factor
Rule 110   call -> ID LPAREN call1 RPAREN SEMICOLON
Rule 111   call1 -> ID COMMA call1
Rule 112   call1 -> exp
Rule 113   call1 -> ST_CTE
Rule 114   return -> RETURN var_cte SEMICOLON
Rule 115   return -> RETURN st_cte SEMICOLON
Rule 116   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 40 41
BLOCK                : 
BLUE                 : 43
BOOL                 : 77
CALL                 : 
CIRCLE               : 62
COLOR                : 61
COLOR_CTE            : 
COMMA                : 18 20 52 64 65 66 111
CONDITION            : 
CTE_BOOL             : 49
CTE_FLOAT            : 82
CTE_INT              : 81
CTE_STRING           : 68
DAVINCI              : 1
DIVIDE               : 107
ELSE                 : 88
EQUAL                : 94
EXP                  : 
EXPRESSION           : 87 102
FACTOR               : 
FALSE                : 79
FLOAT                : 75
GREATER              : 93
GREATEROREQUAL       : 96
GREEN                : 45
ID                   : 1 14 15 18 20 40 41 50 50 51 51 52 80 90 110 111
IF                   : 87
INT                  : 74
LBRACE               : 7 50 51
LBRACKET             : 22 41 84
LESSER               : 92
LESSEROREQUAL        : 97
LPAREN               : 50 51 61 62 63 64 65 66 67 68 69 70 71 72 73 85 87 102 110
MINUS                : 99 105
NOT                  : 
NOTEQUAL             : 95
OR                   : 
PENBACK              : 71
PENFORWARD           : 70
PENOFF               : 73
PENON                : 72
PENSIZE              : 69
PINK                 : 46
PLUS                 : 100 106
POLIGON              : 66
PROGRAM              : 1
PURPLE               : 47
RBRACE               : 7 50 51
RBRACKET             : 22 41 84
RECTANGLE            : 65
RED                  : 42
RETURN               : 114 115
ROTATE               : 67 68
RPAREN               : 50 51 61 62 63 64 65 66 67 68 69 70 71 72 73 85 87 102 110
SEMICOLON            : 1 14 15 40 41 48 49 61 62 63 64 65 66 67 68 69 70 71 72 73 87 110 114 115
SIZE                 : 
SQUARE               : 63
STATUTE              : 
STRING               : 48 76
ST_CTE               : 113
TERM                 : 
TIMES                : 108
TRIANGLE             : 64
TRUE                 : 78
TYPE                 : 
VAR                  : 13
VAR_CTE              : 
VOID                 : 51
WHILE                : 36
YELLOW               : 44
error                : 

Nonterminals, with rules where they appear

assignment           : 16 17 23
b1                   : 7
b2                   : 8 9 11
block                : 1 87 88
call                 : 24 83
call1                : 110 111
circle               : 29
color                : 31
color_cte            : 61
condition            : 25
condition1           : 87
cte_bool             : 
empty                : 6 12 21 53 58 60 86 89 101
exp                  : 22 41 62 63 64 64 65 65 66 66 67 69 70 71 84 85 90 112
exp1                 : 98 99 100
expression           : 40 41
expression1          : 90
expression2          : 91
factor               : 109
factor1              : 104
funcs                : 2 4 5 59
funcs1               : 50 51 52
funcs2               : 50 51
funcs3               : 50 51
list                 : 19 20
penback              : 34
penforward           : 33
penoff               : 39
penon                : 38
pensize              : 32
poligon              : 30
program              : 0
program1             : 1
rectangle            : 27
return               : 37
rotate               : 35
square               : 28
st_cte               : 115
statute              : 10 11 55 56 57
term                 : 98 99 100
triangle             : 26
type                 : 14 15 16 17 50 50 51 52
var_cte              : 103 104 114
var_cte1             : 80
vars                 : 3 4 5 8 54 55 56
vars2                : 13 14 17
vars3                : 14 15 18 19 20

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 DAVINCI block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 DAVINCI block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 DAVINCI block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 DAVINCI block
    (2) program1 -> . funcs
    (3) program1 -> . vars
    (4) program1 -> . funcs vars
    (5) program1 -> . vars funcs
    (6) program1 -> . empty
    (50) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (13) vars -> . VAR vars2
    (116) empty -> .
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    VOID            shift and go to state 10
    VAR             shift and go to state 11
    DAVINCI         reduce using rule 116 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    program1                       shift and go to state 5
    funcs                          shift and go to state 6
    vars                           shift and go to state 7
    empty                          shift and go to state 8
    type                           shift and go to state 9

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . DAVINCI block

    DAVINCI         shift and go to state 16


state 6

    (2) program1 -> funcs .
    (4) program1 -> funcs . vars
    (13) vars -> . VAR vars2

    DAVINCI         reduce using rule 2 (program1 -> funcs .)
    VAR             shift and go to state 11

    vars                           shift and go to state 17

state 7

    (3) program1 -> vars .
    (5) program1 -> vars . funcs
    (50) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    DAVINCI         reduce using rule 3 (program1 -> vars .)
    VOID            shift and go to state 10
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    funcs                          shift and go to state 18
    type                           shift and go to state 9

state 8

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)


state 9

    (50) funcs -> type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 19


state 10

    (51) funcs -> VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 20


state 11

    (13) vars -> VAR . vars2
    (14) vars2 -> . type ID vars3 SEMICOLON vars2
    (15) vars2 -> . type ID vars3 SEMICOLON
    (16) vars2 -> . type assignment
    (17) vars2 -> . type assignment vars2
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    vars2                          shift and go to state 21
    type                           shift and go to state 22

state 12

    (74) type -> INT .

    ID              reduce using rule 74 (type -> INT .)


state 13

    (75) type -> FLOAT .

    ID              reduce using rule 75 (type -> FLOAT .)


state 14

    (76) type -> STRING .

    ID              reduce using rule 76 (type -> STRING .)


state 15

    (77) type -> BOOL .

    ID              reduce using rule 77 (type -> BOOL .)


state 16

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI . block
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 23

state 17

    (4) program1 -> funcs vars .

    DAVINCI         reduce using rule 4 (program1 -> funcs vars .)


state 18

    (5) program1 -> vars funcs .

    DAVINCI         reduce using rule 5 (program1 -> vars funcs .)


state 19

    (50) funcs -> type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 25


state 20

    (51) funcs -> VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 26


state 21

    (13) vars -> VAR vars2 .

    VOID            reduce using rule 13 (vars -> VAR vars2 .)
    INT             reduce using rule 13 (vars -> VAR vars2 .)
    FLOAT           reduce using rule 13 (vars -> VAR vars2 .)
    STRING          reduce using rule 13 (vars -> VAR vars2 .)
    BOOL            reduce using rule 13 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 13 (vars -> VAR vars2 .)
    WHILE           reduce using rule 13 (vars -> VAR vars2 .)
    ID              reduce using rule 13 (vars -> VAR vars2 .)
    IF              reduce using rule 13 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 13 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 13 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 13 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 13 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 13 (vars -> VAR vars2 .)
    COLOR           reduce using rule 13 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 13 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 13 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 13 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 13 (vars -> VAR vars2 .)
    RETURN          reduce using rule 13 (vars -> VAR vars2 .)
    PENON           reduce using rule 13 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 13 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 13 (vars -> VAR vars2 .)


state 22

    (14) vars2 -> type . ID vars3 SEMICOLON vars2
    (15) vars2 -> type . ID vars3 SEMICOLON
    (16) vars2 -> type . assignment
    (17) vars2 -> type . assignment vars2
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    ID              shift and go to state 27

    assignment                     shift and go to state 28

state 23

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 DAVINCI block .)


state 24

    (7) block -> LBRACE . b1 RBRACE
    (8) b1 -> . vars b2
    (9) b1 -> . b2
    (13) vars -> . VAR vars2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (116) empty -> .
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 116 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    b1                             shift and go to state 29
    vars                           shift and go to state 30
    b2                             shift and go to state 31
    statute                        shift and go to state 32
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 25

    (50) funcs -> type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 66

state 26

    (51) funcs -> VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 67

state 27

    (14) vars2 -> type ID . vars3 SEMICOLON vars2
    (15) vars2 -> type ID . vars3 SEMICOLON
    (40) assignment -> ID . ASSIGN expression SEMICOLON
    (41) assignment -> ID . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (18) vars3 -> . COMMA ID vars3
    (19) vars3 -> . list vars3
    (20) vars3 -> . list COMMA ID vars3
    (21) vars3 -> . empty
    (22) list -> . LBRACKET exp RBRACKET
    (116) empty -> .

    ASSIGN          shift and go to state 69
    LBRACKET        shift and go to state 70
    COMMA           shift and go to state 71
    SEMICOLON       reduce using rule 116 (empty -> .)

    vars3                          shift and go to state 68
    list                           shift and go to state 72
    empty                          shift and go to state 73

state 28

    (16) vars2 -> type assignment .
    (17) vars2 -> type assignment . vars2
    (14) vars2 -> . type ID vars3 SEMICOLON vars2
    (15) vars2 -> . type ID vars3 SEMICOLON
    (16) vars2 -> . type assignment
    (17) vars2 -> . type assignment vars2
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            reduce using rule 16 (vars2 -> type assignment .)
    DAVINCI         reduce using rule 16 (vars2 -> type assignment .)
    WHILE           reduce using rule 16 (vars2 -> type assignment .)
    ID              reduce using rule 16 (vars2 -> type assignment .)
    IF              reduce using rule 16 (vars2 -> type assignment .)
    TRIANGLE        reduce using rule 16 (vars2 -> type assignment .)
    RECTANGLE       reduce using rule 16 (vars2 -> type assignment .)
    SQUARE          reduce using rule 16 (vars2 -> type assignment .)
    CIRCLE          reduce using rule 16 (vars2 -> type assignment .)
    POLIGON         reduce using rule 16 (vars2 -> type assignment .)
    COLOR           reduce using rule 16 (vars2 -> type assignment .)
    PENSIZE         reduce using rule 16 (vars2 -> type assignment .)
    PENFORWARD      reduce using rule 16 (vars2 -> type assignment .)
    PENBACK         reduce using rule 16 (vars2 -> type assignment .)
    ROTATE          reduce using rule 16 (vars2 -> type assignment .)
    RETURN          reduce using rule 16 (vars2 -> type assignment .)
    PENON           reduce using rule 16 (vars2 -> type assignment .)
    PENOFF          reduce using rule 16 (vars2 -> type assignment .)
    RBRACE          reduce using rule 16 (vars2 -> type assignment .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

  ! INT             [ reduce using rule 16 (vars2 -> type assignment .) ]
  ! FLOAT           [ reduce using rule 16 (vars2 -> type assignment .) ]
  ! STRING          [ reduce using rule 16 (vars2 -> type assignment .) ]
  ! BOOL            [ reduce using rule 16 (vars2 -> type assignment .) ]

    type                           shift and go to state 22
    vars2                          shift and go to state 74

state 29

    (7) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 75


state 30

    (8) b1 -> vars . b2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (116) empty -> .
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    WHILE           shift and go to state 47
    RBRACE          reduce using rule 116 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    b2                             shift and go to state 76
    statute                        shift and go to state 32
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 31

    (9) b1 -> b2 .

    RBRACE          reduce using rule 9 (b1 -> b2 .)


state 32

    (10) b2 -> statute .
    (11) b2 -> statute . b2
    (10) b2 -> . statute
    (11) b2 -> . statute b2
    (12) b2 -> . empty
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (116) empty -> .
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

  ! reduce/reduce conflict for RBRACE resolved using rule 10 (b2 -> statute .)
    RBRACE          reduce using rule 10 (b2 -> statute .)
    WHILE           shift and go to state 47
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

  ! RBRACE          [ reduce using rule 116 (empty -> .) ]

    statute                        shift and go to state 32
    b2                             shift and go to state 77
    empty                          shift and go to state 33
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 33

    (12) b2 -> empty .

    RBRACE          reduce using rule 12 (b2 -> empty .)


state 34

    (23) statute -> assignment .

    WHILE           reduce using rule 23 (statute -> assignment .)
    ID              reduce using rule 23 (statute -> assignment .)
    IF              reduce using rule 23 (statute -> assignment .)
    TRIANGLE        reduce using rule 23 (statute -> assignment .)
    RECTANGLE       reduce using rule 23 (statute -> assignment .)
    SQUARE          reduce using rule 23 (statute -> assignment .)
    CIRCLE          reduce using rule 23 (statute -> assignment .)
    POLIGON         reduce using rule 23 (statute -> assignment .)
    COLOR           reduce using rule 23 (statute -> assignment .)
    PENSIZE         reduce using rule 23 (statute -> assignment .)
    PENFORWARD      reduce using rule 23 (statute -> assignment .)
    PENBACK         reduce using rule 23 (statute -> assignment .)
    ROTATE          reduce using rule 23 (statute -> assignment .)
    RETURN          reduce using rule 23 (statute -> assignment .)
    PENON           reduce using rule 23 (statute -> assignment .)
    PENOFF          reduce using rule 23 (statute -> assignment .)
    RBRACE          reduce using rule 23 (statute -> assignment .)
    VAR             reduce using rule 23 (statute -> assignment .)


state 35

    (24) statute -> call .

    WHILE           reduce using rule 24 (statute -> call .)
    ID              reduce using rule 24 (statute -> call .)
    IF              reduce using rule 24 (statute -> call .)
    TRIANGLE        reduce using rule 24 (statute -> call .)
    RECTANGLE       reduce using rule 24 (statute -> call .)
    SQUARE          reduce using rule 24 (statute -> call .)
    CIRCLE          reduce using rule 24 (statute -> call .)
    POLIGON         reduce using rule 24 (statute -> call .)
    COLOR           reduce using rule 24 (statute -> call .)
    PENSIZE         reduce using rule 24 (statute -> call .)
    PENFORWARD      reduce using rule 24 (statute -> call .)
    PENBACK         reduce using rule 24 (statute -> call .)
    ROTATE          reduce using rule 24 (statute -> call .)
    RETURN          reduce using rule 24 (statute -> call .)
    PENON           reduce using rule 24 (statute -> call .)
    PENOFF          reduce using rule 24 (statute -> call .)
    RBRACE          reduce using rule 24 (statute -> call .)
    VAR             reduce using rule 24 (statute -> call .)


state 36

    (25) statute -> condition .

    WHILE           reduce using rule 25 (statute -> condition .)
    ID              reduce using rule 25 (statute -> condition .)
    IF              reduce using rule 25 (statute -> condition .)
    TRIANGLE        reduce using rule 25 (statute -> condition .)
    RECTANGLE       reduce using rule 25 (statute -> condition .)
    SQUARE          reduce using rule 25 (statute -> condition .)
    CIRCLE          reduce using rule 25 (statute -> condition .)
    POLIGON         reduce using rule 25 (statute -> condition .)
    COLOR           reduce using rule 25 (statute -> condition .)
    PENSIZE         reduce using rule 25 (statute -> condition .)
    PENFORWARD      reduce using rule 25 (statute -> condition .)
    PENBACK         reduce using rule 25 (statute -> condition .)
    ROTATE          reduce using rule 25 (statute -> condition .)
    RETURN          reduce using rule 25 (statute -> condition .)
    PENON           reduce using rule 25 (statute -> condition .)
    PENOFF          reduce using rule 25 (statute -> condition .)
    RBRACE          reduce using rule 25 (statute -> condition .)
    VAR             reduce using rule 25 (statute -> condition .)


state 37

    (26) statute -> triangle .

    WHILE           reduce using rule 26 (statute -> triangle .)
    ID              reduce using rule 26 (statute -> triangle .)
    IF              reduce using rule 26 (statute -> triangle .)
    TRIANGLE        reduce using rule 26 (statute -> triangle .)
    RECTANGLE       reduce using rule 26 (statute -> triangle .)
    SQUARE          reduce using rule 26 (statute -> triangle .)
    CIRCLE          reduce using rule 26 (statute -> triangle .)
    POLIGON         reduce using rule 26 (statute -> triangle .)
    COLOR           reduce using rule 26 (statute -> triangle .)
    PENSIZE         reduce using rule 26 (statute -> triangle .)
    PENFORWARD      reduce using rule 26 (statute -> triangle .)
    PENBACK         reduce using rule 26 (statute -> triangle .)
    ROTATE          reduce using rule 26 (statute -> triangle .)
    RETURN          reduce using rule 26 (statute -> triangle .)
    PENON           reduce using rule 26 (statute -> triangle .)
    PENOFF          reduce using rule 26 (statute -> triangle .)
    RBRACE          reduce using rule 26 (statute -> triangle .)
    VAR             reduce using rule 26 (statute -> triangle .)


state 38

    (27) statute -> rectangle .

    WHILE           reduce using rule 27 (statute -> rectangle .)
    ID              reduce using rule 27 (statute -> rectangle .)
    IF              reduce using rule 27 (statute -> rectangle .)
    TRIANGLE        reduce using rule 27 (statute -> rectangle .)
    RECTANGLE       reduce using rule 27 (statute -> rectangle .)
    SQUARE          reduce using rule 27 (statute -> rectangle .)
    CIRCLE          reduce using rule 27 (statute -> rectangle .)
    POLIGON         reduce using rule 27 (statute -> rectangle .)
    COLOR           reduce using rule 27 (statute -> rectangle .)
    PENSIZE         reduce using rule 27 (statute -> rectangle .)
    PENFORWARD      reduce using rule 27 (statute -> rectangle .)
    PENBACK         reduce using rule 27 (statute -> rectangle .)
    ROTATE          reduce using rule 27 (statute -> rectangle .)
    RETURN          reduce using rule 27 (statute -> rectangle .)
    PENON           reduce using rule 27 (statute -> rectangle .)
    PENOFF          reduce using rule 27 (statute -> rectangle .)
    RBRACE          reduce using rule 27 (statute -> rectangle .)
    VAR             reduce using rule 27 (statute -> rectangle .)


state 39

    (28) statute -> square .

    WHILE           reduce using rule 28 (statute -> square .)
    ID              reduce using rule 28 (statute -> square .)
    IF              reduce using rule 28 (statute -> square .)
    TRIANGLE        reduce using rule 28 (statute -> square .)
    RECTANGLE       reduce using rule 28 (statute -> square .)
    SQUARE          reduce using rule 28 (statute -> square .)
    CIRCLE          reduce using rule 28 (statute -> square .)
    POLIGON         reduce using rule 28 (statute -> square .)
    COLOR           reduce using rule 28 (statute -> square .)
    PENSIZE         reduce using rule 28 (statute -> square .)
    PENFORWARD      reduce using rule 28 (statute -> square .)
    PENBACK         reduce using rule 28 (statute -> square .)
    ROTATE          reduce using rule 28 (statute -> square .)
    RETURN          reduce using rule 28 (statute -> square .)
    PENON           reduce using rule 28 (statute -> square .)
    PENOFF          reduce using rule 28 (statute -> square .)
    RBRACE          reduce using rule 28 (statute -> square .)
    VAR             reduce using rule 28 (statute -> square .)


state 40

    (29) statute -> circle .

    WHILE           reduce using rule 29 (statute -> circle .)
    ID              reduce using rule 29 (statute -> circle .)
    IF              reduce using rule 29 (statute -> circle .)
    TRIANGLE        reduce using rule 29 (statute -> circle .)
    RECTANGLE       reduce using rule 29 (statute -> circle .)
    SQUARE          reduce using rule 29 (statute -> circle .)
    CIRCLE          reduce using rule 29 (statute -> circle .)
    POLIGON         reduce using rule 29 (statute -> circle .)
    COLOR           reduce using rule 29 (statute -> circle .)
    PENSIZE         reduce using rule 29 (statute -> circle .)
    PENFORWARD      reduce using rule 29 (statute -> circle .)
    PENBACK         reduce using rule 29 (statute -> circle .)
    ROTATE          reduce using rule 29 (statute -> circle .)
    RETURN          reduce using rule 29 (statute -> circle .)
    PENON           reduce using rule 29 (statute -> circle .)
    PENOFF          reduce using rule 29 (statute -> circle .)
    RBRACE          reduce using rule 29 (statute -> circle .)
    VAR             reduce using rule 29 (statute -> circle .)


state 41

    (30) statute -> poligon .

    WHILE           reduce using rule 30 (statute -> poligon .)
    ID              reduce using rule 30 (statute -> poligon .)
    IF              reduce using rule 30 (statute -> poligon .)
    TRIANGLE        reduce using rule 30 (statute -> poligon .)
    RECTANGLE       reduce using rule 30 (statute -> poligon .)
    SQUARE          reduce using rule 30 (statute -> poligon .)
    CIRCLE          reduce using rule 30 (statute -> poligon .)
    POLIGON         reduce using rule 30 (statute -> poligon .)
    COLOR           reduce using rule 30 (statute -> poligon .)
    PENSIZE         reduce using rule 30 (statute -> poligon .)
    PENFORWARD      reduce using rule 30 (statute -> poligon .)
    PENBACK         reduce using rule 30 (statute -> poligon .)
    ROTATE          reduce using rule 30 (statute -> poligon .)
    RETURN          reduce using rule 30 (statute -> poligon .)
    PENON           reduce using rule 30 (statute -> poligon .)
    PENOFF          reduce using rule 30 (statute -> poligon .)
    RBRACE          reduce using rule 30 (statute -> poligon .)
    VAR             reduce using rule 30 (statute -> poligon .)


state 42

    (31) statute -> color .

    WHILE           reduce using rule 31 (statute -> color .)
    ID              reduce using rule 31 (statute -> color .)
    IF              reduce using rule 31 (statute -> color .)
    TRIANGLE        reduce using rule 31 (statute -> color .)
    RECTANGLE       reduce using rule 31 (statute -> color .)
    SQUARE          reduce using rule 31 (statute -> color .)
    CIRCLE          reduce using rule 31 (statute -> color .)
    POLIGON         reduce using rule 31 (statute -> color .)
    COLOR           reduce using rule 31 (statute -> color .)
    PENSIZE         reduce using rule 31 (statute -> color .)
    PENFORWARD      reduce using rule 31 (statute -> color .)
    PENBACK         reduce using rule 31 (statute -> color .)
    ROTATE          reduce using rule 31 (statute -> color .)
    RETURN          reduce using rule 31 (statute -> color .)
    PENON           reduce using rule 31 (statute -> color .)
    PENOFF          reduce using rule 31 (statute -> color .)
    RBRACE          reduce using rule 31 (statute -> color .)
    VAR             reduce using rule 31 (statute -> color .)


state 43

    (32) statute -> pensize .

    WHILE           reduce using rule 32 (statute -> pensize .)
    ID              reduce using rule 32 (statute -> pensize .)
    IF              reduce using rule 32 (statute -> pensize .)
    TRIANGLE        reduce using rule 32 (statute -> pensize .)
    RECTANGLE       reduce using rule 32 (statute -> pensize .)
    SQUARE          reduce using rule 32 (statute -> pensize .)
    CIRCLE          reduce using rule 32 (statute -> pensize .)
    POLIGON         reduce using rule 32 (statute -> pensize .)
    COLOR           reduce using rule 32 (statute -> pensize .)
    PENSIZE         reduce using rule 32 (statute -> pensize .)
    PENFORWARD      reduce using rule 32 (statute -> pensize .)
    PENBACK         reduce using rule 32 (statute -> pensize .)
    ROTATE          reduce using rule 32 (statute -> pensize .)
    RETURN          reduce using rule 32 (statute -> pensize .)
    PENON           reduce using rule 32 (statute -> pensize .)
    PENOFF          reduce using rule 32 (statute -> pensize .)
    RBRACE          reduce using rule 32 (statute -> pensize .)
    VAR             reduce using rule 32 (statute -> pensize .)


state 44

    (33) statute -> penforward .

    WHILE           reduce using rule 33 (statute -> penforward .)
    ID              reduce using rule 33 (statute -> penforward .)
    IF              reduce using rule 33 (statute -> penforward .)
    TRIANGLE        reduce using rule 33 (statute -> penforward .)
    RECTANGLE       reduce using rule 33 (statute -> penforward .)
    SQUARE          reduce using rule 33 (statute -> penforward .)
    CIRCLE          reduce using rule 33 (statute -> penforward .)
    POLIGON         reduce using rule 33 (statute -> penforward .)
    COLOR           reduce using rule 33 (statute -> penforward .)
    PENSIZE         reduce using rule 33 (statute -> penforward .)
    PENFORWARD      reduce using rule 33 (statute -> penforward .)
    PENBACK         reduce using rule 33 (statute -> penforward .)
    ROTATE          reduce using rule 33 (statute -> penforward .)
    RETURN          reduce using rule 33 (statute -> penforward .)
    PENON           reduce using rule 33 (statute -> penforward .)
    PENOFF          reduce using rule 33 (statute -> penforward .)
    RBRACE          reduce using rule 33 (statute -> penforward .)
    VAR             reduce using rule 33 (statute -> penforward .)


state 45

    (34) statute -> penback .

    WHILE           reduce using rule 34 (statute -> penback .)
    ID              reduce using rule 34 (statute -> penback .)
    IF              reduce using rule 34 (statute -> penback .)
    TRIANGLE        reduce using rule 34 (statute -> penback .)
    RECTANGLE       reduce using rule 34 (statute -> penback .)
    SQUARE          reduce using rule 34 (statute -> penback .)
    CIRCLE          reduce using rule 34 (statute -> penback .)
    POLIGON         reduce using rule 34 (statute -> penback .)
    COLOR           reduce using rule 34 (statute -> penback .)
    PENSIZE         reduce using rule 34 (statute -> penback .)
    PENFORWARD      reduce using rule 34 (statute -> penback .)
    PENBACK         reduce using rule 34 (statute -> penback .)
    ROTATE          reduce using rule 34 (statute -> penback .)
    RETURN          reduce using rule 34 (statute -> penback .)
    PENON           reduce using rule 34 (statute -> penback .)
    PENOFF          reduce using rule 34 (statute -> penback .)
    RBRACE          reduce using rule 34 (statute -> penback .)
    VAR             reduce using rule 34 (statute -> penback .)


state 46

    (35) statute -> rotate .

    WHILE           reduce using rule 35 (statute -> rotate .)
    ID              reduce using rule 35 (statute -> rotate .)
    IF              reduce using rule 35 (statute -> rotate .)
    TRIANGLE        reduce using rule 35 (statute -> rotate .)
    RECTANGLE       reduce using rule 35 (statute -> rotate .)
    SQUARE          reduce using rule 35 (statute -> rotate .)
    CIRCLE          reduce using rule 35 (statute -> rotate .)
    POLIGON         reduce using rule 35 (statute -> rotate .)
    COLOR           reduce using rule 35 (statute -> rotate .)
    PENSIZE         reduce using rule 35 (statute -> rotate .)
    PENFORWARD      reduce using rule 35 (statute -> rotate .)
    PENBACK         reduce using rule 35 (statute -> rotate .)
    ROTATE          reduce using rule 35 (statute -> rotate .)
    RETURN          reduce using rule 35 (statute -> rotate .)
    PENON           reduce using rule 35 (statute -> rotate .)
    PENOFF          reduce using rule 35 (statute -> rotate .)
    RBRACE          reduce using rule 35 (statute -> rotate .)
    VAR             reduce using rule 35 (statute -> rotate .)


state 47

    (36) statute -> WHILE .

    WHILE           reduce using rule 36 (statute -> WHILE .)
    ID              reduce using rule 36 (statute -> WHILE .)
    IF              reduce using rule 36 (statute -> WHILE .)
    TRIANGLE        reduce using rule 36 (statute -> WHILE .)
    RECTANGLE       reduce using rule 36 (statute -> WHILE .)
    SQUARE          reduce using rule 36 (statute -> WHILE .)
    CIRCLE          reduce using rule 36 (statute -> WHILE .)
    POLIGON         reduce using rule 36 (statute -> WHILE .)
    COLOR           reduce using rule 36 (statute -> WHILE .)
    PENSIZE         reduce using rule 36 (statute -> WHILE .)
    PENFORWARD      reduce using rule 36 (statute -> WHILE .)
    PENBACK         reduce using rule 36 (statute -> WHILE .)
    ROTATE          reduce using rule 36 (statute -> WHILE .)
    RETURN          reduce using rule 36 (statute -> WHILE .)
    PENON           reduce using rule 36 (statute -> WHILE .)
    PENOFF          reduce using rule 36 (statute -> WHILE .)
    RBRACE          reduce using rule 36 (statute -> WHILE .)
    VAR             reduce using rule 36 (statute -> WHILE .)


state 48

    (37) statute -> return .

    WHILE           reduce using rule 37 (statute -> return .)
    ID              reduce using rule 37 (statute -> return .)
    IF              reduce using rule 37 (statute -> return .)
    TRIANGLE        reduce using rule 37 (statute -> return .)
    RECTANGLE       reduce using rule 37 (statute -> return .)
    SQUARE          reduce using rule 37 (statute -> return .)
    CIRCLE          reduce using rule 37 (statute -> return .)
    POLIGON         reduce using rule 37 (statute -> return .)
    COLOR           reduce using rule 37 (statute -> return .)
    PENSIZE         reduce using rule 37 (statute -> return .)
    PENFORWARD      reduce using rule 37 (statute -> return .)
    PENBACK         reduce using rule 37 (statute -> return .)
    ROTATE          reduce using rule 37 (statute -> return .)
    RETURN          reduce using rule 37 (statute -> return .)
    PENON           reduce using rule 37 (statute -> return .)
    PENOFF          reduce using rule 37 (statute -> return .)
    RBRACE          reduce using rule 37 (statute -> return .)
    VAR             reduce using rule 37 (statute -> return .)


state 49

    (38) statute -> penon .

    WHILE           reduce using rule 38 (statute -> penon .)
    ID              reduce using rule 38 (statute -> penon .)
    IF              reduce using rule 38 (statute -> penon .)
    TRIANGLE        reduce using rule 38 (statute -> penon .)
    RECTANGLE       reduce using rule 38 (statute -> penon .)
    SQUARE          reduce using rule 38 (statute -> penon .)
    CIRCLE          reduce using rule 38 (statute -> penon .)
    POLIGON         reduce using rule 38 (statute -> penon .)
    COLOR           reduce using rule 38 (statute -> penon .)
    PENSIZE         reduce using rule 38 (statute -> penon .)
    PENFORWARD      reduce using rule 38 (statute -> penon .)
    PENBACK         reduce using rule 38 (statute -> penon .)
    ROTATE          reduce using rule 38 (statute -> penon .)
    RETURN          reduce using rule 38 (statute -> penon .)
    PENON           reduce using rule 38 (statute -> penon .)
    PENOFF          reduce using rule 38 (statute -> penon .)
    RBRACE          reduce using rule 38 (statute -> penon .)
    VAR             reduce using rule 38 (statute -> penon .)


state 50

    (39) statute -> penoff .

    WHILE           reduce using rule 39 (statute -> penoff .)
    ID              reduce using rule 39 (statute -> penoff .)
    IF              reduce using rule 39 (statute -> penoff .)
    TRIANGLE        reduce using rule 39 (statute -> penoff .)
    RECTANGLE       reduce using rule 39 (statute -> penoff .)
    SQUARE          reduce using rule 39 (statute -> penoff .)
    CIRCLE          reduce using rule 39 (statute -> penoff .)
    POLIGON         reduce using rule 39 (statute -> penoff .)
    COLOR           reduce using rule 39 (statute -> penoff .)
    PENSIZE         reduce using rule 39 (statute -> penoff .)
    PENFORWARD      reduce using rule 39 (statute -> penoff .)
    PENBACK         reduce using rule 39 (statute -> penoff .)
    ROTATE          reduce using rule 39 (statute -> penoff .)
    RETURN          reduce using rule 39 (statute -> penoff .)
    PENON           reduce using rule 39 (statute -> penoff .)
    PENOFF          reduce using rule 39 (statute -> penoff .)
    RBRACE          reduce using rule 39 (statute -> penoff .)
    VAR             reduce using rule 39 (statute -> penoff .)


state 51

    (40) assignment -> ID . ASSIGN expression SEMICOLON
    (41) assignment -> ID . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> ID . LPAREN call1 RPAREN SEMICOLON

    ASSIGN          shift and go to state 69
    LBRACKET        shift and go to state 78
    LPAREN          shift and go to state 79


state 52

    (87) condition -> IF . LPAREN EXPRESSION RPAREN block condition1 SEMICOLON

    LPAREN          shift and go to state 80


state 53

    (64) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 54

    (65) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 55

    (63) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 83


state 56

    (62) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 84


state 57

    (66) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 85


state 58

    (61) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 59

    (69) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 60

    (70) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 61

    (71) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 89


state 62

    (67) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (68) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 90


state 63

    (114) return -> RETURN . var_cte SEMICOLON
    (115) return -> RETURN . st_cte SEMICOLON
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (48) st_cte -> . STRING SEMICOLON
    (49) st_cte -> . CTE_BOOL SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    STRING          shift and go to state 97
    CTE_BOOL        shift and go to state 98

    var_cte                        shift and go to state 91
    st_cte                         shift and go to state 92
    call                           shift and go to state 96

state 64

    (72) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 65

    (73) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 66

    (50) funcs -> type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 101


state 67

    (51) funcs -> VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 102


state 68

    (14) vars2 -> type ID vars3 . SEMICOLON vars2
    (15) vars2 -> type ID vars3 . SEMICOLON

    SEMICOLON       shift and go to state 103


state 69

    (40) assignment -> ID ASSIGN . expression SEMICOLON
    (90) expression -> . exp expression1 ID
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    expression                     shift and go to state 104
    exp                            shift and go to state 105
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 70

    (41) assignment -> ID LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (22) list -> LBRACKET . exp RBRACKET
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 115
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 71

    (18) vars3 -> COMMA . ID vars3

    ID              shift and go to state 116


state 72

    (19) vars3 -> list . vars3
    (20) vars3 -> list . COMMA ID vars3
    (18) vars3 -> . COMMA ID vars3
    (19) vars3 -> . list vars3
    (20) vars3 -> . list COMMA ID vars3
    (21) vars3 -> . empty
    (22) list -> . LBRACKET exp RBRACKET
    (116) empty -> .

    COMMA           shift and go to state 118
    LBRACKET        shift and go to state 119
    SEMICOLON       reduce using rule 116 (empty -> .)

    list                           shift and go to state 72
    vars3                          shift and go to state 117
    empty                          shift and go to state 73

state 73

    (21) vars3 -> empty .

    SEMICOLON       reduce using rule 21 (vars3 -> empty .)


state 74

    (17) vars2 -> type assignment vars2 .

    VOID            reduce using rule 17 (vars2 -> type assignment vars2 .)
    INT             reduce using rule 17 (vars2 -> type assignment vars2 .)
    FLOAT           reduce using rule 17 (vars2 -> type assignment vars2 .)
    STRING          reduce using rule 17 (vars2 -> type assignment vars2 .)
    BOOL            reduce using rule 17 (vars2 -> type assignment vars2 .)
    DAVINCI         reduce using rule 17 (vars2 -> type assignment vars2 .)
    WHILE           reduce using rule 17 (vars2 -> type assignment vars2 .)
    ID              reduce using rule 17 (vars2 -> type assignment vars2 .)
    IF              reduce using rule 17 (vars2 -> type assignment vars2 .)
    TRIANGLE        reduce using rule 17 (vars2 -> type assignment vars2 .)
    RECTANGLE       reduce using rule 17 (vars2 -> type assignment vars2 .)
    SQUARE          reduce using rule 17 (vars2 -> type assignment vars2 .)
    CIRCLE          reduce using rule 17 (vars2 -> type assignment vars2 .)
    POLIGON         reduce using rule 17 (vars2 -> type assignment vars2 .)
    COLOR           reduce using rule 17 (vars2 -> type assignment vars2 .)
    PENSIZE         reduce using rule 17 (vars2 -> type assignment vars2 .)
    PENFORWARD      reduce using rule 17 (vars2 -> type assignment vars2 .)
    PENBACK         reduce using rule 17 (vars2 -> type assignment vars2 .)
    ROTATE          reduce using rule 17 (vars2 -> type assignment vars2 .)
    RETURN          reduce using rule 17 (vars2 -> type assignment vars2 .)
    PENON           reduce using rule 17 (vars2 -> type assignment vars2 .)
    PENOFF          reduce using rule 17 (vars2 -> type assignment vars2 .)
    RBRACE          reduce using rule 17 (vars2 -> type assignment vars2 .)


state 75

    (7) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 7 (block -> LBRACE b1 RBRACE .)
    ELSE            reduce using rule 7 (block -> LBRACE b1 RBRACE .)
    SEMICOLON       reduce using rule 7 (block -> LBRACE b1 RBRACE .)


state 76

    (8) b1 -> vars b2 .

    RBRACE          reduce using rule 8 (b1 -> vars b2 .)


state 77

    (11) b2 -> statute b2 .

    RBRACE          reduce using rule 11 (b2 -> statute b2 .)


state 78

    (41) assignment -> ID LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 120
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 79

    (110) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (111) call1 -> . ID COMMA call1
    (112) call1 -> . exp
    (113) call1 -> . ST_CTE
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 121
    ST_CTE          shift and go to state 124
    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    call1                          shift and go to state 122
    exp                            shift and go to state 123
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 80

    (87) condition -> IF LPAREN . EXPRESSION RPAREN block condition1 SEMICOLON

    EXPRESSION      shift and go to state 125


state 81

    (64) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 126
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 82

    (65) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 127
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 83

    (63) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 128
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 84

    (62) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 129
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 85

    (66) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 130
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 86

    (61) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (42) color_cte -> . RED
    (43) color_cte -> . BLUE
    (44) color_cte -> . YELLOW
    (45) color_cte -> . GREEN
    (46) color_cte -> . PINK
    (47) color_cte -> . PURPLE

    RED             shift and go to state 132
    BLUE            shift and go to state 133
    YELLOW          shift and go to state 134
    GREEN           shift and go to state 135
    PINK            shift and go to state 136
    PURPLE          shift and go to state 137

    color_cte                      shift and go to state 131

state 87

    (69) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 138
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 88

    (70) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 139
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 89

    (71) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 140
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 90

    (67) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (68) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    CTE_STRING      shift and go to state 142
    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 141
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 91

    (114) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 143


state 92

    (115) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 144


state 93

    (80) var_cte -> ID . var_cte1
    (110) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (84) var_cte1 -> . LBRACKET exp RBRACKET
    (85) var_cte1 -> . LPAREN exp RPAREN
    (86) var_cte1 -> . empty
    (116) empty -> .

    LPAREN          shift and go to state 146
    LBRACKET        shift and go to state 147
    SEMICOLON       reduce using rule 116 (empty -> .)
    MINUS           reduce using rule 116 (empty -> .)
    PLUS            reduce using rule 116 (empty -> .)
    LESSER          reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    EQUAL           reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEROREQUAL  reduce using rule 116 (empty -> .)
    LESSEROREQUAL   reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)

    var_cte1                       shift and go to state 145
    empty                          shift and go to state 148

state 94

    (81) var_cte -> CTE_INT .

    SEMICOLON       reduce using rule 81 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 81 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 81 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 81 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 81 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 81 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 81 (var_cte -> CTE_INT .)
    GREATEROREQUAL  reduce using rule 81 (var_cte -> CTE_INT .)
    LESSEROREQUAL   reduce using rule 81 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 81 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 81 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 81 (var_cte -> CTE_INT .)


state 95

    (82) var_cte -> CTE_FLOAT .

    SEMICOLON       reduce using rule 82 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 82 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 82 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 82 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 82 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 82 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 82 (var_cte -> CTE_FLOAT .)
    GREATEROREQUAL  reduce using rule 82 (var_cte -> CTE_FLOAT .)
    LESSEROREQUAL   reduce using rule 82 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 82 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 82 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 82 (var_cte -> CTE_FLOAT .)


state 96

    (83) var_cte -> call .

    SEMICOLON       reduce using rule 83 (var_cte -> call .)
    MINUS           reduce using rule 83 (var_cte -> call .)
    PLUS            reduce using rule 83 (var_cte -> call .)
    LESSER          reduce using rule 83 (var_cte -> call .)
    GREATER         reduce using rule 83 (var_cte -> call .)
    EQUAL           reduce using rule 83 (var_cte -> call .)
    NOTEQUAL        reduce using rule 83 (var_cte -> call .)
    GREATEROREQUAL  reduce using rule 83 (var_cte -> call .)
    LESSEROREQUAL   reduce using rule 83 (var_cte -> call .)
    RBRACKET        reduce using rule 83 (var_cte -> call .)
    RPAREN          reduce using rule 83 (var_cte -> call .)
    COMMA           reduce using rule 83 (var_cte -> call .)


state 97

    (48) st_cte -> STRING . SEMICOLON

    SEMICOLON       shift and go to state 149


state 98

    (49) st_cte -> CTE_BOOL . SEMICOLON

    SEMICOLON       shift and go to state 150


state 99

    (72) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 151


state 100

    (73) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 152


state 101

    (50) funcs -> type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs1 -> . COMMA type ID funcs1
    (53) funcs1 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 116 (empty -> .)

    funcs1                         shift and go to state 153
    empty                          shift and go to state 155

state 102

    (51) funcs -> VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs1 -> . COMMA type ID funcs1
    (53) funcs1 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 116 (empty -> .)

    funcs1                         shift and go to state 156
    empty                          shift and go to state 155

state 103

    (14) vars2 -> type ID vars3 SEMICOLON . vars2
    (15) vars2 -> type ID vars3 SEMICOLON .
    (14) vars2 -> . type ID vars3 SEMICOLON vars2
    (15) vars2 -> . type ID vars3 SEMICOLON
    (16) vars2 -> . type assignment
    (17) vars2 -> . type assignment vars2
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
    VOID            reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    DAVINCI         reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    WHILE           reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    ID              reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    IF              reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    TRIANGLE        reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    RECTANGLE       reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    SQUARE          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    CIRCLE          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    POLIGON         reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    COLOR           reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    PENSIZE         reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    PENFORWARD      reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    PENBACK         reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    ROTATE          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    RETURN          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    PENON           reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    PENOFF          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    RBRACE          reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

  ! INT             [ reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! FLOAT           [ reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! STRING          [ reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .) ]
  ! BOOL            [ reduce using rule 15 (vars2 -> type ID vars3 SEMICOLON .) ]

    type                           shift and go to state 22
    vars2                          shift and go to state 157

state 104

    (40) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 158


state 105

    (90) expression -> exp . expression1 ID
    (91) expression1 -> . expression2
    (92) expression2 -> . LESSER
    (93) expression2 -> . GREATER
    (94) expression2 -> . EQUAL
    (95) expression2 -> . NOTEQUAL
    (96) expression2 -> . GREATEROREQUAL
    (97) expression2 -> . LESSEROREQUAL

    LESSER          shift and go to state 161
    GREATER         shift and go to state 162
    EQUAL           shift and go to state 163
    NOTEQUAL        shift and go to state 164
    GREATEROREQUAL  shift and go to state 165
    LESSEROREQUAL   shift and go to state 166

    expression1                    shift and go to state 159
    expression2                    shift and go to state 160

state 106

    (98) exp -> term . exp1
    (99) exp1 -> . MINUS term exp1
    (100) exp1 -> . PLUS term exp1
    (101) exp1 -> . empty
    (116) empty -> .

    MINUS           shift and go to state 168
    PLUS            shift and go to state 169
    LESSER          reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    EQUAL           reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEROREQUAL  reduce using rule 116 (empty -> .)
    LESSEROREQUAL   reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 167
    empty                          shift and go to state 170

state 107

    (107) term -> DIVIDE .

    MINUS           reduce using rule 107 (term -> DIVIDE .)
    PLUS            reduce using rule 107 (term -> DIVIDE .)
    LESSER          reduce using rule 107 (term -> DIVIDE .)
    GREATER         reduce using rule 107 (term -> DIVIDE .)
    EQUAL           reduce using rule 107 (term -> DIVIDE .)
    NOTEQUAL        reduce using rule 107 (term -> DIVIDE .)
    GREATEROREQUAL  reduce using rule 107 (term -> DIVIDE .)
    LESSEROREQUAL   reduce using rule 107 (term -> DIVIDE .)
    RBRACKET        reduce using rule 107 (term -> DIVIDE .)
    RPAREN          reduce using rule 107 (term -> DIVIDE .)
    COMMA           reduce using rule 107 (term -> DIVIDE .)


state 108

    (108) term -> TIMES .

    MINUS           reduce using rule 108 (term -> TIMES .)
    PLUS            reduce using rule 108 (term -> TIMES .)
    LESSER          reduce using rule 108 (term -> TIMES .)
    GREATER         reduce using rule 108 (term -> TIMES .)
    EQUAL           reduce using rule 108 (term -> TIMES .)
    NOTEQUAL        reduce using rule 108 (term -> TIMES .)
    GREATEROREQUAL  reduce using rule 108 (term -> TIMES .)
    LESSEROREQUAL   reduce using rule 108 (term -> TIMES .)
    RBRACKET        reduce using rule 108 (term -> TIMES .)
    RPAREN          reduce using rule 108 (term -> TIMES .)
    COMMA           reduce using rule 108 (term -> TIMES .)


state 109

    (109) term -> factor .

    MINUS           reduce using rule 109 (term -> factor .)
    PLUS            reduce using rule 109 (term -> factor .)
    LESSER          reduce using rule 109 (term -> factor .)
    GREATER         reduce using rule 109 (term -> factor .)
    EQUAL           reduce using rule 109 (term -> factor .)
    NOTEQUAL        reduce using rule 109 (term -> factor .)
    GREATEROREQUAL  reduce using rule 109 (term -> factor .)
    LESSEROREQUAL   reduce using rule 109 (term -> factor .)
    RBRACKET        reduce using rule 109 (term -> factor .)
    RPAREN          reduce using rule 109 (term -> factor .)
    COMMA           reduce using rule 109 (term -> factor .)


state 110

    (102) factor -> LPAREN . EXPRESSION RPAREN

    EXPRESSION      shift and go to state 171


state 111

    (103) factor -> var_cte .

    MINUS           reduce using rule 103 (factor -> var_cte .)
    PLUS            reduce using rule 103 (factor -> var_cte .)
    LESSER          reduce using rule 103 (factor -> var_cte .)
    GREATER         reduce using rule 103 (factor -> var_cte .)
    EQUAL           reduce using rule 103 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 103 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 103 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 103 (factor -> var_cte .)
    RBRACKET        reduce using rule 103 (factor -> var_cte .)
    RPAREN          reduce using rule 103 (factor -> var_cte .)
    COMMA           reduce using rule 103 (factor -> var_cte .)


state 112

    (104) factor -> factor1 . var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95

    var_cte                        shift and go to state 172
    call                           shift and go to state 96

state 113

    (105) factor1 -> MINUS .

    ID              reduce using rule 105 (factor1 -> MINUS .)
    CTE_INT         reduce using rule 105 (factor1 -> MINUS .)
    CTE_FLOAT       reduce using rule 105 (factor1 -> MINUS .)


state 114

    (106) factor1 -> PLUS .

    ID              reduce using rule 106 (factor1 -> PLUS .)
    CTE_INT         reduce using rule 106 (factor1 -> PLUS .)
    CTE_FLOAT       reduce using rule 106 (factor1 -> PLUS .)


state 115

    (41) assignment -> ID LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON
    (22) list -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 173


state 116

    (18) vars3 -> COMMA ID . vars3
    (18) vars3 -> . COMMA ID vars3
    (19) vars3 -> . list vars3
    (20) vars3 -> . list COMMA ID vars3
    (21) vars3 -> . empty
    (22) list -> . LBRACKET exp RBRACKET
    (116) empty -> .

    COMMA           shift and go to state 71
    LBRACKET        shift and go to state 119
    SEMICOLON       reduce using rule 116 (empty -> .)

    vars3                          shift and go to state 174
    list                           shift and go to state 72
    empty                          shift and go to state 73

state 117

    (19) vars3 -> list vars3 .

    SEMICOLON       reduce using rule 19 (vars3 -> list vars3 .)


state 118

    (20) vars3 -> list COMMA . ID vars3
    (18) vars3 -> COMMA . ID vars3

    ID              shift and go to state 175


state 119

    (22) list -> LBRACKET . exp RBRACKET
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 176
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 120

    (41) assignment -> ID LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 177


state 121

    (111) call1 -> ID . COMMA call1
    (80) var_cte -> ID . var_cte1
    (110) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (84) var_cte1 -> . LBRACKET exp RBRACKET
    (85) var_cte1 -> . LPAREN exp RPAREN
    (86) var_cte1 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 178
    LPAREN          shift and go to state 146
    LBRACKET        shift and go to state 147
    MINUS           reduce using rule 116 (empty -> .)
    PLUS            reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)

    var_cte1                       shift and go to state 145
    empty                          shift and go to state 148

state 122

    (110) call -> ID LPAREN call1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 123

    (112) call1 -> exp .

    RPAREN          reduce using rule 112 (call1 -> exp .)


state 124

    (113) call1 -> ST_CTE .

    RPAREN          reduce using rule 113 (call1 -> ST_CTE .)


state 125

    (87) condition -> IF LPAREN EXPRESSION . RPAREN block condition1 SEMICOLON

    RPAREN          shift and go to state 180


state 126

    (64) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 127

    (65) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 182


state 128

    (63) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 129

    (62) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 130

    (66) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 185


state 131

    (61) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 132

    (42) color_cte -> RED .

    RPAREN          reduce using rule 42 (color_cte -> RED .)


state 133

    (43) color_cte -> BLUE .

    RPAREN          reduce using rule 43 (color_cte -> BLUE .)


state 134

    (44) color_cte -> YELLOW .

    RPAREN          reduce using rule 44 (color_cte -> YELLOW .)


state 135

    (45) color_cte -> GREEN .

    RPAREN          reduce using rule 45 (color_cte -> GREEN .)


state 136

    (46) color_cte -> PINK .

    RPAREN          reduce using rule 46 (color_cte -> PINK .)


state 137

    (47) color_cte -> PURPLE .

    RPAREN          reduce using rule 47 (color_cte -> PURPLE .)


state 138

    (69) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 139

    (70) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 188


state 140

    (71) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 189


state 141

    (67) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 142

    (68) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 143

    (114) return -> RETURN var_cte SEMICOLON .

    WHILE           reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    ID              reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 114 (return -> RETURN var_cte SEMICOLON .)


state 144

    (115) return -> RETURN st_cte SEMICOLON .

    WHILE           reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    ID              reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 115 (return -> RETURN st_cte SEMICOLON .)


state 145

    (80) var_cte -> ID var_cte1 .

    SEMICOLON       reduce using rule 80 (var_cte -> ID var_cte1 .)
    MINUS           reduce using rule 80 (var_cte -> ID var_cte1 .)
    PLUS            reduce using rule 80 (var_cte -> ID var_cte1 .)
    LESSER          reduce using rule 80 (var_cte -> ID var_cte1 .)
    GREATER         reduce using rule 80 (var_cte -> ID var_cte1 .)
    EQUAL           reduce using rule 80 (var_cte -> ID var_cte1 .)
    NOTEQUAL        reduce using rule 80 (var_cte -> ID var_cte1 .)
    GREATEROREQUAL  reduce using rule 80 (var_cte -> ID var_cte1 .)
    LESSEROREQUAL   reduce using rule 80 (var_cte -> ID var_cte1 .)
    RBRACKET        reduce using rule 80 (var_cte -> ID var_cte1 .)
    RPAREN          reduce using rule 80 (var_cte -> ID var_cte1 .)
    COMMA           reduce using rule 80 (var_cte -> ID var_cte1 .)


state 146

    (110) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (85) var_cte1 -> LPAREN . exp RPAREN
    (111) call1 -> . ID COMMA call1
    (112) call1 -> . exp
    (113) call1 -> . ST_CTE
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 121
    ST_CTE          shift and go to state 124
    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    call1                          shift and go to state 122
    exp                            shift and go to state 192
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 147

    (84) var_cte1 -> LBRACKET . exp RBRACKET
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 193
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 148

    (86) var_cte1 -> empty .

    SEMICOLON       reduce using rule 86 (var_cte1 -> empty .)
    MINUS           reduce using rule 86 (var_cte1 -> empty .)
    PLUS            reduce using rule 86 (var_cte1 -> empty .)
    LESSER          reduce using rule 86 (var_cte1 -> empty .)
    GREATER         reduce using rule 86 (var_cte1 -> empty .)
    EQUAL           reduce using rule 86 (var_cte1 -> empty .)
    NOTEQUAL        reduce using rule 86 (var_cte1 -> empty .)
    GREATEROREQUAL  reduce using rule 86 (var_cte1 -> empty .)
    LESSEROREQUAL   reduce using rule 86 (var_cte1 -> empty .)
    RBRACKET        reduce using rule 86 (var_cte1 -> empty .)
    COMMA           reduce using rule 86 (var_cte1 -> empty .)
    RPAREN          reduce using rule 86 (var_cte1 -> empty .)


state 149

    (48) st_cte -> STRING SEMICOLON .

    SEMICOLON       reduce using rule 48 (st_cte -> STRING SEMICOLON .)


state 150

    (49) st_cte -> CTE_BOOL SEMICOLON .

    SEMICOLON       reduce using rule 49 (st_cte -> CTE_BOOL SEMICOLON .)


state 151

    (72) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 194


state 152

    (73) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 195


state 153

    (50) funcs -> type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 196


state 154

    (52) funcs1 -> COMMA . type ID funcs1
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 197

state 155

    (53) funcs1 -> empty .

    RPAREN          reduce using rule 53 (funcs1 -> empty .)


state 156

    (51) funcs -> VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3

    RPAREN          shift and go to state 198


state 157

    (14) vars2 -> type ID vars3 SEMICOLON vars2 .

    VOID            reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    INT             reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    FLOAT           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    STRING          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    BOOL            reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    DAVINCI         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    ID              reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    IF              reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 14 (vars2 -> type ID vars3 SEMICOLON vars2 .)


state 158

    (40) assignment -> ID ASSIGN expression SEMICOLON .

    INT             reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    DAVINCI         reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    ID              reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 40 (assignment -> ID ASSIGN expression SEMICOLON .)


state 159

    (90) expression -> exp expression1 . ID

    ID              shift and go to state 199


state 160

    (91) expression1 -> expression2 .

    ID              reduce using rule 91 (expression1 -> expression2 .)


state 161

    (92) expression2 -> LESSER .

    ID              reduce using rule 92 (expression2 -> LESSER .)


state 162

    (93) expression2 -> GREATER .

    ID              reduce using rule 93 (expression2 -> GREATER .)


state 163

    (94) expression2 -> EQUAL .

    ID              reduce using rule 94 (expression2 -> EQUAL .)


state 164

    (95) expression2 -> NOTEQUAL .

    ID              reduce using rule 95 (expression2 -> NOTEQUAL .)


state 165

    (96) expression2 -> GREATEROREQUAL .

    ID              reduce using rule 96 (expression2 -> GREATEROREQUAL .)


state 166

    (97) expression2 -> LESSEROREQUAL .

    ID              reduce using rule 97 (expression2 -> LESSEROREQUAL .)


state 167

    (98) exp -> term exp1 .

    LESSER          reduce using rule 98 (exp -> term exp1 .)
    GREATER         reduce using rule 98 (exp -> term exp1 .)
    EQUAL           reduce using rule 98 (exp -> term exp1 .)
    NOTEQUAL        reduce using rule 98 (exp -> term exp1 .)
    GREATEROREQUAL  reduce using rule 98 (exp -> term exp1 .)
    LESSEROREQUAL   reduce using rule 98 (exp -> term exp1 .)
    RBRACKET        reduce using rule 98 (exp -> term exp1 .)
    RPAREN          reduce using rule 98 (exp -> term exp1 .)
    COMMA           reduce using rule 98 (exp -> term exp1 .)


state 168

    (99) exp1 -> MINUS . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    term                           shift and go to state 200
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 169

    (100) exp1 -> PLUS . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    term                           shift and go to state 201
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 170

    (101) exp1 -> empty .

    LESSER          reduce using rule 101 (exp1 -> empty .)
    GREATER         reduce using rule 101 (exp1 -> empty .)
    EQUAL           reduce using rule 101 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 101 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 101 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 101 (exp1 -> empty .)
    RBRACKET        reduce using rule 101 (exp1 -> empty .)
    RPAREN          reduce using rule 101 (exp1 -> empty .)
    COMMA           reduce using rule 101 (exp1 -> empty .)


state 171

    (102) factor -> LPAREN EXPRESSION . RPAREN

    RPAREN          shift and go to state 202


state 172

    (104) factor -> factor1 var_cte .

    MINUS           reduce using rule 104 (factor -> factor1 var_cte .)
    PLUS            reduce using rule 104 (factor -> factor1 var_cte .)
    LESSER          reduce using rule 104 (factor -> factor1 var_cte .)
    GREATER         reduce using rule 104 (factor -> factor1 var_cte .)
    EQUAL           reduce using rule 104 (factor -> factor1 var_cte .)
    NOTEQUAL        reduce using rule 104 (factor -> factor1 var_cte .)
    GREATEROREQUAL  reduce using rule 104 (factor -> factor1 var_cte .)
    LESSEROREQUAL   reduce using rule 104 (factor -> factor1 var_cte .)
    RBRACKET        reduce using rule 104 (factor -> factor1 var_cte .)
    RPAREN          reduce using rule 104 (factor -> factor1 var_cte .)
    COMMA           reduce using rule 104 (factor -> factor1 var_cte .)


state 173

    (41) assignment -> ID LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON
    (22) list -> LBRACKET exp RBRACKET .

    ASSIGN          shift and go to state 203
    COMMA           reduce using rule 22 (list -> LBRACKET exp RBRACKET .)
    LBRACKET        reduce using rule 22 (list -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 22 (list -> LBRACKET exp RBRACKET .)


state 174

    (18) vars3 -> COMMA ID vars3 .

    SEMICOLON       reduce using rule 18 (vars3 -> COMMA ID vars3 .)


state 175

    (20) vars3 -> list COMMA ID . vars3
    (18) vars3 -> COMMA ID . vars3
    (18) vars3 -> . COMMA ID vars3
    (19) vars3 -> . list vars3
    (20) vars3 -> . list COMMA ID vars3
    (21) vars3 -> . empty
    (22) list -> . LBRACKET exp RBRACKET
    (116) empty -> .

    COMMA           shift and go to state 71
    LBRACKET        shift and go to state 119
    SEMICOLON       reduce using rule 116 (empty -> .)

    list                           shift and go to state 72
    vars3                          shift and go to state 204
    empty                          shift and go to state 73

state 176

    (22) list -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 205


state 177

    (41) assignment -> ID LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 203


state 178

    (111) call1 -> ID COMMA . call1
    (111) call1 -> . ID COMMA call1
    (112) call1 -> . exp
    (113) call1 -> . ST_CTE
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 121
    ST_CTE          shift and go to state 124
    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    call1                          shift and go to state 206
    exp                            shift and go to state 123
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 179

    (110) call -> ID LPAREN call1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 180

    (87) condition -> IF LPAREN EXPRESSION RPAREN . block condition1 SEMICOLON
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 208

state 181

    (64) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 209
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 182

    (65) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 210
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 183

    (63) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 184

    (62) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 212


state 185

    (66) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 213
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 186

    (61) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 214


state 187

    (69) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 215


state 188

    (70) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 216


state 189

    (71) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 217


state 190

    (67) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 218


state 191

    (68) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 219


state 192

    (85) var_cte1 -> LPAREN exp . RPAREN
    (112) call1 -> exp .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 220

  ! RPAREN          [ reduce using rule 112 (call1 -> exp .) ]


state 193

    (84) var_cte1 -> LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 221


state 194

    (72) penon -> PENON LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 195

    (73) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    WHILE           reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ID              reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 196

    (50) funcs -> type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 222


state 197

    (52) funcs1 -> COMMA type . ID funcs1

    ID              shift and go to state 223


state 198

    (51) funcs -> VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 224


state 199

    (90) expression -> exp expression1 ID .

    SEMICOLON       reduce using rule 90 (expression -> exp expression1 ID .)


state 200

    (99) exp1 -> MINUS term . exp1
    (99) exp1 -> . MINUS term exp1
    (100) exp1 -> . PLUS term exp1
    (101) exp1 -> . empty
    (116) empty -> .

    MINUS           shift and go to state 168
    PLUS            shift and go to state 169
    LESSER          reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    EQUAL           reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEROREQUAL  reduce using rule 116 (empty -> .)
    LESSEROREQUAL   reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 225
    empty                          shift and go to state 170

state 201

    (100) exp1 -> PLUS term . exp1
    (99) exp1 -> . MINUS term exp1
    (100) exp1 -> . PLUS term exp1
    (101) exp1 -> . empty
    (116) empty -> .

    MINUS           shift and go to state 168
    PLUS            shift and go to state 169
    LESSER          reduce using rule 116 (empty -> .)
    GREATER         reduce using rule 116 (empty -> .)
    EQUAL           reduce using rule 116 (empty -> .)
    NOTEQUAL        reduce using rule 116 (empty -> .)
    GREATEROREQUAL  reduce using rule 116 (empty -> .)
    LESSEROREQUAL   reduce using rule 116 (empty -> .)
    RBRACKET        reduce using rule 116 (empty -> .)
    RPAREN          reduce using rule 116 (empty -> .)
    COMMA           reduce using rule 116 (empty -> .)

    exp1                           shift and go to state 226
    empty                          shift and go to state 170

state 202

    (102) factor -> LPAREN EXPRESSION RPAREN .

    MINUS           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    PLUS            reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    LESSER          reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    GREATER         reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    EQUAL           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    NOTEQUAL        reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    GREATEROREQUAL  reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    LESSEROREQUAL   reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    RBRACKET        reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    RPAREN          reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)
    COMMA           reduce using rule 102 (factor -> LPAREN EXPRESSION RPAREN .)


state 203

    (41) assignment -> ID LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (90) expression -> . exp expression1 ID
    (98) exp -> . term exp1
    (107) term -> . DIVIDE
    (108) term -> . TIMES
    (109) term -> . factor
    (102) factor -> . LPAREN EXPRESSION RPAREN
    (103) factor -> . var_cte
    (104) factor -> . factor1 var_cte
    (80) var_cte -> . ID var_cte1
    (81) var_cte -> . CTE_INT
    (82) var_cte -> . CTE_FLOAT
    (83) var_cte -> . call
    (105) factor1 -> . MINUS
    (106) factor1 -> . PLUS
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON

    DIVIDE          shift and go to state 107
    TIMES           shift and go to state 108
    LPAREN          shift and go to state 110
    ID              shift and go to state 93
    CTE_INT         shift and go to state 94
    CTE_FLOAT       shift and go to state 95
    MINUS           shift and go to state 113
    PLUS            shift and go to state 114

    exp                            shift and go to state 105
    expression                     shift and go to state 227
    term                           shift and go to state 106
    factor                         shift and go to state 109
    var_cte                        shift and go to state 111
    factor1                        shift and go to state 112
    call                           shift and go to state 96

state 204

    (20) vars3 -> list COMMA ID vars3 .
    (18) vars3 -> COMMA ID vars3 .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 18 (vars3 -> COMMA ID vars3 .)
    SEMICOLON       reduce using rule 18 (vars3 -> COMMA ID vars3 .)

  ! SEMICOLON       [ reduce using rule 20 (vars3 -> list COMMA ID vars3 .) ]


state 205

    (22) list -> LBRACKET exp RBRACKET .

    COMMA           reduce using rule 22 (list -> LBRACKET exp RBRACKET .)
    LBRACKET        reduce using rule 22 (list -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 22 (list -> LBRACKET exp RBRACKET .)


state 206

    (111) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 111 (call1 -> ID COMMA call1 .)


state 207

    (110) call -> ID LPAREN call1 RPAREN SEMICOLON .

    WHILE           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ID              reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    IF              reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SQUARE          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    POLIGON         reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COLOR           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENBACK         reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ROTATE          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENON           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENOFF          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    MINUS           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PLUS            reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSER          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATER         reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    EQUAL           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COMMA           reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    VAR             reduce using rule 110 (call -> ID LPAREN call1 RPAREN SEMICOLON .)


state 208

    (87) condition -> IF LPAREN EXPRESSION RPAREN block . condition1 SEMICOLON
    (88) condition1 -> . ELSE block
    (89) condition1 -> . empty
    (116) empty -> .

    ELSE            shift and go to state 229
    SEMICOLON       reduce using rule 116 (empty -> .)

    condition1                     shift and go to state 228
    empty                          shift and go to state 230

state 209

    (64) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 231


state 210

    (65) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 232


state 211

    (63) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 212

    (62) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 213

    (66) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 233


state 214

    (61) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    WHILE           reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ID              reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 215

    (69) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 216

    (70) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 217

    (71) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 218

    (67) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    WHILE           reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 219

    (68) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    WHILE           reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ID              reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 220

    (85) var_cte1 -> LPAREN exp RPAREN .

    SEMICOLON       reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    LESSER          reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    GREATER         reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    EQUAL           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    GREATEROREQUAL  reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    LESSEROREQUAL   reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 85 (var_cte1 -> LPAREN exp RPAREN .)


state 221

    (84) var_cte1 -> LBRACKET exp RBRACKET .

    SEMICOLON       reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    LESSER          reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    GREATER         reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    EQUAL           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    NOTEQUAL        reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    GREATEROREQUAL  reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    LESSEROREQUAL   reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 84 (var_cte1 -> LBRACKET exp RBRACKET .)


state 222

    (50) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (54) funcs2 -> . vars
    (55) funcs2 -> . vars statute
    (56) funcs2 -> . statute vars
    (57) funcs2 -> . statute
    (58) funcs2 -> . empty
    (13) vars -> . VAR vars2
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (116) empty -> .
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 116 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    funcs2                         shift and go to state 234
    vars                           shift and go to state 235
    statute                        shift and go to state 236
    empty                          shift and go to state 237
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 223

    (52) funcs1 -> COMMA type ID . funcs1
    (52) funcs1 -> . COMMA type ID funcs1
    (53) funcs1 -> . empty
    (116) empty -> .

    COMMA           shift and go to state 154
    RPAREN          reduce using rule 116 (empty -> .)

    funcs1                         shift and go to state 238
    empty                          shift and go to state 155

state 224

    (51) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (54) funcs2 -> . vars
    (55) funcs2 -> . vars statute
    (56) funcs2 -> . statute vars
    (57) funcs2 -> . statute
    (58) funcs2 -> . empty
    (13) vars -> . VAR vars2
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (116) empty -> .
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    VAR             shift and go to state 11
    WHILE           shift and go to state 47
    RBRACE          reduce using rule 116 (empty -> .)
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    funcs2                         shift and go to state 239
    vars                           shift and go to state 235
    statute                        shift and go to state 236
    empty                          shift and go to state 237
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 225

    (99) exp1 -> MINUS term exp1 .

    LESSER          reduce using rule 99 (exp1 -> MINUS term exp1 .)
    GREATER         reduce using rule 99 (exp1 -> MINUS term exp1 .)
    EQUAL           reduce using rule 99 (exp1 -> MINUS term exp1 .)
    NOTEQUAL        reduce using rule 99 (exp1 -> MINUS term exp1 .)
    GREATEROREQUAL  reduce using rule 99 (exp1 -> MINUS term exp1 .)
    LESSEROREQUAL   reduce using rule 99 (exp1 -> MINUS term exp1 .)
    RBRACKET        reduce using rule 99 (exp1 -> MINUS term exp1 .)
    RPAREN          reduce using rule 99 (exp1 -> MINUS term exp1 .)
    COMMA           reduce using rule 99 (exp1 -> MINUS term exp1 .)


state 226

    (100) exp1 -> PLUS term exp1 .

    LESSER          reduce using rule 100 (exp1 -> PLUS term exp1 .)
    GREATER         reduce using rule 100 (exp1 -> PLUS term exp1 .)
    EQUAL           reduce using rule 100 (exp1 -> PLUS term exp1 .)
    NOTEQUAL        reduce using rule 100 (exp1 -> PLUS term exp1 .)
    GREATEROREQUAL  reduce using rule 100 (exp1 -> PLUS term exp1 .)
    LESSEROREQUAL   reduce using rule 100 (exp1 -> PLUS term exp1 .)
    RBRACKET        reduce using rule 100 (exp1 -> PLUS term exp1 .)
    RPAREN          reduce using rule 100 (exp1 -> PLUS term exp1 .)
    COMMA           reduce using rule 100 (exp1 -> PLUS term exp1 .)


state 227

    (41) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 240


state 228

    (87) condition -> IF LPAREN EXPRESSION RPAREN block condition1 . SEMICOLON

    SEMICOLON       shift and go to state 241


state 229

    (88) condition1 -> ELSE . block
    (7) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 24

    block                          shift and go to state 242

state 230

    (89) condition1 -> empty .

    SEMICOLON       reduce using rule 89 (condition1 -> empty .)


state 231

    (64) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 243


state 232

    (65) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 244


state 233

    (66) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 245


state 234

    (50) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 246


state 235

    (54) funcs2 -> vars .
    (55) funcs2 -> vars . statute
    (23) statute -> . assignment
    (24) statute -> . call
    (25) statute -> . condition
    (26) statute -> . triangle
    (27) statute -> . rectangle
    (28) statute -> . square
    (29) statute -> . circle
    (30) statute -> . poligon
    (31) statute -> . color
    (32) statute -> . pensize
    (33) statute -> . penforward
    (34) statute -> . penback
    (35) statute -> . rotate
    (36) statute -> . WHILE
    (37) statute -> . return
    (38) statute -> . penon
    (39) statute -> . penoff
    (40) assignment -> . ID ASSIGN expression SEMICOLON
    (41) assignment -> . ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (110) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (87) condition -> . IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON
    (64) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (65) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (63) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (62) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (66) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (61) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (69) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (70) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (71) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (68) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (114) return -> . RETURN var_cte SEMICOLON
    (115) return -> . RETURN st_cte SEMICOLON
    (72) penon -> . PENON LPAREN RPAREN SEMICOLON
    (73) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 54 (funcs2 -> vars .)
    WHILE           shift and go to state 47
    ID              shift and go to state 51
    IF              shift and go to state 52
    TRIANGLE        shift and go to state 53
    RECTANGLE       shift and go to state 54
    SQUARE          shift and go to state 55
    CIRCLE          shift and go to state 56
    POLIGON         shift and go to state 57
    COLOR           shift and go to state 58
    PENSIZE         shift and go to state 59
    PENFORWARD      shift and go to state 60
    PENBACK         shift and go to state 61
    ROTATE          shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 247
    assignment                     shift and go to state 34
    call                           shift and go to state 35
    condition                      shift and go to state 36
    triangle                       shift and go to state 37
    rectangle                      shift and go to state 38
    square                         shift and go to state 39
    circle                         shift and go to state 40
    poligon                        shift and go to state 41
    color                          shift and go to state 42
    pensize                        shift and go to state 43
    penforward                     shift and go to state 44
    penback                        shift and go to state 45
    rotate                         shift and go to state 46
    return                         shift and go to state 48
    penon                          shift and go to state 49
    penoff                         shift and go to state 50

state 236

    (56) funcs2 -> statute . vars
    (57) funcs2 -> statute .
    (13) vars -> . VAR vars2

    RBRACE          reduce using rule 57 (funcs2 -> statute .)
    VAR             shift and go to state 11

    vars                           shift and go to state 248

state 237

    (58) funcs2 -> empty .

    RBRACE          reduce using rule 58 (funcs2 -> empty .)


state 238

    (52) funcs1 -> COMMA type ID funcs1 .

    RPAREN          reduce using rule 52 (funcs1 -> COMMA type ID funcs1 .)


state 239

    (51) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3

    RBRACE          shift and go to state 249


state 240

    (41) assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    INT             reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    FLOAT           reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    STRING          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    BOOL            reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VOID            reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    DAVINCI         reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ID              reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 41 (assignment -> ID LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 241

    (87) condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .

    WHILE           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    ID              reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    IF              reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    TRIANGLE        reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RECTANGLE       reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    SQUARE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    CIRCLE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    POLIGON         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    COLOR           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENSIZE         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENFORWARD      reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENBACK         reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    ROTATE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RETURN          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENON           reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    PENOFF          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    RBRACE          reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)
    VAR             reduce using rule 87 (condition -> IF LPAREN EXPRESSION RPAREN block condition1 SEMICOLON .)


state 242

    (88) condition1 -> ELSE block .

    SEMICOLON       reduce using rule 88 (condition1 -> ELSE block .)


state 243

    (64) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 244

    (65) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 245

    (66) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    WHILE           reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ID              reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 246

    (50) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (59) funcs3 -> . funcs
    (60) funcs3 -> . empty
    (50) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (116) empty -> .
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    VOID            shift and go to state 10
    VAR             reduce using rule 116 (empty -> .)
    DAVINCI         reduce using rule 116 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 9
    funcs3                         shift and go to state 250
    funcs                          shift and go to state 251
    empty                          shift and go to state 252

state 247

    (55) funcs2 -> vars statute .

    RBRACE          reduce using rule 55 (funcs2 -> vars statute .)


state 248

    (56) funcs2 -> statute vars .

    RBRACE          reduce using rule 56 (funcs2 -> statute vars .)


state 249

    (51) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (59) funcs3 -> . funcs
    (60) funcs3 -> . empty
    (50) funcs -> . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (51) funcs -> . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (116) empty -> .
    (74) type -> . INT
    (75) type -> . FLOAT
    (76) type -> . STRING
    (77) type -> . BOOL

    VOID            shift and go to state 10
    VAR             reduce using rule 116 (empty -> .)
    DAVINCI         reduce using rule 116 (empty -> .)
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    STRING          shift and go to state 14
    BOOL            shift and go to state 15

    type                           shift and go to state 9
    funcs3                         shift and go to state 253
    funcs                          shift and go to state 251
    empty                          shift and go to state 252

state 250

    (50) funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 50 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 50 (funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 251

    (59) funcs3 -> funcs .

    VAR             reduce using rule 59 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 59 (funcs3 -> funcs .)


state 252

    (60) funcs3 -> empty .

    VAR             reduce using rule 60 (funcs3 -> empty .)
    DAVINCI         reduce using rule 60 (funcs3 -> empty .)


state 253

    (51) funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    VAR             reduce using rule 51 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    DAVINCI         reduce using rule 51 (funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for INT in state 28 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 28 resolved as shift
WARNING: shift/reduce conflict for STRING in state 28 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 28 resolved as shift
WARNING: shift/reduce conflict for INT in state 103 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 103 resolved as shift
WARNING: shift/reduce conflict for STRING in state 103 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 103 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 192 resolved as shift
WARNING: reduce/reduce conflict in state 32 resolved using rule (b2 -> statute)
WARNING: rejected rule (empty -> <empty>) in state 32
WARNING: reduce/reduce conflict in state 204 resolved using rule (vars3 -> COMMA ID vars3)
WARNING: rejected rule (vars3 -> list COMMA ID vars3) in state 204
WARNING: Rule (vars3 -> list COMMA ID vars3) is never reduced
