Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block
Rule 2     fillmain -> <empty>
Rule 3     gotomain -> <empty>
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     getglobalmemory -> <empty>
Rule 8     save_funcs -> <empty>
Rule 9     global_vars -> <empty>
Rule 10    block -> LBRACE b1 RBRACE
Rule 11    b1 -> vars local_vars b2
Rule 12    b1 -> b2
Rule 13    local_vars -> <empty>
Rule 14    b2 -> b2 statute
Rule 15    b2 -> empty
Rule 16    vars -> VAR vars2
Rule 17    vars2 -> type save_type vars3 SEMICOLON vars2
Rule 18    vars2 -> empty
Rule 19    vars3 -> ID list savelist vars4
Rule 20    vars3 -> ID saveid vars4
Rule 21    vars4 -> COMMA vars3
Rule 22    vars4 -> empty
Rule 23    savelist -> <empty>
Rule 24    saveid -> <empty>
Rule 25    save_type -> <empty>
Rule 26    list -> LBRACKET CTE_INT RBRACKET
Rule 27    statute -> assignment
Rule 28    statute -> call
Rule 29    statute -> condition
Rule 30    statute -> triangle
Rule 31    statute -> rectangle
Rule 32    statute -> square
Rule 33    statute -> circle
Rule 34    statute -> poligon
Rule 35    statute -> color
Rule 36    statute -> pensize
Rule 37    statute -> penforward
Rule 38    statute -> penback
Rule 39    statute -> rotate
Rule 40    statute -> while
Rule 41    statute -> penon
Rule 42    statute -> penoff
Rule 43    statute -> print
Rule 44    while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
Rule 45    while_return -> <empty>
Rule 46    end_while -> <empty>
Rule 47    assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON
Rule 48    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 49    verify_id -> <empty>
Rule 50    set_value -> <empty>
Rule 51    cte_id -> <empty>
Rule 52    color_cte -> RED
Rule 53    color_cte -> BLUE
Rule 54    color_cte -> YELLOW
Rule 55    color_cte -> GREEN
Rule 56    color_cte -> PINK
Rule 57    color_cte -> PURPLE
Rule 58    st_cte -> STRING
Rule 59    st_cte -> cte_bool
Rule 60    funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
Rule 61    funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
Rule 62    functype -> <empty>
Rule 63    params -> type ID save_par params1
Rule 64    params -> empty
Rule 65    params1 -> COMMA type ID save_par params1
Rule 66    params1 -> empty
Rule 67    funcs1 -> funcs1 COMMA type save_type ID save_par
Rule 68    funcs1 -> empty
Rule 69    statements -> statements statute
Rule 70    statements -> empty
Rule 71    test -> <empty>
Rule 72    funcs3 -> funcs
Rule 73    funcs3 -> empty
Rule 74    funcvars -> vars local_vars
Rule 75    funcvars -> empty
Rule 76    saveidfunc -> <empty>
Rule 77    end_func -> <empty>
Rule 78    save_par -> <empty>
Rule 79    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 80    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 81    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 82    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 83    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 84    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 85    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 86    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 87    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 88    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 89    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 90    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 91    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 92    type -> INT
Rule 93    type -> FLOAT
Rule 94    type -> STRING
Rule 95    type -> BOOL
Rule 96    getarrayvalue -> <empty>
Rule 97    getcallvalue -> <empty>
Rule 98    cte_bool -> TRUE
Rule 99    cte_bool -> FALSE
Rule 100   condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 101   condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 102   condition1 -> empty
Rule 103   type_check -> <empty>
Rule 104   gotoElse -> <empty>
Rule 105   end_if -> <empty>
Rule 106   expression -> exp expression1
Rule 107   expression1 -> LESSER relop exp top_relop
Rule 108   expression1 -> GREATER relop exp top_relop
Rule 109   expression1 -> EQUAL relop exp top_relop
Rule 110   expression1 -> NOTEQUAL relop exp top_relop
Rule 111   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 112   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 113   expression1 -> empty
Rule 114   exp -> term top_exp exp1
Rule 115   exp1 -> MINUS push_sign exp
Rule 116   exp1 -> PLUS push_sign exp
Rule 117   exp1 -> empty
Rule 118   top_exp -> <empty>
Rule 119   term -> factor top_factor term1
Rule 120   term1 -> DIVIDE push_sign term
Rule 121   term1 -> TIMES push_sign term
Rule 122   term1 -> empty
Rule 123   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 124   factor -> var_cte
Rule 125   factor -> ID push_id
Rule 126   top_factor -> <empty>
Rule 127   var_cte -> ID getidvalue
Rule 128   var_cte -> CTE_INT getvalue_i
Rule 129   var_cte -> CTE_FLOAT getvalue_f
Rule 130   var_cte -> cte_bool getvalue_b
Rule 131   var_cte -> ID list getarrayvalue
Rule 132   var_cte -> call getcallvalue
Rule 133   getidvalue -> <empty>
Rule 134   getvalue_i -> <empty>
Rule 135   getvalue_f -> <empty>
Rule 136   getvalue_b -> <empty>
Rule 137   relop -> <empty>
Rule 138   top_relop -> <empty>
Rule 139   push_sign -> <empty>
Rule 140   false_bottom -> <empty>
Rule 141   end_par -> <empty>
Rule 142   push_id -> <empty>
Rule 143   call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
Rule 144   checkreturn -> <empty>
Rule 145   check_name -> <empty>
Rule 146   create_era -> <empty>
Rule 147   gosub -> <empty>
Rule 148   call1 -> expression argument call2
Rule 149   call1 -> call2
Rule 150   call2 -> COMMA expression argument call2
Rule 151   call2 -> empty
Rule 152   argument -> <empty>
Rule 153   check_params -> <empty>
Rule 154   print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON
Rule 155   print_multi -> COMMA expression to_screen print_multi
Rule 156   print_multi -> empty
Rule 157   to_screen -> <empty>
Rule 158   return -> RETURN expression savereturn SEMICOLON
Rule 159   savereturn -> <empty>
Rule 160   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 47 48
BLUE                 : 53
BOOL                 : 95
CIRCLE               : 80
COLOR                : 79
COMMA                : 21 65 67 82 83 84 150 155
CTE_BOOL             : 
CTE_FLOAT            : 129
CTE_INT              : 26 128
CTE_STRING           : 86
DAVINCI              : 1
DIVIDE               : 120
ELSE                 : 101
EQUAL                : 109
EXPRESSION           : 
FALSE                : 99
FLOAT                : 93
FUNC                 : 60 61
GREATER              : 108
GREATEROREQUAL       : 111
GREEN                : 55
ID                   : 1 19 20 47 48 60 61 63 65 67 125 127 131 143
IF                   : 100
INT                  : 92
LBRACE               : 10 44 60 61 100 101
LBRACKET             : 26 48
LESSER               : 107
LESSEROREQUAL        : 112
LPAREN               : 44 60 61 79 80 81 82 83 84 85 86 87 88 89 90 91 100 123 143 154
MINUS                : 115
NOT                  : 
NOTEQUAL             : 110
OR                   : 
PENBACK              : 89
PENFORWARD           : 88
PENOFF               : 91
PENON                : 90
PENSIZE              : 87
PINK                 : 56
PLUS                 : 116
POLIGON              : 84
PRINT                : 154
PROGRAM              : 1
PURPLE               : 57
RBRACE               : 10 44 60 61 100 101
RBRACKET             : 26 48
RECTANGLE            : 83
RED                  : 52
RETURN               : 158
ROTATE               : 85 86
RPAREN               : 44 60 61 79 80 81 82 83 84 85 86 87 88 89 90 91 100 123 143 154
SEMICOLON            : 1 17 47 48 79 80 81 82 83 84 85 86 87 88 89 90 91 143 154 158
SIZE                 : 
SQUARE               : 81
STRING               : 58 94
ST_CTE               : 
TERM                 : 
TIMES                : 121
TRIANGLE             : 82
TRUE                 : 98
VAR                  : 16
VOID                 : 61
WHILE                : 44
YELLOW               : 54
error                : 

Nonterminals, with rules where they appear

argument             : 148 150
assignment           : 27
b1                   : 10
b2                   : 11 12 14 44 100 101
block                : 1
call                 : 28 132
call1                : 143
call2                : 148 149 150
check_name           : 143
check_params         : 143
checkreturn          : 143
circle               : 33
color                : 35
color_cte            : 79
condition            : 29
condition1           : 100
create_era           : 143
cte_bool             : 59 130
cte_id               : 48
empty                : 6 15 18 22 64 66 68 70 73 75 102 113 117 122 151 156
end_func             : 60 61
end_if               : 100
end_par              : 123
end_while            : 44
exp                  : 48 80 81 82 82 83 83 84 84 85 87 88 89 106 107 108 109 110 111 112 115 116
exp1                 : 114
expression           : 44 47 48 100 123 148 150 154 155 158
expression1          : 106
factor               : 119
false_bottom         : 123
fillmain             : 1
funcs                : 4 72
funcs1               : 67
funcs3               : 60 61
functype             : 60 61
funcvars             : 60 61
getarrayvalue        : 131
getcallvalue         : 132
getglobalmemory      : 1
getidvalue           : 127
getvalue_b           : 130
getvalue_f           : 129
getvalue_i           : 128
global_vars          : 5
gosub                : 143
gotoElse             : 101
gotomain             : 1
list                 : 19 131
local_vars           : 11 74
params               : 60 61
params1              : 63 65
penback              : 38
penforward           : 37
penoff               : 42
penon                : 41
pensize              : 36
poligon              : 34
print                : 43
print_multi          : 154 155
program              : 0
program1             : 1 4 5
push_id              : 125
push_sign            : 47 115 116 120 121
rectangle            : 31
relop                : 107 108 109 110 111 112
return               : 60
rotate               : 39
save_funcs           : 4
save_par             : 63 65 67
save_type            : 17 67
saveid               : 20
saveidfunc           : 60 61
savelist             : 19
savereturn           : 158
set_value            : 47
square               : 32
st_cte               : 
statements           : 60 61 69
statute              : 14 69
term                 : 114 120 121
term1                : 119
test                 : 
to_screen            : 154 155
top_exp              : 114
top_factor           : 119
top_relop            : 107 108 109 110 111 112
triangle             : 30
type                 : 17 60 63 65 67
type_check           : 44 100
var_cte              : 124
vars                 : 5 11 74
vars2                : 16 17
vars3                : 17 21
vars4                : 19 20
verify_id            : 47
while                : 40
while_return         : 44

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 getglobalmemory DAVINCI fillmain block
    (3) gotomain -> .

    FUNC            reduce using rule 3 (gotomain -> .)
    VAR             reduce using rule 3 (gotomain -> .)
    DAVINCI         reduce using rule 3 (gotomain -> .)

    gotomain                       shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 getglobalmemory DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (160) empty -> .

    FUNC            reduce using rule 160 (empty -> .)
    VAR             reduce using rule 160 (empty -> .)
    DAVINCI         reduce using rule 160 (empty -> .)

    program1                       shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . getglobalmemory DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (7) getglobalmemory -> .
    (60) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (61) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (16) vars -> . VAR vars2

    DAVINCI         reduce using rule 7 (getglobalmemory -> .)
    FUNC            shift and go to state 11
    VAR             shift and go to state 12

    getglobalmemory                shift and go to state 8
    funcs                          shift and go to state 9
    vars                           shift and go to state 10

state 7

    (6) program1 -> empty .

    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)
    DAVINCI         reduce using rule 6 (program1 -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory . DAVINCI fillmain block

    DAVINCI         shift and go to state 13


state 9

    (4) program1 -> program1 funcs . save_funcs
    (8) save_funcs -> .

    FUNC            reduce using rule 8 (save_funcs -> .)
    VAR             reduce using rule 8 (save_funcs -> .)
    DAVINCI         reduce using rule 8 (save_funcs -> .)

    save_funcs                     shift and go to state 14

state 10

    (5) program1 -> program1 vars . global_vars
    (9) global_vars -> .

    FUNC            reduce using rule 9 (global_vars -> .)
    VAR             reduce using rule 9 (global_vars -> .)
    DAVINCI         reduce using rule 9 (global_vars -> .)

    global_vars                    shift and go to state 15

state 11

    (60) funcs -> FUNC . type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (61) funcs -> FUNC . VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 16

state 12

    (16) vars -> VAR . vars2
    (17) vars2 -> . type save_type vars3 SEMICOLON vars2
    (18) vars2 -> . empty
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL
    (160) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    FUNC            reduce using rule 160 (empty -> .)
    VAR             reduce using rule 160 (empty -> .)
    DAVINCI         reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)
    RBRACE          reduce using rule 160 (empty -> .)
    LBRACE          reduce using rule 160 (empty -> .)

    vars2                          shift and go to state 22
    type                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI . fillmain block
    (2) fillmain -> .

    LBRACE          reduce using rule 2 (fillmain -> .)

    fillmain                       shift and go to state 25

state 14

    (4) program1 -> program1 funcs save_funcs .

    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 15

    (5) program1 -> program1 vars global_vars .

    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)
    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)


state 16

    (60) funcs -> FUNC type . functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (62) functype -> .

    ID              reduce using rule 62 (functype -> .)

    functype                       shift and go to state 26

state 17

    (61) funcs -> FUNC VOID . functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (62) functype -> .

    ID              reduce using rule 62 (functype -> .)

    functype                       shift and go to state 27

state 18

    (92) type -> INT .

    ID              reduce using rule 92 (type -> INT .)


state 19

    (93) type -> FLOAT .

    ID              reduce using rule 93 (type -> FLOAT .)


state 20

    (94) type -> STRING .

    ID              reduce using rule 94 (type -> STRING .)


state 21

    (95) type -> BOOL .

    ID              reduce using rule 95 (type -> BOOL .)


state 22

    (16) vars -> VAR vars2 .

    FUNC            reduce using rule 16 (vars -> VAR vars2 .)
    VAR             reduce using rule 16 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 16 (vars -> VAR vars2 .)
    ID              reduce using rule 16 (vars -> VAR vars2 .)
    IF              reduce using rule 16 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 16 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 16 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 16 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 16 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 16 (vars -> VAR vars2 .)
    COLOR           reduce using rule 16 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 16 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 16 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 16 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 16 (vars -> VAR vars2 .)
    WHILE           reduce using rule 16 (vars -> VAR vars2 .)
    PENON           reduce using rule 16 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 16 (vars -> VAR vars2 .)
    PRINT           reduce using rule 16 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 16 (vars -> VAR vars2 .)
    LBRACE          reduce using rule 16 (vars -> VAR vars2 .)


state 23

    (17) vars2 -> type . save_type vars3 SEMICOLON vars2
    (25) save_type -> .

    ID              reduce using rule 25 (save_type -> .)

    save_type                      shift and go to state 28

state 24

    (18) vars2 -> empty .

    FUNC            reduce using rule 18 (vars2 -> empty .)
    VAR             reduce using rule 18 (vars2 -> empty .)
    DAVINCI         reduce using rule 18 (vars2 -> empty .)
    ID              reduce using rule 18 (vars2 -> empty .)
    IF              reduce using rule 18 (vars2 -> empty .)
    TRIANGLE        reduce using rule 18 (vars2 -> empty .)
    RECTANGLE       reduce using rule 18 (vars2 -> empty .)
    SQUARE          reduce using rule 18 (vars2 -> empty .)
    CIRCLE          reduce using rule 18 (vars2 -> empty .)
    POLIGON         reduce using rule 18 (vars2 -> empty .)
    COLOR           reduce using rule 18 (vars2 -> empty .)
    PENSIZE         reduce using rule 18 (vars2 -> empty .)
    PENFORWARD      reduce using rule 18 (vars2 -> empty .)
    PENBACK         reduce using rule 18 (vars2 -> empty .)
    ROTATE          reduce using rule 18 (vars2 -> empty .)
    WHILE           reduce using rule 18 (vars2 -> empty .)
    PENON           reduce using rule 18 (vars2 -> empty .)
    PENOFF          reduce using rule 18 (vars2 -> empty .)
    PRINT           reduce using rule 18 (vars2 -> empty .)
    RBRACE          reduce using rule 18 (vars2 -> empty .)
    LBRACE          reduce using rule 18 (vars2 -> empty .)


state 25

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain . block
    (10) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 30

    block                          shift and go to state 29

state 26

    (60) funcs -> FUNC type functype . ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    ID              shift and go to state 31


state 27

    (61) funcs -> FUNC VOID functype . ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    ID              shift and go to state 32


state 28

    (17) vars2 -> type save_type . vars3 SEMICOLON vars2
    (19) vars3 -> . ID list savelist vars4
    (20) vars3 -> . ID saveid vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 33

state 29

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block .)


state 30

    (10) block -> LBRACE . b1 RBRACE
    (11) b1 -> . vars local_vars b2
    (12) b1 -> . b2
    (16) vars -> . VAR vars2
    (14) b2 -> . b2 statute
    (15) b2 -> . empty
    (160) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)
    RBRACE          reduce using rule 160 (empty -> .)

    b1                             shift and go to state 35
    vars                           shift and go to state 36
    b2                             shift and go to state 37
    empty                          shift and go to state 38

state 31

    (60) funcs -> FUNC type functype ID . saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (76) saveidfunc -> .

    LPAREN          reduce using rule 76 (saveidfunc -> .)

    saveidfunc                     shift and go to state 39

state 32

    (61) funcs -> FUNC VOID functype ID . saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (76) saveidfunc -> .

    LPAREN          reduce using rule 76 (saveidfunc -> .)

    saveidfunc                     shift and go to state 40

state 33

    (17) vars2 -> type save_type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 41


state 34

    (19) vars3 -> ID . list savelist vars4
    (20) vars3 -> ID . saveid vars4
    (26) list -> . LBRACKET CTE_INT RBRACKET
    (24) saveid -> .

    LBRACKET        shift and go to state 44
    COMMA           reduce using rule 24 (saveid -> .)
    SEMICOLON       reduce using rule 24 (saveid -> .)

    list                           shift and go to state 42
    saveid                         shift and go to state 43

state 35

    (10) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 45


state 36

    (11) b1 -> vars . local_vars b2
    (13) local_vars -> .

    ID              reduce using rule 13 (local_vars -> .)
    IF              reduce using rule 13 (local_vars -> .)
    TRIANGLE        reduce using rule 13 (local_vars -> .)
    RECTANGLE       reduce using rule 13 (local_vars -> .)
    SQUARE          reduce using rule 13 (local_vars -> .)
    CIRCLE          reduce using rule 13 (local_vars -> .)
    POLIGON         reduce using rule 13 (local_vars -> .)
    COLOR           reduce using rule 13 (local_vars -> .)
    PENSIZE         reduce using rule 13 (local_vars -> .)
    PENFORWARD      reduce using rule 13 (local_vars -> .)
    PENBACK         reduce using rule 13 (local_vars -> .)
    ROTATE          reduce using rule 13 (local_vars -> .)
    WHILE           reduce using rule 13 (local_vars -> .)
    PENON           reduce using rule 13 (local_vars -> .)
    PENOFF          reduce using rule 13 (local_vars -> .)
    PRINT           reduce using rule 13 (local_vars -> .)
    RBRACE          reduce using rule 13 (local_vars -> .)

    local_vars                     shift and go to state 46

state 37

    (12) b1 -> b2 .
    (14) b2 -> b2 . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          reduce using rule 12 (b1 -> b2 .)
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 38

    (15) b2 -> empty .

    ID              reduce using rule 15 (b2 -> empty .)
    IF              reduce using rule 15 (b2 -> empty .)
    TRIANGLE        reduce using rule 15 (b2 -> empty .)
    RECTANGLE       reduce using rule 15 (b2 -> empty .)
    SQUARE          reduce using rule 15 (b2 -> empty .)
    CIRCLE          reduce using rule 15 (b2 -> empty .)
    POLIGON         reduce using rule 15 (b2 -> empty .)
    COLOR           reduce using rule 15 (b2 -> empty .)
    PENSIZE         reduce using rule 15 (b2 -> empty .)
    PENFORWARD      reduce using rule 15 (b2 -> empty .)
    PENBACK         reduce using rule 15 (b2 -> empty .)
    ROTATE          reduce using rule 15 (b2 -> empty .)
    WHILE           reduce using rule 15 (b2 -> empty .)
    PENON           reduce using rule 15 (b2 -> empty .)
    PENOFF          reduce using rule 15 (b2 -> empty .)
    PRINT           reduce using rule 15 (b2 -> empty .)
    RBRACE          reduce using rule 15 (b2 -> empty .)


state 39

    (60) funcs -> FUNC type functype ID saveidfunc . LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    LPAREN          shift and go to state 81


state 40

    (61) funcs -> FUNC VOID functype ID saveidfunc . LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    LPAREN          shift and go to state 82


state 41

    (17) vars2 -> type save_type vars3 SEMICOLON . vars2
    (17) vars2 -> . type save_type vars3 SEMICOLON vars2
    (18) vars2 -> . empty
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL
    (160) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    FUNC            reduce using rule 160 (empty -> .)
    VAR             reduce using rule 160 (empty -> .)
    DAVINCI         reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)
    RBRACE          reduce using rule 160 (empty -> .)
    LBRACE          reduce using rule 160 (empty -> .)

    type                           shift and go to state 23
    vars2                          shift and go to state 83
    empty                          shift and go to state 24

state 42

    (19) vars3 -> ID list . savelist vars4
    (23) savelist -> .

    COMMA           reduce using rule 23 (savelist -> .)
    SEMICOLON       reduce using rule 23 (savelist -> .)

    savelist                       shift and go to state 84

state 43

    (20) vars3 -> ID saveid . vars4
    (21) vars4 -> . COMMA vars3
    (22) vars4 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 160 (empty -> .)

    vars4                          shift and go to state 85
    empty                          shift and go to state 87

state 44

    (26) list -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 88


state 45

    (10) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 10 (block -> LBRACE b1 RBRACE .)


state 46

    (11) b1 -> vars local_vars . b2
    (14) b2 -> . b2 statute
    (15) b2 -> . empty
    (160) empty -> .

    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)
    RBRACE          reduce using rule 160 (empty -> .)

    b2                             shift and go to state 89
    empty                          shift and go to state 38

state 47

    (14) b2 -> b2 statute .

    ID              reduce using rule 14 (b2 -> b2 statute .)
    IF              reduce using rule 14 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 14 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 14 (b2 -> b2 statute .)
    SQUARE          reduce using rule 14 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 14 (b2 -> b2 statute .)
    POLIGON         reduce using rule 14 (b2 -> b2 statute .)
    COLOR           reduce using rule 14 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 14 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 14 (b2 -> b2 statute .)
    PENBACK         reduce using rule 14 (b2 -> b2 statute .)
    ROTATE          reduce using rule 14 (b2 -> b2 statute .)
    WHILE           reduce using rule 14 (b2 -> b2 statute .)
    PENON           reduce using rule 14 (b2 -> b2 statute .)
    PENOFF          reduce using rule 14 (b2 -> b2 statute .)
    PRINT           reduce using rule 14 (b2 -> b2 statute .)
    RBRACE          reduce using rule 14 (b2 -> b2 statute .)


state 48

    (27) statute -> assignment .

    ID              reduce using rule 27 (statute -> assignment .)
    IF              reduce using rule 27 (statute -> assignment .)
    TRIANGLE        reduce using rule 27 (statute -> assignment .)
    RECTANGLE       reduce using rule 27 (statute -> assignment .)
    SQUARE          reduce using rule 27 (statute -> assignment .)
    CIRCLE          reduce using rule 27 (statute -> assignment .)
    POLIGON         reduce using rule 27 (statute -> assignment .)
    COLOR           reduce using rule 27 (statute -> assignment .)
    PENSIZE         reduce using rule 27 (statute -> assignment .)
    PENFORWARD      reduce using rule 27 (statute -> assignment .)
    PENBACK         reduce using rule 27 (statute -> assignment .)
    ROTATE          reduce using rule 27 (statute -> assignment .)
    WHILE           reduce using rule 27 (statute -> assignment .)
    PENON           reduce using rule 27 (statute -> assignment .)
    PENOFF          reduce using rule 27 (statute -> assignment .)
    PRINT           reduce using rule 27 (statute -> assignment .)
    RBRACE          reduce using rule 27 (statute -> assignment .)
    RETURN          reduce using rule 27 (statute -> assignment .)


state 49

    (28) statute -> call .

    ID              reduce using rule 28 (statute -> call .)
    IF              reduce using rule 28 (statute -> call .)
    TRIANGLE        reduce using rule 28 (statute -> call .)
    RECTANGLE       reduce using rule 28 (statute -> call .)
    SQUARE          reduce using rule 28 (statute -> call .)
    CIRCLE          reduce using rule 28 (statute -> call .)
    POLIGON         reduce using rule 28 (statute -> call .)
    COLOR           reduce using rule 28 (statute -> call .)
    PENSIZE         reduce using rule 28 (statute -> call .)
    PENFORWARD      reduce using rule 28 (statute -> call .)
    PENBACK         reduce using rule 28 (statute -> call .)
    ROTATE          reduce using rule 28 (statute -> call .)
    WHILE           reduce using rule 28 (statute -> call .)
    PENON           reduce using rule 28 (statute -> call .)
    PENOFF          reduce using rule 28 (statute -> call .)
    PRINT           reduce using rule 28 (statute -> call .)
    RBRACE          reduce using rule 28 (statute -> call .)
    RETURN          reduce using rule 28 (statute -> call .)


state 50

    (29) statute -> condition .

    ID              reduce using rule 29 (statute -> condition .)
    IF              reduce using rule 29 (statute -> condition .)
    TRIANGLE        reduce using rule 29 (statute -> condition .)
    RECTANGLE       reduce using rule 29 (statute -> condition .)
    SQUARE          reduce using rule 29 (statute -> condition .)
    CIRCLE          reduce using rule 29 (statute -> condition .)
    POLIGON         reduce using rule 29 (statute -> condition .)
    COLOR           reduce using rule 29 (statute -> condition .)
    PENSIZE         reduce using rule 29 (statute -> condition .)
    PENFORWARD      reduce using rule 29 (statute -> condition .)
    PENBACK         reduce using rule 29 (statute -> condition .)
    ROTATE          reduce using rule 29 (statute -> condition .)
    WHILE           reduce using rule 29 (statute -> condition .)
    PENON           reduce using rule 29 (statute -> condition .)
    PENOFF          reduce using rule 29 (statute -> condition .)
    PRINT           reduce using rule 29 (statute -> condition .)
    RBRACE          reduce using rule 29 (statute -> condition .)
    RETURN          reduce using rule 29 (statute -> condition .)


state 51

    (30) statute -> triangle .

    ID              reduce using rule 30 (statute -> triangle .)
    IF              reduce using rule 30 (statute -> triangle .)
    TRIANGLE        reduce using rule 30 (statute -> triangle .)
    RECTANGLE       reduce using rule 30 (statute -> triangle .)
    SQUARE          reduce using rule 30 (statute -> triangle .)
    CIRCLE          reduce using rule 30 (statute -> triangle .)
    POLIGON         reduce using rule 30 (statute -> triangle .)
    COLOR           reduce using rule 30 (statute -> triangle .)
    PENSIZE         reduce using rule 30 (statute -> triangle .)
    PENFORWARD      reduce using rule 30 (statute -> triangle .)
    PENBACK         reduce using rule 30 (statute -> triangle .)
    ROTATE          reduce using rule 30 (statute -> triangle .)
    WHILE           reduce using rule 30 (statute -> triangle .)
    PENON           reduce using rule 30 (statute -> triangle .)
    PENOFF          reduce using rule 30 (statute -> triangle .)
    PRINT           reduce using rule 30 (statute -> triangle .)
    RBRACE          reduce using rule 30 (statute -> triangle .)
    RETURN          reduce using rule 30 (statute -> triangle .)


state 52

    (31) statute -> rectangle .

    ID              reduce using rule 31 (statute -> rectangle .)
    IF              reduce using rule 31 (statute -> rectangle .)
    TRIANGLE        reduce using rule 31 (statute -> rectangle .)
    RECTANGLE       reduce using rule 31 (statute -> rectangle .)
    SQUARE          reduce using rule 31 (statute -> rectangle .)
    CIRCLE          reduce using rule 31 (statute -> rectangle .)
    POLIGON         reduce using rule 31 (statute -> rectangle .)
    COLOR           reduce using rule 31 (statute -> rectangle .)
    PENSIZE         reduce using rule 31 (statute -> rectangle .)
    PENFORWARD      reduce using rule 31 (statute -> rectangle .)
    PENBACK         reduce using rule 31 (statute -> rectangle .)
    ROTATE          reduce using rule 31 (statute -> rectangle .)
    WHILE           reduce using rule 31 (statute -> rectangle .)
    PENON           reduce using rule 31 (statute -> rectangle .)
    PENOFF          reduce using rule 31 (statute -> rectangle .)
    PRINT           reduce using rule 31 (statute -> rectangle .)
    RBRACE          reduce using rule 31 (statute -> rectangle .)
    RETURN          reduce using rule 31 (statute -> rectangle .)


state 53

    (32) statute -> square .

    ID              reduce using rule 32 (statute -> square .)
    IF              reduce using rule 32 (statute -> square .)
    TRIANGLE        reduce using rule 32 (statute -> square .)
    RECTANGLE       reduce using rule 32 (statute -> square .)
    SQUARE          reduce using rule 32 (statute -> square .)
    CIRCLE          reduce using rule 32 (statute -> square .)
    POLIGON         reduce using rule 32 (statute -> square .)
    COLOR           reduce using rule 32 (statute -> square .)
    PENSIZE         reduce using rule 32 (statute -> square .)
    PENFORWARD      reduce using rule 32 (statute -> square .)
    PENBACK         reduce using rule 32 (statute -> square .)
    ROTATE          reduce using rule 32 (statute -> square .)
    WHILE           reduce using rule 32 (statute -> square .)
    PENON           reduce using rule 32 (statute -> square .)
    PENOFF          reduce using rule 32 (statute -> square .)
    PRINT           reduce using rule 32 (statute -> square .)
    RBRACE          reduce using rule 32 (statute -> square .)
    RETURN          reduce using rule 32 (statute -> square .)


state 54

    (33) statute -> circle .

    ID              reduce using rule 33 (statute -> circle .)
    IF              reduce using rule 33 (statute -> circle .)
    TRIANGLE        reduce using rule 33 (statute -> circle .)
    RECTANGLE       reduce using rule 33 (statute -> circle .)
    SQUARE          reduce using rule 33 (statute -> circle .)
    CIRCLE          reduce using rule 33 (statute -> circle .)
    POLIGON         reduce using rule 33 (statute -> circle .)
    COLOR           reduce using rule 33 (statute -> circle .)
    PENSIZE         reduce using rule 33 (statute -> circle .)
    PENFORWARD      reduce using rule 33 (statute -> circle .)
    PENBACK         reduce using rule 33 (statute -> circle .)
    ROTATE          reduce using rule 33 (statute -> circle .)
    WHILE           reduce using rule 33 (statute -> circle .)
    PENON           reduce using rule 33 (statute -> circle .)
    PENOFF          reduce using rule 33 (statute -> circle .)
    PRINT           reduce using rule 33 (statute -> circle .)
    RBRACE          reduce using rule 33 (statute -> circle .)
    RETURN          reduce using rule 33 (statute -> circle .)


state 55

    (34) statute -> poligon .

    ID              reduce using rule 34 (statute -> poligon .)
    IF              reduce using rule 34 (statute -> poligon .)
    TRIANGLE        reduce using rule 34 (statute -> poligon .)
    RECTANGLE       reduce using rule 34 (statute -> poligon .)
    SQUARE          reduce using rule 34 (statute -> poligon .)
    CIRCLE          reduce using rule 34 (statute -> poligon .)
    POLIGON         reduce using rule 34 (statute -> poligon .)
    COLOR           reduce using rule 34 (statute -> poligon .)
    PENSIZE         reduce using rule 34 (statute -> poligon .)
    PENFORWARD      reduce using rule 34 (statute -> poligon .)
    PENBACK         reduce using rule 34 (statute -> poligon .)
    ROTATE          reduce using rule 34 (statute -> poligon .)
    WHILE           reduce using rule 34 (statute -> poligon .)
    PENON           reduce using rule 34 (statute -> poligon .)
    PENOFF          reduce using rule 34 (statute -> poligon .)
    PRINT           reduce using rule 34 (statute -> poligon .)
    RBRACE          reduce using rule 34 (statute -> poligon .)
    RETURN          reduce using rule 34 (statute -> poligon .)


state 56

    (35) statute -> color .

    ID              reduce using rule 35 (statute -> color .)
    IF              reduce using rule 35 (statute -> color .)
    TRIANGLE        reduce using rule 35 (statute -> color .)
    RECTANGLE       reduce using rule 35 (statute -> color .)
    SQUARE          reduce using rule 35 (statute -> color .)
    CIRCLE          reduce using rule 35 (statute -> color .)
    POLIGON         reduce using rule 35 (statute -> color .)
    COLOR           reduce using rule 35 (statute -> color .)
    PENSIZE         reduce using rule 35 (statute -> color .)
    PENFORWARD      reduce using rule 35 (statute -> color .)
    PENBACK         reduce using rule 35 (statute -> color .)
    ROTATE          reduce using rule 35 (statute -> color .)
    WHILE           reduce using rule 35 (statute -> color .)
    PENON           reduce using rule 35 (statute -> color .)
    PENOFF          reduce using rule 35 (statute -> color .)
    PRINT           reduce using rule 35 (statute -> color .)
    RBRACE          reduce using rule 35 (statute -> color .)
    RETURN          reduce using rule 35 (statute -> color .)


state 57

    (36) statute -> pensize .

    ID              reduce using rule 36 (statute -> pensize .)
    IF              reduce using rule 36 (statute -> pensize .)
    TRIANGLE        reduce using rule 36 (statute -> pensize .)
    RECTANGLE       reduce using rule 36 (statute -> pensize .)
    SQUARE          reduce using rule 36 (statute -> pensize .)
    CIRCLE          reduce using rule 36 (statute -> pensize .)
    POLIGON         reduce using rule 36 (statute -> pensize .)
    COLOR           reduce using rule 36 (statute -> pensize .)
    PENSIZE         reduce using rule 36 (statute -> pensize .)
    PENFORWARD      reduce using rule 36 (statute -> pensize .)
    PENBACK         reduce using rule 36 (statute -> pensize .)
    ROTATE          reduce using rule 36 (statute -> pensize .)
    WHILE           reduce using rule 36 (statute -> pensize .)
    PENON           reduce using rule 36 (statute -> pensize .)
    PENOFF          reduce using rule 36 (statute -> pensize .)
    PRINT           reduce using rule 36 (statute -> pensize .)
    RBRACE          reduce using rule 36 (statute -> pensize .)
    RETURN          reduce using rule 36 (statute -> pensize .)


state 58

    (37) statute -> penforward .

    ID              reduce using rule 37 (statute -> penforward .)
    IF              reduce using rule 37 (statute -> penforward .)
    TRIANGLE        reduce using rule 37 (statute -> penforward .)
    RECTANGLE       reduce using rule 37 (statute -> penforward .)
    SQUARE          reduce using rule 37 (statute -> penforward .)
    CIRCLE          reduce using rule 37 (statute -> penforward .)
    POLIGON         reduce using rule 37 (statute -> penforward .)
    COLOR           reduce using rule 37 (statute -> penforward .)
    PENSIZE         reduce using rule 37 (statute -> penforward .)
    PENFORWARD      reduce using rule 37 (statute -> penforward .)
    PENBACK         reduce using rule 37 (statute -> penforward .)
    ROTATE          reduce using rule 37 (statute -> penforward .)
    WHILE           reduce using rule 37 (statute -> penforward .)
    PENON           reduce using rule 37 (statute -> penforward .)
    PENOFF          reduce using rule 37 (statute -> penforward .)
    PRINT           reduce using rule 37 (statute -> penforward .)
    RBRACE          reduce using rule 37 (statute -> penforward .)
    RETURN          reduce using rule 37 (statute -> penforward .)


state 59

    (38) statute -> penback .

    ID              reduce using rule 38 (statute -> penback .)
    IF              reduce using rule 38 (statute -> penback .)
    TRIANGLE        reduce using rule 38 (statute -> penback .)
    RECTANGLE       reduce using rule 38 (statute -> penback .)
    SQUARE          reduce using rule 38 (statute -> penback .)
    CIRCLE          reduce using rule 38 (statute -> penback .)
    POLIGON         reduce using rule 38 (statute -> penback .)
    COLOR           reduce using rule 38 (statute -> penback .)
    PENSIZE         reduce using rule 38 (statute -> penback .)
    PENFORWARD      reduce using rule 38 (statute -> penback .)
    PENBACK         reduce using rule 38 (statute -> penback .)
    ROTATE          reduce using rule 38 (statute -> penback .)
    WHILE           reduce using rule 38 (statute -> penback .)
    PENON           reduce using rule 38 (statute -> penback .)
    PENOFF          reduce using rule 38 (statute -> penback .)
    PRINT           reduce using rule 38 (statute -> penback .)
    RBRACE          reduce using rule 38 (statute -> penback .)
    RETURN          reduce using rule 38 (statute -> penback .)


state 60

    (39) statute -> rotate .

    ID              reduce using rule 39 (statute -> rotate .)
    IF              reduce using rule 39 (statute -> rotate .)
    TRIANGLE        reduce using rule 39 (statute -> rotate .)
    RECTANGLE       reduce using rule 39 (statute -> rotate .)
    SQUARE          reduce using rule 39 (statute -> rotate .)
    CIRCLE          reduce using rule 39 (statute -> rotate .)
    POLIGON         reduce using rule 39 (statute -> rotate .)
    COLOR           reduce using rule 39 (statute -> rotate .)
    PENSIZE         reduce using rule 39 (statute -> rotate .)
    PENFORWARD      reduce using rule 39 (statute -> rotate .)
    PENBACK         reduce using rule 39 (statute -> rotate .)
    ROTATE          reduce using rule 39 (statute -> rotate .)
    WHILE           reduce using rule 39 (statute -> rotate .)
    PENON           reduce using rule 39 (statute -> rotate .)
    PENOFF          reduce using rule 39 (statute -> rotate .)
    PRINT           reduce using rule 39 (statute -> rotate .)
    RBRACE          reduce using rule 39 (statute -> rotate .)
    RETURN          reduce using rule 39 (statute -> rotate .)


state 61

    (40) statute -> while .

    ID              reduce using rule 40 (statute -> while .)
    IF              reduce using rule 40 (statute -> while .)
    TRIANGLE        reduce using rule 40 (statute -> while .)
    RECTANGLE       reduce using rule 40 (statute -> while .)
    SQUARE          reduce using rule 40 (statute -> while .)
    CIRCLE          reduce using rule 40 (statute -> while .)
    POLIGON         reduce using rule 40 (statute -> while .)
    COLOR           reduce using rule 40 (statute -> while .)
    PENSIZE         reduce using rule 40 (statute -> while .)
    PENFORWARD      reduce using rule 40 (statute -> while .)
    PENBACK         reduce using rule 40 (statute -> while .)
    ROTATE          reduce using rule 40 (statute -> while .)
    WHILE           reduce using rule 40 (statute -> while .)
    PENON           reduce using rule 40 (statute -> while .)
    PENOFF          reduce using rule 40 (statute -> while .)
    PRINT           reduce using rule 40 (statute -> while .)
    RBRACE          reduce using rule 40 (statute -> while .)
    RETURN          reduce using rule 40 (statute -> while .)


state 62

    (41) statute -> penon .

    ID              reduce using rule 41 (statute -> penon .)
    IF              reduce using rule 41 (statute -> penon .)
    TRIANGLE        reduce using rule 41 (statute -> penon .)
    RECTANGLE       reduce using rule 41 (statute -> penon .)
    SQUARE          reduce using rule 41 (statute -> penon .)
    CIRCLE          reduce using rule 41 (statute -> penon .)
    POLIGON         reduce using rule 41 (statute -> penon .)
    COLOR           reduce using rule 41 (statute -> penon .)
    PENSIZE         reduce using rule 41 (statute -> penon .)
    PENFORWARD      reduce using rule 41 (statute -> penon .)
    PENBACK         reduce using rule 41 (statute -> penon .)
    ROTATE          reduce using rule 41 (statute -> penon .)
    WHILE           reduce using rule 41 (statute -> penon .)
    PENON           reduce using rule 41 (statute -> penon .)
    PENOFF          reduce using rule 41 (statute -> penon .)
    PRINT           reduce using rule 41 (statute -> penon .)
    RBRACE          reduce using rule 41 (statute -> penon .)
    RETURN          reduce using rule 41 (statute -> penon .)


state 63

    (42) statute -> penoff .

    ID              reduce using rule 42 (statute -> penoff .)
    IF              reduce using rule 42 (statute -> penoff .)
    TRIANGLE        reduce using rule 42 (statute -> penoff .)
    RECTANGLE       reduce using rule 42 (statute -> penoff .)
    SQUARE          reduce using rule 42 (statute -> penoff .)
    CIRCLE          reduce using rule 42 (statute -> penoff .)
    POLIGON         reduce using rule 42 (statute -> penoff .)
    COLOR           reduce using rule 42 (statute -> penoff .)
    PENSIZE         reduce using rule 42 (statute -> penoff .)
    PENFORWARD      reduce using rule 42 (statute -> penoff .)
    PENBACK         reduce using rule 42 (statute -> penoff .)
    ROTATE          reduce using rule 42 (statute -> penoff .)
    WHILE           reduce using rule 42 (statute -> penoff .)
    PENON           reduce using rule 42 (statute -> penoff .)
    PENOFF          reduce using rule 42 (statute -> penoff .)
    PRINT           reduce using rule 42 (statute -> penoff .)
    RBRACE          reduce using rule 42 (statute -> penoff .)
    RETURN          reduce using rule 42 (statute -> penoff .)


state 64

    (43) statute -> print .

    ID              reduce using rule 43 (statute -> print .)
    IF              reduce using rule 43 (statute -> print .)
    TRIANGLE        reduce using rule 43 (statute -> print .)
    RECTANGLE       reduce using rule 43 (statute -> print .)
    SQUARE          reduce using rule 43 (statute -> print .)
    CIRCLE          reduce using rule 43 (statute -> print .)
    POLIGON         reduce using rule 43 (statute -> print .)
    COLOR           reduce using rule 43 (statute -> print .)
    PENSIZE         reduce using rule 43 (statute -> print .)
    PENFORWARD      reduce using rule 43 (statute -> print .)
    PENBACK         reduce using rule 43 (statute -> print .)
    ROTATE          reduce using rule 43 (statute -> print .)
    WHILE           reduce using rule 43 (statute -> print .)
    PENON           reduce using rule 43 (statute -> print .)
    PENOFF          reduce using rule 43 (statute -> print .)
    PRINT           reduce using rule 43 (statute -> print .)
    RBRACE          reduce using rule 43 (statute -> print .)
    RETURN          reduce using rule 43 (statute -> print .)


state 65

    (47) assignment -> ID . verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (49) verify_id -> .
    (51) cte_id -> .
    (145) check_name -> .

    ASSIGN          reduce using rule 49 (verify_id -> .)
    LBRACKET        reduce using rule 51 (cte_id -> .)
    LPAREN          reduce using rule 145 (check_name -> .)

    verify_id                      shift and go to state 90
    cte_id                         shift and go to state 91
    check_name                     shift and go to state 92

state 66

    (100) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 93


state 67

    (82) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 68

    (83) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 69

    (81) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 96


state 70

    (80) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 97


state 71

    (84) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 98


state 72

    (79) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 73

    (87) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 74

    (88) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 101


state 75

    (89) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 102


state 76

    (85) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (86) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 103


state 77

    (44) while -> WHILE . while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (45) while_return -> .

    LPAREN          reduce using rule 45 (while_return -> .)

    while_return                   shift and go to state 104

state 78

    (90) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 79

    (91) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 80

    (154) print -> PRINT . LPAREN expression to_screen print_multi RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 81

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN . params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (63) params -> . type ID save_par params1
    (64) params -> . empty
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL
    (160) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    RPAREN          reduce using rule 160 (empty -> .)

    type                           shift and go to state 108
    params                         shift and go to state 109
    empty                          shift and go to state 110

state 82

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN . params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (63) params -> . type ID save_par params1
    (64) params -> . empty
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL
    (160) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    RPAREN          reduce using rule 160 (empty -> .)

    params                         shift and go to state 111
    type                           shift and go to state 108
    empty                          shift and go to state 110

state 83

    (17) vars2 -> type save_type vars3 SEMICOLON vars2 .

    FUNC            reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    DAVINCI         reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PRINT           reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    LBRACE          reduce using rule 17 (vars2 -> type save_type vars3 SEMICOLON vars2 .)


state 84

    (19) vars3 -> ID list savelist . vars4
    (21) vars4 -> . COMMA vars3
    (22) vars4 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 160 (empty -> .)

    vars4                          shift and go to state 112
    empty                          shift and go to state 87

state 85

    (20) vars3 -> ID saveid vars4 .

    SEMICOLON       reduce using rule 20 (vars3 -> ID saveid vars4 .)


state 86

    (21) vars4 -> COMMA . vars3
    (19) vars3 -> . ID list savelist vars4
    (20) vars3 -> . ID saveid vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 113

state 87

    (22) vars4 -> empty .

    SEMICOLON       reduce using rule 22 (vars4 -> empty .)


state 88

    (26) list -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 114


state 89

    (11) b1 -> vars local_vars b2 .
    (14) b2 -> b2 . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          reduce using rule 11 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 90

    (47) assignment -> ID verify_id . ASSIGN push_sign expression set_value SEMICOLON

    ASSIGN          shift and go to state 115


state 91

    (48) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 116


state 92

    (143) call -> ID check_name . LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 117


state 93

    (100) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 119
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 94

    (82) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 131
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 95

    (83) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 132
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 96

    (81) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 133
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 97

    (80) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 134
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 98

    (84) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 135
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 99

    (79) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (52) color_cte -> . RED
    (53) color_cte -> . BLUE
    (54) color_cte -> . YELLOW
    (55) color_cte -> . GREEN
    (56) color_cte -> . PINK
    (57) color_cte -> . PURPLE

    RED             shift and go to state 137
    BLUE            shift and go to state 138
    YELLOW          shift and go to state 139
    GREEN           shift and go to state 140
    PINK            shift and go to state 141
    PURPLE          shift and go to state 142

    color_cte                      shift and go to state 136

state 100

    (87) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 143
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 101

    (88) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 144
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 102

    (89) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 145
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 103

    (85) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (86) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    CTE_STRING      shift and go to state 147
    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 146
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 104

    (44) while -> WHILE while_return . LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 148


state 105

    (90) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 106

    (91) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 107

    (154) print -> PRINT LPAREN . expression to_screen print_multi RPAREN SEMICOLON
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 151
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 108

    (63) params -> type . ID save_par params1

    ID              shift and go to state 152


state 109

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params . RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    RPAREN          shift and go to state 153


state 110

    (64) params -> empty .

    RPAREN          reduce using rule 64 (params -> empty .)


state 111

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params . RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    RPAREN          shift and go to state 154


state 112

    (19) vars3 -> ID list savelist vars4 .

    SEMICOLON       reduce using rule 19 (vars3 -> ID list savelist vars4 .)


state 113

    (21) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 21 (vars4 -> COMMA vars3 .)


state 114

    (26) list -> LBRACKET CTE_INT RBRACKET .

    COMMA           reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    TIMES           reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSER          reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATER         reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    EQUAL           reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATEROREQUAL  reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSEROREQUAL   reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 26 (list -> LBRACKET CTE_INT RBRACKET .)


state 115

    (47) assignment -> ID verify_id ASSIGN . push_sign expression set_value SEMICOLON
    (139) push_sign -> .

    LPAREN          reduce using rule 139 (push_sign -> .)
    ID              reduce using rule 139 (push_sign -> .)
    CTE_INT         reduce using rule 139 (push_sign -> .)
    CTE_FLOAT       reduce using rule 139 (push_sign -> .)
    TRUE            reduce using rule 139 (push_sign -> .)
    FALSE           reduce using rule 139 (push_sign -> .)

    push_sign                      shift and go to state 155

state 116

    (48) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 156
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 117

    (143) call -> ID check_name LPAREN . create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (146) create_era -> .

    COMMA           reduce using rule 146 (create_era -> .)
    LPAREN          reduce using rule 146 (create_era -> .)
    ID              reduce using rule 146 (create_era -> .)
    CTE_INT         reduce using rule 146 (create_era -> .)
    CTE_FLOAT       reduce using rule 146 (create_era -> .)
    TRUE            reduce using rule 146 (create_era -> .)
    FALSE           reduce using rule 146 (create_era -> .)
    RPAREN          reduce using rule 146 (create_era -> .)

    create_era                     shift and go to state 157

state 118

    (123) factor -> LPAREN . false_bottom expression RPAREN end_par
    (140) false_bottom -> .

    LPAREN          reduce using rule 140 (false_bottom -> .)
    ID              reduce using rule 140 (false_bottom -> .)
    CTE_INT         reduce using rule 140 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 140 (false_bottom -> .)
    TRUE            reduce using rule 140 (false_bottom -> .)
    FALSE           reduce using rule 140 (false_bottom -> .)

    false_bottom                   shift and go to state 158

state 119

    (100) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 159


state 120

    (106) expression -> exp . expression1
    (107) expression1 -> . LESSER relop exp top_relop
    (108) expression1 -> . GREATER relop exp top_relop
    (109) expression1 -> . EQUAL relop exp top_relop
    (110) expression1 -> . NOTEQUAL relop exp top_relop
    (111) expression1 -> . GREATEROREQUAL relop exp top_relop
    (112) expression1 -> . LESSEROREQUAL relop exp top_relop
    (113) expression1 -> . empty
    (160) empty -> .

    LESSER          shift and go to state 161
    GREATER         shift and go to state 162
    EQUAL           shift and go to state 163
    NOTEQUAL        shift and go to state 164
    GREATEROREQUAL  shift and go to state 165
    LESSEROREQUAL   shift and go to state 166
    RPAREN          reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)

    expression1                    shift and go to state 160
    empty                          shift and go to state 167

state 121

    (114) exp -> term . top_exp exp1
    (118) top_exp -> .

    MINUS           reduce using rule 118 (top_exp -> .)
    PLUS            reduce using rule 118 (top_exp -> .)
    LESSER          reduce using rule 118 (top_exp -> .)
    GREATER         reduce using rule 118 (top_exp -> .)
    EQUAL           reduce using rule 118 (top_exp -> .)
    NOTEQUAL        reduce using rule 118 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 118 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 118 (top_exp -> .)
    RPAREN          reduce using rule 118 (top_exp -> .)
    COMMA           reduce using rule 118 (top_exp -> .)
    RBRACKET        reduce using rule 118 (top_exp -> .)
    SEMICOLON       reduce using rule 118 (top_exp -> .)

    top_exp                        shift and go to state 168

state 122

    (119) term -> factor . top_factor term1
    (126) top_factor -> .

    DIVIDE          reduce using rule 126 (top_factor -> .)
    TIMES           reduce using rule 126 (top_factor -> .)
    MINUS           reduce using rule 126 (top_factor -> .)
    PLUS            reduce using rule 126 (top_factor -> .)
    LESSER          reduce using rule 126 (top_factor -> .)
    GREATER         reduce using rule 126 (top_factor -> .)
    EQUAL           reduce using rule 126 (top_factor -> .)
    NOTEQUAL        reduce using rule 126 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 126 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 126 (top_factor -> .)
    RPAREN          reduce using rule 126 (top_factor -> .)
    COMMA           reduce using rule 126 (top_factor -> .)
    RBRACKET        reduce using rule 126 (top_factor -> .)
    SEMICOLON       reduce using rule 126 (top_factor -> .)

    top_factor                     shift and go to state 169

state 123

    (124) factor -> var_cte .

    DIVIDE          reduce using rule 124 (factor -> var_cte .)
    TIMES           reduce using rule 124 (factor -> var_cte .)
    MINUS           reduce using rule 124 (factor -> var_cte .)
    PLUS            reduce using rule 124 (factor -> var_cte .)
    LESSER          reduce using rule 124 (factor -> var_cte .)
    GREATER         reduce using rule 124 (factor -> var_cte .)
    EQUAL           reduce using rule 124 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 124 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 124 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 124 (factor -> var_cte .)
    RPAREN          reduce using rule 124 (factor -> var_cte .)
    COMMA           reduce using rule 124 (factor -> var_cte .)
    RBRACKET        reduce using rule 124 (factor -> var_cte .)
    SEMICOLON       reduce using rule 124 (factor -> var_cte .)


state 124

    (125) factor -> ID . push_id
    (127) var_cte -> ID . getidvalue
    (131) var_cte -> ID . list getarrayvalue
    (143) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (142) push_id -> .
    (133) getidvalue -> .
    (26) list -> . LBRACKET CTE_INT RBRACKET
    (145) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for LESSER resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for GREATER resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for EQUAL resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 133 (getidvalue -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 133 (getidvalue -> .)
    DIVIDE          reduce using rule 133 (getidvalue -> .)
    TIMES           reduce using rule 133 (getidvalue -> .)
    MINUS           reduce using rule 133 (getidvalue -> .)
    PLUS            reduce using rule 133 (getidvalue -> .)
    LESSER          reduce using rule 133 (getidvalue -> .)
    GREATER         reduce using rule 133 (getidvalue -> .)
    EQUAL           reduce using rule 133 (getidvalue -> .)
    NOTEQUAL        reduce using rule 133 (getidvalue -> .)
    GREATEROREQUAL  reduce using rule 133 (getidvalue -> .)
    LESSEROREQUAL   reduce using rule 133 (getidvalue -> .)
    RPAREN          reduce using rule 133 (getidvalue -> .)
    COMMA           reduce using rule 133 (getidvalue -> .)
    RBRACKET        reduce using rule 133 (getidvalue -> .)
    SEMICOLON       reduce using rule 133 (getidvalue -> .)
    LBRACKET        shift and go to state 44
    LPAREN          reduce using rule 145 (check_name -> .)

  ! DIVIDE          [ reduce using rule 142 (push_id -> .) ]
  ! TIMES           [ reduce using rule 142 (push_id -> .) ]
  ! MINUS           [ reduce using rule 142 (push_id -> .) ]
  ! PLUS            [ reduce using rule 142 (push_id -> .) ]
  ! LESSER          [ reduce using rule 142 (push_id -> .) ]
  ! GREATER         [ reduce using rule 142 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 142 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 142 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 142 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 142 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 142 (push_id -> .) ]
  ! COMMA           [ reduce using rule 142 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 142 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 142 (push_id -> .) ]

    push_id                        shift and go to state 170
    getidvalue                     shift and go to state 171
    list                           shift and go to state 172
    check_name                     shift and go to state 92

state 125

    (128) var_cte -> CTE_INT . getvalue_i
    (134) getvalue_i -> .

    DIVIDE          reduce using rule 134 (getvalue_i -> .)
    TIMES           reduce using rule 134 (getvalue_i -> .)
    MINUS           reduce using rule 134 (getvalue_i -> .)
    PLUS            reduce using rule 134 (getvalue_i -> .)
    LESSER          reduce using rule 134 (getvalue_i -> .)
    GREATER         reduce using rule 134 (getvalue_i -> .)
    EQUAL           reduce using rule 134 (getvalue_i -> .)
    NOTEQUAL        reduce using rule 134 (getvalue_i -> .)
    GREATEROREQUAL  reduce using rule 134 (getvalue_i -> .)
    LESSEROREQUAL   reduce using rule 134 (getvalue_i -> .)
    RPAREN          reduce using rule 134 (getvalue_i -> .)
    COMMA           reduce using rule 134 (getvalue_i -> .)
    RBRACKET        reduce using rule 134 (getvalue_i -> .)
    SEMICOLON       reduce using rule 134 (getvalue_i -> .)

    getvalue_i                     shift and go to state 173

state 126

    (129) var_cte -> CTE_FLOAT . getvalue_f
    (135) getvalue_f -> .

    DIVIDE          reduce using rule 135 (getvalue_f -> .)
    TIMES           reduce using rule 135 (getvalue_f -> .)
    MINUS           reduce using rule 135 (getvalue_f -> .)
    PLUS            reduce using rule 135 (getvalue_f -> .)
    LESSER          reduce using rule 135 (getvalue_f -> .)
    GREATER         reduce using rule 135 (getvalue_f -> .)
    EQUAL           reduce using rule 135 (getvalue_f -> .)
    NOTEQUAL        reduce using rule 135 (getvalue_f -> .)
    GREATEROREQUAL  reduce using rule 135 (getvalue_f -> .)
    LESSEROREQUAL   reduce using rule 135 (getvalue_f -> .)
    RPAREN          reduce using rule 135 (getvalue_f -> .)
    COMMA           reduce using rule 135 (getvalue_f -> .)
    RBRACKET        reduce using rule 135 (getvalue_f -> .)
    SEMICOLON       reduce using rule 135 (getvalue_f -> .)

    getvalue_f                     shift and go to state 174

state 127

    (130) var_cte -> cte_bool . getvalue_b
    (136) getvalue_b -> .

    DIVIDE          reduce using rule 136 (getvalue_b -> .)
    TIMES           reduce using rule 136 (getvalue_b -> .)
    MINUS           reduce using rule 136 (getvalue_b -> .)
    PLUS            reduce using rule 136 (getvalue_b -> .)
    LESSER          reduce using rule 136 (getvalue_b -> .)
    GREATER         reduce using rule 136 (getvalue_b -> .)
    EQUAL           reduce using rule 136 (getvalue_b -> .)
    NOTEQUAL        reduce using rule 136 (getvalue_b -> .)
    GREATEROREQUAL  reduce using rule 136 (getvalue_b -> .)
    LESSEROREQUAL   reduce using rule 136 (getvalue_b -> .)
    RPAREN          reduce using rule 136 (getvalue_b -> .)
    COMMA           reduce using rule 136 (getvalue_b -> .)
    RBRACKET        reduce using rule 136 (getvalue_b -> .)
    SEMICOLON       reduce using rule 136 (getvalue_b -> .)

    getvalue_b                     shift and go to state 175

state 128

    (132) var_cte -> call . getcallvalue
    (97) getcallvalue -> .

    DIVIDE          reduce using rule 97 (getcallvalue -> .)
    TIMES           reduce using rule 97 (getcallvalue -> .)
    MINUS           reduce using rule 97 (getcallvalue -> .)
    PLUS            reduce using rule 97 (getcallvalue -> .)
    LESSER          reduce using rule 97 (getcallvalue -> .)
    GREATER         reduce using rule 97 (getcallvalue -> .)
    EQUAL           reduce using rule 97 (getcallvalue -> .)
    NOTEQUAL        reduce using rule 97 (getcallvalue -> .)
    GREATEROREQUAL  reduce using rule 97 (getcallvalue -> .)
    LESSEROREQUAL   reduce using rule 97 (getcallvalue -> .)
    RPAREN          reduce using rule 97 (getcallvalue -> .)
    COMMA           reduce using rule 97 (getcallvalue -> .)
    RBRACKET        reduce using rule 97 (getcallvalue -> .)
    SEMICOLON       reduce using rule 97 (getcallvalue -> .)

    getcallvalue                   shift and go to state 176

state 129

    (98) cte_bool -> TRUE .

    DIVIDE          reduce using rule 98 (cte_bool -> TRUE .)
    TIMES           reduce using rule 98 (cte_bool -> TRUE .)
    MINUS           reduce using rule 98 (cte_bool -> TRUE .)
    PLUS            reduce using rule 98 (cte_bool -> TRUE .)
    LESSER          reduce using rule 98 (cte_bool -> TRUE .)
    GREATER         reduce using rule 98 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 98 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 98 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 98 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 98 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 98 (cte_bool -> TRUE .)
    COMMA           reduce using rule 98 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 98 (cte_bool -> TRUE .)
    SEMICOLON       reduce using rule 98 (cte_bool -> TRUE .)


state 130

    (99) cte_bool -> FALSE .

    DIVIDE          reduce using rule 99 (cte_bool -> FALSE .)
    TIMES           reduce using rule 99 (cte_bool -> FALSE .)
    MINUS           reduce using rule 99 (cte_bool -> FALSE .)
    PLUS            reduce using rule 99 (cte_bool -> FALSE .)
    LESSER          reduce using rule 99 (cte_bool -> FALSE .)
    GREATER         reduce using rule 99 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 99 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 99 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 99 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 99 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 99 (cte_bool -> FALSE .)
    COMMA           reduce using rule 99 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 99 (cte_bool -> FALSE .)
    SEMICOLON       reduce using rule 99 (cte_bool -> FALSE .)


state 131

    (82) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 132

    (83) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 133

    (81) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 134

    (80) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 135

    (84) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 136

    (79) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 137

    (52) color_cte -> RED .

    RPAREN          reduce using rule 52 (color_cte -> RED .)


state 138

    (53) color_cte -> BLUE .

    RPAREN          reduce using rule 53 (color_cte -> BLUE .)


state 139

    (54) color_cte -> YELLOW .

    RPAREN          reduce using rule 54 (color_cte -> YELLOW .)


state 140

    (55) color_cte -> GREEN .

    RPAREN          reduce using rule 55 (color_cte -> GREEN .)


state 141

    (56) color_cte -> PINK .

    RPAREN          reduce using rule 56 (color_cte -> PINK .)


state 142

    (57) color_cte -> PURPLE .

    RPAREN          reduce using rule 57 (color_cte -> PURPLE .)


state 143

    (87) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 144

    (88) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 145

    (89) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 146

    (85) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 147

    (86) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 148

    (44) while -> WHILE while_return LPAREN . expression RPAREN type_check LBRACE b2 RBRACE end_while
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 188
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 149

    (90) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 150

    (91) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 151

    (154) print -> PRINT LPAREN expression . to_screen print_multi RPAREN SEMICOLON
    (157) to_screen -> .

    COMMA           reduce using rule 157 (to_screen -> .)
    RPAREN          reduce using rule 157 (to_screen -> .)

    to_screen                      shift and go to state 191

state 152

    (63) params -> type ID . save_par params1
    (78) save_par -> .

    COMMA           reduce using rule 78 (save_par -> .)
    RPAREN          reduce using rule 78 (save_par -> .)

    save_par                       shift and go to state 192

state 153

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN . funcvars LBRACE statements return RBRACE end_func funcs3
    (74) funcvars -> . vars local_vars
    (75) funcvars -> . empty
    (16) vars -> . VAR vars2
    (160) empty -> .

    VAR             shift and go to state 12
    LBRACE          reduce using rule 160 (empty -> .)

    funcvars                       shift and go to state 193
    vars                           shift and go to state 194
    empty                          shift and go to state 195

state 154

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN . funcvars LBRACE statements RBRACE end_func funcs3
    (74) funcvars -> . vars local_vars
    (75) funcvars -> . empty
    (16) vars -> . VAR vars2
    (160) empty -> .

    VAR             shift and go to state 12
    LBRACE          reduce using rule 160 (empty -> .)

    funcvars                       shift and go to state 196
    vars                           shift and go to state 194
    empty                          shift and go to state 195

state 155

    (47) assignment -> ID verify_id ASSIGN push_sign . expression set_value SEMICOLON
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 197
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 156

    (48) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 198


state 157

    (143) call -> ID check_name LPAREN create_era . call1 RPAREN check_params SEMICOLON gosub checkreturn
    (148) call1 -> . expression argument call2
    (149) call1 -> . call2
    (106) expression -> . exp expression1
    (150) call2 -> . COMMA expression argument call2
    (151) call2 -> . empty
    (114) exp -> . term top_exp exp1
    (160) empty -> .
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    COMMA           shift and go to state 202
    RPAREN          reduce using rule 160 (empty -> .)
    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    call1                          shift and go to state 199
    expression                     shift and go to state 200
    call2                          shift and go to state 201
    exp                            shift and go to state 120
    empty                          shift and go to state 203
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 158

    (123) factor -> LPAREN false_bottom . expression RPAREN end_par
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 204
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 159

    (100) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (103) type_check -> .

    LBRACE          reduce using rule 103 (type_check -> .)

    type_check                     shift and go to state 205

state 160

    (106) expression -> exp expression1 .

    RPAREN          reduce using rule 106 (expression -> exp expression1 .)
    COMMA           reduce using rule 106 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 106 (expression -> exp expression1 .)


state 161

    (107) expression1 -> LESSER . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 206

state 162

    (108) expression1 -> GREATER . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 207

state 163

    (109) expression1 -> EQUAL . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 208

state 164

    (110) expression1 -> NOTEQUAL . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 209

state 165

    (111) expression1 -> GREATEROREQUAL . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 210

state 166

    (112) expression1 -> LESSEROREQUAL . relop exp top_relop
    (137) relop -> .

    LPAREN          reduce using rule 137 (relop -> .)
    ID              reduce using rule 137 (relop -> .)
    CTE_INT         reduce using rule 137 (relop -> .)
    CTE_FLOAT       reduce using rule 137 (relop -> .)
    TRUE            reduce using rule 137 (relop -> .)
    FALSE           reduce using rule 137 (relop -> .)

    relop                          shift and go to state 211

state 167

    (113) expression1 -> empty .

    RPAREN          reduce using rule 113 (expression1 -> empty .)
    COMMA           reduce using rule 113 (expression1 -> empty .)
    SEMICOLON       reduce using rule 113 (expression1 -> empty .)


state 168

    (114) exp -> term top_exp . exp1
    (115) exp1 -> . MINUS push_sign exp
    (116) exp1 -> . PLUS push_sign exp
    (117) exp1 -> . empty
    (160) empty -> .

    MINUS           shift and go to state 213
    PLUS            shift and go to state 214
    LESSER          reduce using rule 160 (empty -> .)
    GREATER         reduce using rule 160 (empty -> .)
    EQUAL           reduce using rule 160 (empty -> .)
    NOTEQUAL        reduce using rule 160 (empty -> .)
    GREATEROREQUAL  reduce using rule 160 (empty -> .)
    LESSEROREQUAL   reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)

    exp1                           shift and go to state 212
    empty                          shift and go to state 215

state 169

    (119) term -> factor top_factor . term1
    (120) term1 -> . DIVIDE push_sign term
    (121) term1 -> . TIMES push_sign term
    (122) term1 -> . empty
    (160) empty -> .

    DIVIDE          shift and go to state 217
    TIMES           shift and go to state 218
    MINUS           reduce using rule 160 (empty -> .)
    PLUS            reduce using rule 160 (empty -> .)
    LESSER          reduce using rule 160 (empty -> .)
    GREATER         reduce using rule 160 (empty -> .)
    EQUAL           reduce using rule 160 (empty -> .)
    NOTEQUAL        reduce using rule 160 (empty -> .)
    GREATEROREQUAL  reduce using rule 160 (empty -> .)
    LESSEROREQUAL   reduce using rule 160 (empty -> .)
    RPAREN          reduce using rule 160 (empty -> .)
    COMMA           reduce using rule 160 (empty -> .)
    RBRACKET        reduce using rule 160 (empty -> .)
    SEMICOLON       reduce using rule 160 (empty -> .)

    term1                          shift and go to state 216
    empty                          shift and go to state 219

state 170

    (125) factor -> ID push_id .

    DIVIDE          reduce using rule 125 (factor -> ID push_id .)
    TIMES           reduce using rule 125 (factor -> ID push_id .)
    MINUS           reduce using rule 125 (factor -> ID push_id .)
    PLUS            reduce using rule 125 (factor -> ID push_id .)
    LESSER          reduce using rule 125 (factor -> ID push_id .)
    GREATER         reduce using rule 125 (factor -> ID push_id .)
    EQUAL           reduce using rule 125 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 125 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 125 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 125 (factor -> ID push_id .)
    RPAREN          reduce using rule 125 (factor -> ID push_id .)
    COMMA           reduce using rule 125 (factor -> ID push_id .)
    RBRACKET        reduce using rule 125 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 125 (factor -> ID push_id .)


state 171

    (127) var_cte -> ID getidvalue .

    DIVIDE          reduce using rule 127 (var_cte -> ID getidvalue .)
    TIMES           reduce using rule 127 (var_cte -> ID getidvalue .)
    MINUS           reduce using rule 127 (var_cte -> ID getidvalue .)
    PLUS            reduce using rule 127 (var_cte -> ID getidvalue .)
    LESSER          reduce using rule 127 (var_cte -> ID getidvalue .)
    GREATER         reduce using rule 127 (var_cte -> ID getidvalue .)
    EQUAL           reduce using rule 127 (var_cte -> ID getidvalue .)
    NOTEQUAL        reduce using rule 127 (var_cte -> ID getidvalue .)
    GREATEROREQUAL  reduce using rule 127 (var_cte -> ID getidvalue .)
    LESSEROREQUAL   reduce using rule 127 (var_cte -> ID getidvalue .)
    RPAREN          reduce using rule 127 (var_cte -> ID getidvalue .)
    COMMA           reduce using rule 127 (var_cte -> ID getidvalue .)
    RBRACKET        reduce using rule 127 (var_cte -> ID getidvalue .)
    SEMICOLON       reduce using rule 127 (var_cte -> ID getidvalue .)


state 172

    (131) var_cte -> ID list . getarrayvalue
    (96) getarrayvalue -> .

    DIVIDE          reduce using rule 96 (getarrayvalue -> .)
    TIMES           reduce using rule 96 (getarrayvalue -> .)
    MINUS           reduce using rule 96 (getarrayvalue -> .)
    PLUS            reduce using rule 96 (getarrayvalue -> .)
    LESSER          reduce using rule 96 (getarrayvalue -> .)
    GREATER         reduce using rule 96 (getarrayvalue -> .)
    EQUAL           reduce using rule 96 (getarrayvalue -> .)
    NOTEQUAL        reduce using rule 96 (getarrayvalue -> .)
    GREATEROREQUAL  reduce using rule 96 (getarrayvalue -> .)
    LESSEROREQUAL   reduce using rule 96 (getarrayvalue -> .)
    RPAREN          reduce using rule 96 (getarrayvalue -> .)
    COMMA           reduce using rule 96 (getarrayvalue -> .)
    RBRACKET        reduce using rule 96 (getarrayvalue -> .)
    SEMICOLON       reduce using rule 96 (getarrayvalue -> .)

    getarrayvalue                  shift and go to state 220

state 173

    (128) var_cte -> CTE_INT getvalue_i .

    DIVIDE          reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    TIMES           reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    MINUS           reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    PLUS            reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    LESSER          reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    GREATER         reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    EQUAL           reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    NOTEQUAL        reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    GREATEROREQUAL  reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    LESSEROREQUAL   reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    RPAREN          reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    COMMA           reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    RBRACKET        reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)
    SEMICOLON       reduce using rule 128 (var_cte -> CTE_INT getvalue_i .)


state 174

    (129) var_cte -> CTE_FLOAT getvalue_f .

    DIVIDE          reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    TIMES           reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    MINUS           reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    PLUS            reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSER          reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATER         reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    EQUAL           reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    NOTEQUAL        reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATEROREQUAL  reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSEROREQUAL   reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    RPAREN          reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    COMMA           reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    RBRACKET        reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)
    SEMICOLON       reduce using rule 129 (var_cte -> CTE_FLOAT getvalue_f .)


state 175

    (130) var_cte -> cte_bool getvalue_b .

    DIVIDE          reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    TIMES           reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    MINUS           reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    PLUS            reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    LESSER          reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    GREATER         reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    EQUAL           reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    NOTEQUAL        reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    GREATEROREQUAL  reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    LESSEROREQUAL   reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    RPAREN          reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    COMMA           reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    RBRACKET        reduce using rule 130 (var_cte -> cte_bool getvalue_b .)
    SEMICOLON       reduce using rule 130 (var_cte -> cte_bool getvalue_b .)


state 176

    (132) var_cte -> call getcallvalue .

    DIVIDE          reduce using rule 132 (var_cte -> call getcallvalue .)
    TIMES           reduce using rule 132 (var_cte -> call getcallvalue .)
    MINUS           reduce using rule 132 (var_cte -> call getcallvalue .)
    PLUS            reduce using rule 132 (var_cte -> call getcallvalue .)
    LESSER          reduce using rule 132 (var_cte -> call getcallvalue .)
    GREATER         reduce using rule 132 (var_cte -> call getcallvalue .)
    EQUAL           reduce using rule 132 (var_cte -> call getcallvalue .)
    NOTEQUAL        reduce using rule 132 (var_cte -> call getcallvalue .)
    GREATEROREQUAL  reduce using rule 132 (var_cte -> call getcallvalue .)
    LESSEROREQUAL   reduce using rule 132 (var_cte -> call getcallvalue .)
    RPAREN          reduce using rule 132 (var_cte -> call getcallvalue .)
    COMMA           reduce using rule 132 (var_cte -> call getcallvalue .)
    RBRACKET        reduce using rule 132 (var_cte -> call getcallvalue .)
    SEMICOLON       reduce using rule 132 (var_cte -> call getcallvalue .)


state 177

    (82) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 221
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 178

    (83) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 222
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 179

    (81) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 223


state 180

    (80) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 224


state 181

    (84) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 225
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 182

    (79) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 183

    (87) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 184

    (88) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 185

    (89) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 186

    (85) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 187

    (86) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 188

    (44) while -> WHILE while_return LPAREN expression . RPAREN type_check LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 232


state 189

    (90) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 190

    (91) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 191

    (154) print -> PRINT LPAREN expression to_screen . print_multi RPAREN SEMICOLON
    (155) print_multi -> . COMMA expression to_screen print_multi
    (156) print_multi -> . empty
    (160) empty -> .

    COMMA           shift and go to state 234
    RPAREN          reduce using rule 160 (empty -> .)

    print_multi                    shift and go to state 233
    empty                          shift and go to state 235

state 192

    (63) params -> type ID save_par . params1
    (65) params1 -> . COMMA type ID save_par params1
    (66) params1 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 237
    RPAREN          reduce using rule 160 (empty -> .)

    params1                        shift and go to state 236
    empty                          shift and go to state 238

state 193

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars . LBRACE statements return RBRACE end_func funcs3

    LBRACE          shift and go to state 239


state 194

    (74) funcvars -> vars . local_vars
    (13) local_vars -> .

    LBRACE          reduce using rule 13 (local_vars -> .)

    local_vars                     shift and go to state 240

state 195

    (75) funcvars -> empty .

    LBRACE          reduce using rule 75 (funcvars -> empty .)


state 196

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars . LBRACE statements RBRACE end_func funcs3

    LBRACE          shift and go to state 241


state 197

    (47) assignment -> ID verify_id ASSIGN push_sign expression . set_value SEMICOLON
    (50) set_value -> .

    SEMICOLON       reduce using rule 50 (set_value -> .)

    set_value                      shift and go to state 242

state 198

    (48) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 243


state 199

    (143) call -> ID check_name LPAREN create_era call1 . RPAREN check_params SEMICOLON gosub checkreturn

    RPAREN          shift and go to state 244


state 200

    (148) call1 -> expression . argument call2
    (152) argument -> .

    COMMA           reduce using rule 152 (argument -> .)
    RPAREN          reduce using rule 152 (argument -> .)

    argument                       shift and go to state 245

state 201

    (149) call1 -> call2 .

    RPAREN          reduce using rule 149 (call1 -> call2 .)


state 202

    (150) call2 -> COMMA . expression argument call2
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 246
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 203

    (151) call2 -> empty .

    RPAREN          reduce using rule 151 (call2 -> empty .)


state 204

    (123) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 247


state 205

    (100) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 248


state 206

    (107) expression1 -> LESSER relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 249
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 207

    (108) expression1 -> GREATER relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 250
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 208

    (109) expression1 -> EQUAL relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 251
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 209

    (110) expression1 -> NOTEQUAL relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 252
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 210

    (111) expression1 -> GREATEROREQUAL relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 253
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 211

    (112) expression1 -> LESSEROREQUAL relop . exp top_relop
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 254
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 212

    (114) exp -> term top_exp exp1 .

    LESSER          reduce using rule 114 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 114 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 114 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 114 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 114 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 114 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 114 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 114 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 114 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 114 (exp -> term top_exp exp1 .)


state 213

    (115) exp1 -> MINUS . push_sign exp
    (139) push_sign -> .

    LPAREN          reduce using rule 139 (push_sign -> .)
    ID              reduce using rule 139 (push_sign -> .)
    CTE_INT         reduce using rule 139 (push_sign -> .)
    CTE_FLOAT       reduce using rule 139 (push_sign -> .)
    TRUE            reduce using rule 139 (push_sign -> .)
    FALSE           reduce using rule 139 (push_sign -> .)

    push_sign                      shift and go to state 255

state 214

    (116) exp1 -> PLUS . push_sign exp
    (139) push_sign -> .

    LPAREN          reduce using rule 139 (push_sign -> .)
    ID              reduce using rule 139 (push_sign -> .)
    CTE_INT         reduce using rule 139 (push_sign -> .)
    CTE_FLOAT       reduce using rule 139 (push_sign -> .)
    TRUE            reduce using rule 139 (push_sign -> .)
    FALSE           reduce using rule 139 (push_sign -> .)

    push_sign                      shift and go to state 256

state 215

    (117) exp1 -> empty .

    LESSER          reduce using rule 117 (exp1 -> empty .)
    GREATER         reduce using rule 117 (exp1 -> empty .)
    EQUAL           reduce using rule 117 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 117 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 117 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 117 (exp1 -> empty .)
    RPAREN          reduce using rule 117 (exp1 -> empty .)
    COMMA           reduce using rule 117 (exp1 -> empty .)
    RBRACKET        reduce using rule 117 (exp1 -> empty .)
    SEMICOLON       reduce using rule 117 (exp1 -> empty .)


state 216

    (119) term -> factor top_factor term1 .

    MINUS           reduce using rule 119 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 119 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 119 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 119 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 119 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 119 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 119 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 119 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 119 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 119 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 119 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 119 (term -> factor top_factor term1 .)


state 217

    (120) term1 -> DIVIDE . push_sign term
    (139) push_sign -> .

    LPAREN          reduce using rule 139 (push_sign -> .)
    ID              reduce using rule 139 (push_sign -> .)
    CTE_INT         reduce using rule 139 (push_sign -> .)
    CTE_FLOAT       reduce using rule 139 (push_sign -> .)
    TRUE            reduce using rule 139 (push_sign -> .)
    FALSE           reduce using rule 139 (push_sign -> .)

    push_sign                      shift and go to state 257

state 218

    (121) term1 -> TIMES . push_sign term
    (139) push_sign -> .

    LPAREN          reduce using rule 139 (push_sign -> .)
    ID              reduce using rule 139 (push_sign -> .)
    CTE_INT         reduce using rule 139 (push_sign -> .)
    CTE_FLOAT       reduce using rule 139 (push_sign -> .)
    TRUE            reduce using rule 139 (push_sign -> .)
    FALSE           reduce using rule 139 (push_sign -> .)

    push_sign                      shift and go to state 258

state 219

    (122) term1 -> empty .

    MINUS           reduce using rule 122 (term1 -> empty .)
    PLUS            reduce using rule 122 (term1 -> empty .)
    LESSER          reduce using rule 122 (term1 -> empty .)
    GREATER         reduce using rule 122 (term1 -> empty .)
    EQUAL           reduce using rule 122 (term1 -> empty .)
    NOTEQUAL        reduce using rule 122 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 122 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 122 (term1 -> empty .)
    RPAREN          reduce using rule 122 (term1 -> empty .)
    COMMA           reduce using rule 122 (term1 -> empty .)
    RBRACKET        reduce using rule 122 (term1 -> empty .)
    SEMICOLON       reduce using rule 122 (term1 -> empty .)


state 220

    (131) var_cte -> ID list getarrayvalue .

    DIVIDE          reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    TIMES           reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    MINUS           reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    PLUS            reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    LESSER          reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    GREATER         reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    EQUAL           reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    NOTEQUAL        reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    GREATEROREQUAL  reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    LESSEROREQUAL   reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    RPAREN          reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    COMMA           reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    RBRACKET        reduce using rule 131 (var_cte -> ID list getarrayvalue .)
    SEMICOLON       reduce using rule 131 (var_cte -> ID list getarrayvalue .)


state 221

    (82) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 259


state 222

    (83) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 260


state 223

    (81) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 224

    (80) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 225

    (84) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 261


state 226

    (79) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PRINT           reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 79 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 227

    (87) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 87 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 228

    (88) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 229

    (89) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 230

    (85) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 85 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 231

    (86) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 86 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 232

    (44) while -> WHILE while_return LPAREN expression RPAREN . type_check LBRACE b2 RBRACE end_while
    (103) type_check -> .

    LBRACE          reduce using rule 103 (type_check -> .)

    type_check                     shift and go to state 262

state 233

    (154) print -> PRINT LPAREN expression to_screen print_multi . RPAREN SEMICOLON

    RPAREN          shift and go to state 263


state 234

    (155) print_multi -> COMMA . expression to_screen print_multi
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 264
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 235

    (156) print_multi -> empty .

    RPAREN          reduce using rule 156 (print_multi -> empty .)


state 236

    (63) params -> type ID save_par params1 .

    RPAREN          reduce using rule 63 (params -> type ID save_par params1 .)


state 237

    (65) params1 -> COMMA . type ID save_par params1
    (92) type -> . INT
    (93) type -> . FLOAT
    (94) type -> . STRING
    (95) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 265

state 238

    (66) params1 -> empty .

    RPAREN          reduce using rule 66 (params1 -> empty .)


state 239

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE . statements return RBRACE end_func funcs3
    (69) statements -> . statements statute
    (70) statements -> . empty
    (160) empty -> .

    RETURN          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)

    statements                     shift and go to state 266
    empty                          shift and go to state 267

state 240

    (74) funcvars -> vars local_vars .

    LBRACE          reduce using rule 74 (funcvars -> vars local_vars .)


state 241

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE . statements RBRACE end_func funcs3
    (69) statements -> . statements statute
    (70) statements -> . empty
    (160) empty -> .

    RBRACE          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)

    statements                     shift and go to state 268
    empty                          shift and go to state 267

state 242

    (47) assignment -> ID verify_id ASSIGN push_sign expression set_value . SEMICOLON

    SEMICOLON       shift and go to state 269


state 243

    (48) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 120
    expression                     shift and go to state 270
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 244

    (143) call -> ID check_name LPAREN create_era call1 RPAREN . check_params SEMICOLON gosub checkreturn
    (153) check_params -> .

    SEMICOLON       reduce using rule 153 (check_params -> .)

    check_params                   shift and go to state 271

state 245

    (148) call1 -> expression argument . call2
    (150) call2 -> . COMMA expression argument call2
    (151) call2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 202
    RPAREN          reduce using rule 160 (empty -> .)

    call2                          shift and go to state 272
    empty                          shift and go to state 203

state 246

    (150) call2 -> COMMA expression . argument call2
    (152) argument -> .

    COMMA           reduce using rule 152 (argument -> .)
    RPAREN          reduce using rule 152 (argument -> .)

    argument                       shift and go to state 273

state 247

    (123) factor -> LPAREN false_bottom expression RPAREN . end_par
    (141) end_par -> .

    DIVIDE          reduce using rule 141 (end_par -> .)
    TIMES           reduce using rule 141 (end_par -> .)
    MINUS           reduce using rule 141 (end_par -> .)
    PLUS            reduce using rule 141 (end_par -> .)
    LESSER          reduce using rule 141 (end_par -> .)
    GREATER         reduce using rule 141 (end_par -> .)
    EQUAL           reduce using rule 141 (end_par -> .)
    NOTEQUAL        reduce using rule 141 (end_par -> .)
    GREATEROREQUAL  reduce using rule 141 (end_par -> .)
    LESSEROREQUAL   reduce using rule 141 (end_par -> .)
    RPAREN          reduce using rule 141 (end_par -> .)
    COMMA           reduce using rule 141 (end_par -> .)
    RBRACKET        reduce using rule 141 (end_par -> .)
    SEMICOLON       reduce using rule 141 (end_par -> .)

    end_par                        shift and go to state 274

state 248

    (100) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (14) b2 -> . b2 statute
    (15) b2 -> . empty
    (160) empty -> .

    RBRACE          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)

    b2                             shift and go to state 275
    empty                          shift and go to state 38

state 249

    (107) expression1 -> LESSER relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 276

state 250

    (108) expression1 -> GREATER relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 277

state 251

    (109) expression1 -> EQUAL relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 278

state 252

    (110) expression1 -> NOTEQUAL relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 279

state 253

    (111) expression1 -> GREATEROREQUAL relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 280

state 254

    (112) expression1 -> LESSEROREQUAL relop exp . top_relop
    (138) top_relop -> .

    RPAREN          reduce using rule 138 (top_relop -> .)
    COMMA           reduce using rule 138 (top_relop -> .)
    SEMICOLON       reduce using rule 138 (top_relop -> .)

    top_relop                      shift and go to state 281

state 255

    (115) exp1 -> MINUS push_sign . exp
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 282
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 256

    (116) exp1 -> PLUS push_sign . exp
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 283
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 257

    (120) term1 -> DIVIDE push_sign . term
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    term                           shift and go to state 284
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 258

    (121) term1 -> TIMES push_sign . term
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    term                           shift and go to state 285
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 259

    (82) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 286


state 260

    (83) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 287


state 261

    (84) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 288


state 262

    (44) while -> WHILE while_return LPAREN expression RPAREN type_check . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 289


state 263

    (154) print -> PRINT LPAREN expression to_screen print_multi RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 290


state 264

    (155) print_multi -> COMMA expression . to_screen print_multi
    (157) to_screen -> .

    COMMA           reduce using rule 157 (to_screen -> .)
    RPAREN          reduce using rule 157 (to_screen -> .)

    to_screen                      shift and go to state 291

state 265

    (65) params1 -> COMMA type . ID save_par params1

    ID              shift and go to state 292


state 266

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements . return RBRACE end_func funcs3
    (69) statements -> statements . statute
    (158) return -> . RETURN expression savereturn SEMICOLON
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RETURN          shift and go to state 295
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    return                         shift and go to state 293
    statute                        shift and go to state 294
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 267

    (70) statements -> empty .

    RETURN          reduce using rule 70 (statements -> empty .)
    ID              reduce using rule 70 (statements -> empty .)
    IF              reduce using rule 70 (statements -> empty .)
    TRIANGLE        reduce using rule 70 (statements -> empty .)
    RECTANGLE       reduce using rule 70 (statements -> empty .)
    SQUARE          reduce using rule 70 (statements -> empty .)
    CIRCLE          reduce using rule 70 (statements -> empty .)
    POLIGON         reduce using rule 70 (statements -> empty .)
    COLOR           reduce using rule 70 (statements -> empty .)
    PENSIZE         reduce using rule 70 (statements -> empty .)
    PENFORWARD      reduce using rule 70 (statements -> empty .)
    PENBACK         reduce using rule 70 (statements -> empty .)
    ROTATE          reduce using rule 70 (statements -> empty .)
    WHILE           reduce using rule 70 (statements -> empty .)
    PENON           reduce using rule 70 (statements -> empty .)
    PENOFF          reduce using rule 70 (statements -> empty .)
    PRINT           reduce using rule 70 (statements -> empty .)
    RBRACE          reduce using rule 70 (statements -> empty .)


state 268

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements . RBRACE end_func funcs3
    (69) statements -> statements . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 296
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 294
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 269

    (47) assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .

    ID              reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    IF              reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    TRIANGLE        reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RECTANGLE       reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    SQUARE          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    CIRCLE          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    POLIGON         reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    COLOR           reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENSIZE         reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENFORWARD      reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENBACK         reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    ROTATE          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    WHILE           reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENON           reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENOFF          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PRINT           reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RBRACE          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RETURN          reduce using rule 47 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)


state 270

    (48) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 297


state 271

    (143) call -> ID check_name LPAREN create_era call1 RPAREN check_params . SEMICOLON gosub checkreturn

    SEMICOLON       shift and go to state 298


state 272

    (148) call1 -> expression argument call2 .

    RPAREN          reduce using rule 148 (call1 -> expression argument call2 .)


state 273

    (150) call2 -> COMMA expression argument . call2
    (150) call2 -> . COMMA expression argument call2
    (151) call2 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 202
    RPAREN          reduce using rule 160 (empty -> .)

    call2                          shift and go to state 299
    empty                          shift and go to state 203

state 274

    (123) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 123 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 275

    (100) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (14) b2 -> b2 . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 300
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 276

    (107) expression1 -> LESSER relop exp top_relop .

    RPAREN          reduce using rule 107 (expression1 -> LESSER relop exp top_relop .)
    COMMA           reduce using rule 107 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 107 (expression1 -> LESSER relop exp top_relop .)


state 277

    (108) expression1 -> GREATER relop exp top_relop .

    RPAREN          reduce using rule 108 (expression1 -> GREATER relop exp top_relop .)
    COMMA           reduce using rule 108 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 108 (expression1 -> GREATER relop exp top_relop .)


state 278

    (109) expression1 -> EQUAL relop exp top_relop .

    RPAREN          reduce using rule 109 (expression1 -> EQUAL relop exp top_relop .)
    COMMA           reduce using rule 109 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 109 (expression1 -> EQUAL relop exp top_relop .)


state 279

    (110) expression1 -> NOTEQUAL relop exp top_relop .

    RPAREN          reduce using rule 110 (expression1 -> NOTEQUAL relop exp top_relop .)
    COMMA           reduce using rule 110 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 110 (expression1 -> NOTEQUAL relop exp top_relop .)


state 280

    (111) expression1 -> GREATEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 111 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 111 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 111 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 281

    (112) expression1 -> LESSEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 112 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 112 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 112 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 282

    (115) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 115 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 115 (exp1 -> MINUS push_sign exp .)


state 283

    (116) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 116 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 116 (exp1 -> PLUS push_sign exp .)


state 284

    (120) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 120 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 120 (term1 -> DIVIDE push_sign term .)


state 285

    (121) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 121 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 121 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 121 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 121 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 121 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 121 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 121 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 121 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 121 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 121 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 121 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 121 (term1 -> TIMES push_sign term .)


state 286

    (82) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 287

    (83) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 288

    (84) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 84 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 289

    (44) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE . b2 RBRACE end_while
    (14) b2 -> . b2 statute
    (15) b2 -> . empty
    (160) empty -> .

    RBRACE          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)

    b2                             shift and go to state 301
    empty                          shift and go to state 38

state 290

    (154) print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .

    ID              reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    IF              reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    SQUARE          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    POLIGON         reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    COLOR           reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENBACK         reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    ROTATE          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    WHILE           reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENON           reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENOFF          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PRINT           reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RBRACE          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RETURN          reduce using rule 154 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)


state 291

    (155) print_multi -> COMMA expression to_screen . print_multi
    (155) print_multi -> . COMMA expression to_screen print_multi
    (156) print_multi -> . empty
    (160) empty -> .

    COMMA           shift and go to state 234
    RPAREN          reduce using rule 160 (empty -> .)

    print_multi                    shift and go to state 302
    empty                          shift and go to state 235

state 292

    (65) params1 -> COMMA type ID . save_par params1
    (78) save_par -> .

    COMMA           reduce using rule 78 (save_par -> .)
    RPAREN          reduce using rule 78 (save_par -> .)

    save_par                       shift and go to state 303

state 293

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return . RBRACE end_func funcs3

    RBRACE          shift and go to state 304


state 294

    (69) statements -> statements statute .

    RETURN          reduce using rule 69 (statements -> statements statute .)
    ID              reduce using rule 69 (statements -> statements statute .)
    IF              reduce using rule 69 (statements -> statements statute .)
    TRIANGLE        reduce using rule 69 (statements -> statements statute .)
    RECTANGLE       reduce using rule 69 (statements -> statements statute .)
    SQUARE          reduce using rule 69 (statements -> statements statute .)
    CIRCLE          reduce using rule 69 (statements -> statements statute .)
    POLIGON         reduce using rule 69 (statements -> statements statute .)
    COLOR           reduce using rule 69 (statements -> statements statute .)
    PENSIZE         reduce using rule 69 (statements -> statements statute .)
    PENFORWARD      reduce using rule 69 (statements -> statements statute .)
    PENBACK         reduce using rule 69 (statements -> statements statute .)
    ROTATE          reduce using rule 69 (statements -> statements statute .)
    WHILE           reduce using rule 69 (statements -> statements statute .)
    PENON           reduce using rule 69 (statements -> statements statute .)
    PENOFF          reduce using rule 69 (statements -> statements statute .)
    PRINT           reduce using rule 69 (statements -> statements statute .)
    RBRACE          reduce using rule 69 (statements -> statements statute .)


state 295

    (158) return -> RETURN . expression savereturn SEMICOLON
    (106) expression -> . exp expression1
    (114) exp -> . term top_exp exp1
    (119) term -> . factor top_factor term1
    (123) factor -> . LPAREN false_bottom expression RPAREN end_par
    (124) factor -> . var_cte
    (125) factor -> . ID push_id
    (127) var_cte -> . ID getidvalue
    (128) var_cte -> . CTE_INT getvalue_i
    (129) var_cte -> . CTE_FLOAT getvalue_f
    (130) var_cte -> . cte_bool getvalue_b
    (131) var_cte -> . ID list getarrayvalue
    (132) var_cte -> . call getcallvalue
    (98) cte_bool -> . TRUE
    (99) cte_bool -> . FALSE
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 305
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 296

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE . end_func funcs3
    (77) end_func -> .

    FUNC            reduce using rule 77 (end_func -> .)
    VAR             reduce using rule 77 (end_func -> .)
    DAVINCI         reduce using rule 77 (end_func -> .)

    end_func                       shift and go to state 306

state 297

    (48) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 48 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 298

    (143) call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON . gosub checkreturn
    (147) gosub -> .

    ID              reduce using rule 147 (gosub -> .)
    IF              reduce using rule 147 (gosub -> .)
    TRIANGLE        reduce using rule 147 (gosub -> .)
    RECTANGLE       reduce using rule 147 (gosub -> .)
    SQUARE          reduce using rule 147 (gosub -> .)
    CIRCLE          reduce using rule 147 (gosub -> .)
    POLIGON         reduce using rule 147 (gosub -> .)
    COLOR           reduce using rule 147 (gosub -> .)
    PENSIZE         reduce using rule 147 (gosub -> .)
    PENFORWARD      reduce using rule 147 (gosub -> .)
    PENBACK         reduce using rule 147 (gosub -> .)
    ROTATE          reduce using rule 147 (gosub -> .)
    WHILE           reduce using rule 147 (gosub -> .)
    PENON           reduce using rule 147 (gosub -> .)
    PENOFF          reduce using rule 147 (gosub -> .)
    PRINT           reduce using rule 147 (gosub -> .)
    RBRACE          reduce using rule 147 (gosub -> .)
    DIVIDE          reduce using rule 147 (gosub -> .)
    TIMES           reduce using rule 147 (gosub -> .)
    MINUS           reduce using rule 147 (gosub -> .)
    PLUS            reduce using rule 147 (gosub -> .)
    LESSER          reduce using rule 147 (gosub -> .)
    GREATER         reduce using rule 147 (gosub -> .)
    EQUAL           reduce using rule 147 (gosub -> .)
    NOTEQUAL        reduce using rule 147 (gosub -> .)
    GREATEROREQUAL  reduce using rule 147 (gosub -> .)
    LESSEROREQUAL   reduce using rule 147 (gosub -> .)
    RPAREN          reduce using rule 147 (gosub -> .)
    COMMA           reduce using rule 147 (gosub -> .)
    RBRACKET        reduce using rule 147 (gosub -> .)
    SEMICOLON       reduce using rule 147 (gosub -> .)
    RETURN          reduce using rule 147 (gosub -> .)

    gosub                          shift and go to state 307

state 299

    (150) call2 -> COMMA expression argument call2 .

    RPAREN          reduce using rule 150 (call2 -> COMMA expression argument call2 .)


state 300

    (100) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (101) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (102) condition1 -> . empty
    (104) gotoElse -> .
    (160) empty -> .

    ELSE            reduce using rule 104 (gotoElse -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)
    RBRACE          reduce using rule 160 (empty -> .)
    RETURN          reduce using rule 160 (empty -> .)

    condition1                     shift and go to state 308
    gotoElse                       shift and go to state 309
    empty                          shift and go to state 310

state 301

    (44) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 . RBRACE end_while
    (14) b2 -> b2 . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 311
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 302

    (155) print_multi -> COMMA expression to_screen print_multi .

    RPAREN          reduce using rule 155 (print_multi -> COMMA expression to_screen print_multi .)


state 303

    (65) params1 -> COMMA type ID save_par . params1
    (65) params1 -> . COMMA type ID save_par params1
    (66) params1 -> . empty
    (160) empty -> .

    COMMA           shift and go to state 237
    RPAREN          reduce using rule 160 (empty -> .)

    params1                        shift and go to state 312
    empty                          shift and go to state 238

state 304

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE . end_func funcs3
    (77) end_func -> .

    FUNC            reduce using rule 77 (end_func -> .)
    VAR             reduce using rule 77 (end_func -> .)
    DAVINCI         reduce using rule 77 (end_func -> .)

    end_func                       shift and go to state 313

state 305

    (158) return -> RETURN expression . savereturn SEMICOLON
    (159) savereturn -> .

    SEMICOLON       reduce using rule 159 (savereturn -> .)

    savereturn                     shift and go to state 314

state 306

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func . funcs3
    (72) funcs3 -> . funcs
    (73) funcs3 -> . empty
    (60) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (61) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (160) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    VAR             reduce using rule 160 (empty -> .)
    DAVINCI         reduce using rule 160 (empty -> .)

  ! FUNC            [ reduce using rule 160 (empty -> .) ]

    funcs3                         shift and go to state 315
    funcs                          shift and go to state 316
    empty                          shift and go to state 317

state 307

    (143) call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub . checkreturn
    (144) checkreturn -> .

    ID              reduce using rule 144 (checkreturn -> .)
    IF              reduce using rule 144 (checkreturn -> .)
    TRIANGLE        reduce using rule 144 (checkreturn -> .)
    RECTANGLE       reduce using rule 144 (checkreturn -> .)
    SQUARE          reduce using rule 144 (checkreturn -> .)
    CIRCLE          reduce using rule 144 (checkreturn -> .)
    POLIGON         reduce using rule 144 (checkreturn -> .)
    COLOR           reduce using rule 144 (checkreturn -> .)
    PENSIZE         reduce using rule 144 (checkreturn -> .)
    PENFORWARD      reduce using rule 144 (checkreturn -> .)
    PENBACK         reduce using rule 144 (checkreturn -> .)
    ROTATE          reduce using rule 144 (checkreturn -> .)
    WHILE           reduce using rule 144 (checkreturn -> .)
    PENON           reduce using rule 144 (checkreturn -> .)
    PENOFF          reduce using rule 144 (checkreturn -> .)
    PRINT           reduce using rule 144 (checkreturn -> .)
    RBRACE          reduce using rule 144 (checkreturn -> .)
    DIVIDE          reduce using rule 144 (checkreturn -> .)
    TIMES           reduce using rule 144 (checkreturn -> .)
    MINUS           reduce using rule 144 (checkreturn -> .)
    PLUS            reduce using rule 144 (checkreturn -> .)
    LESSER          reduce using rule 144 (checkreturn -> .)
    GREATER         reduce using rule 144 (checkreturn -> .)
    EQUAL           reduce using rule 144 (checkreturn -> .)
    NOTEQUAL        reduce using rule 144 (checkreturn -> .)
    GREATEROREQUAL  reduce using rule 144 (checkreturn -> .)
    LESSEROREQUAL   reduce using rule 144 (checkreturn -> .)
    RPAREN          reduce using rule 144 (checkreturn -> .)
    COMMA           reduce using rule 144 (checkreturn -> .)
    RBRACKET        reduce using rule 144 (checkreturn -> .)
    SEMICOLON       reduce using rule 144 (checkreturn -> .)
    RETURN          reduce using rule 144 (checkreturn -> .)

    checkreturn                    shift and go to state 318

state 308

    (100) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (105) end_if -> .

    ID              reduce using rule 105 (end_if -> .)
    IF              reduce using rule 105 (end_if -> .)
    TRIANGLE        reduce using rule 105 (end_if -> .)
    RECTANGLE       reduce using rule 105 (end_if -> .)
    SQUARE          reduce using rule 105 (end_if -> .)
    CIRCLE          reduce using rule 105 (end_if -> .)
    POLIGON         reduce using rule 105 (end_if -> .)
    COLOR           reduce using rule 105 (end_if -> .)
    PENSIZE         reduce using rule 105 (end_if -> .)
    PENFORWARD      reduce using rule 105 (end_if -> .)
    PENBACK         reduce using rule 105 (end_if -> .)
    ROTATE          reduce using rule 105 (end_if -> .)
    WHILE           reduce using rule 105 (end_if -> .)
    PENON           reduce using rule 105 (end_if -> .)
    PENOFF          reduce using rule 105 (end_if -> .)
    PRINT           reduce using rule 105 (end_if -> .)
    RBRACE          reduce using rule 105 (end_if -> .)
    RETURN          reduce using rule 105 (end_if -> .)

    end_if                         shift and go to state 319

state 309

    (101) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 320


state 310

    (102) condition1 -> empty .

    ID              reduce using rule 102 (condition1 -> empty .)
    IF              reduce using rule 102 (condition1 -> empty .)
    TRIANGLE        reduce using rule 102 (condition1 -> empty .)
    RECTANGLE       reduce using rule 102 (condition1 -> empty .)
    SQUARE          reduce using rule 102 (condition1 -> empty .)
    CIRCLE          reduce using rule 102 (condition1 -> empty .)
    POLIGON         reduce using rule 102 (condition1 -> empty .)
    COLOR           reduce using rule 102 (condition1 -> empty .)
    PENSIZE         reduce using rule 102 (condition1 -> empty .)
    PENFORWARD      reduce using rule 102 (condition1 -> empty .)
    PENBACK         reduce using rule 102 (condition1 -> empty .)
    ROTATE          reduce using rule 102 (condition1 -> empty .)
    WHILE           reduce using rule 102 (condition1 -> empty .)
    PENON           reduce using rule 102 (condition1 -> empty .)
    PENOFF          reduce using rule 102 (condition1 -> empty .)
    PRINT           reduce using rule 102 (condition1 -> empty .)
    RBRACE          reduce using rule 102 (condition1 -> empty .)
    RETURN          reduce using rule 102 (condition1 -> empty .)


state 311

    (44) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE . end_while
    (46) end_while -> .

    ID              reduce using rule 46 (end_while -> .)
    IF              reduce using rule 46 (end_while -> .)
    TRIANGLE        reduce using rule 46 (end_while -> .)
    RECTANGLE       reduce using rule 46 (end_while -> .)
    SQUARE          reduce using rule 46 (end_while -> .)
    CIRCLE          reduce using rule 46 (end_while -> .)
    POLIGON         reduce using rule 46 (end_while -> .)
    COLOR           reduce using rule 46 (end_while -> .)
    PENSIZE         reduce using rule 46 (end_while -> .)
    PENFORWARD      reduce using rule 46 (end_while -> .)
    PENBACK         reduce using rule 46 (end_while -> .)
    ROTATE          reduce using rule 46 (end_while -> .)
    WHILE           reduce using rule 46 (end_while -> .)
    PENON           reduce using rule 46 (end_while -> .)
    PENOFF          reduce using rule 46 (end_while -> .)
    PRINT           reduce using rule 46 (end_while -> .)
    RBRACE          reduce using rule 46 (end_while -> .)
    RETURN          reduce using rule 46 (end_while -> .)

    end_while                      shift and go to state 321

state 312

    (65) params1 -> COMMA type ID save_par params1 .

    RPAREN          reduce using rule 65 (params1 -> COMMA type ID save_par params1 .)


state 313

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func . funcs3
    (72) funcs3 -> . funcs
    (73) funcs3 -> . empty
    (60) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (61) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (160) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    VAR             reduce using rule 160 (empty -> .)
    DAVINCI         reduce using rule 160 (empty -> .)

  ! FUNC            [ reduce using rule 160 (empty -> .) ]

    funcs3                         shift and go to state 322
    funcs                          shift and go to state 316
    empty                          shift and go to state 317

state 314

    (158) return -> RETURN expression savereturn . SEMICOLON

    SEMICOLON       shift and go to state 323


state 315

    (61) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .

    FUNC            reduce using rule 61 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)
    VAR             reduce using rule 61 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)
    DAVINCI         reduce using rule 61 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)


state 316

    (72) funcs3 -> funcs .

    FUNC            reduce using rule 72 (funcs3 -> funcs .)
    VAR             reduce using rule 72 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 72 (funcs3 -> funcs .)


state 317

    (73) funcs3 -> empty .

    FUNC            reduce using rule 73 (funcs3 -> empty .)
    VAR             reduce using rule 73 (funcs3 -> empty .)
    DAVINCI         reduce using rule 73 (funcs3 -> empty .)


state 318

    (143) call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .

    ID              reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    IF              reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    TRIANGLE        reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    RECTANGLE       reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    SQUARE          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    CIRCLE          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    POLIGON         reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    COLOR           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PENSIZE         reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PENFORWARD      reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PENBACK         reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    ROTATE          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    WHILE           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PENON           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PENOFF          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PRINT           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    RBRACE          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    DIVIDE          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    TIMES           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    MINUS           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    PLUS            reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    LESSER          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    GREATER         reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    EQUAL           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    NOTEQUAL        reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    GREATEROREQUAL  reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    LESSEROREQUAL   reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    RPAREN          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    COMMA           reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    RBRACKET        reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    SEMICOLON       reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)
    RETURN          reduce using rule 143 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn .)


state 319

    (100) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PRINT           reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 100 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 320

    (101) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 324


state 321

    (44) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .

    ID              reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PRINT           reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 44 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)


state 322

    (60) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .

    FUNC            reduce using rule 60 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)
    VAR             reduce using rule 60 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)
    DAVINCI         reduce using rule 60 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)


state 323

    (158) return -> RETURN expression savereturn SEMICOLON .

    RBRACE          reduce using rule 158 (return -> RETURN expression savereturn SEMICOLON .)


state 324

    (101) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (14) b2 -> . b2 statute
    (15) b2 -> . empty
    (160) empty -> .

    RBRACE          reduce using rule 160 (empty -> .)
    ID              reduce using rule 160 (empty -> .)
    IF              reduce using rule 160 (empty -> .)
    TRIANGLE        reduce using rule 160 (empty -> .)
    RECTANGLE       reduce using rule 160 (empty -> .)
    SQUARE          reduce using rule 160 (empty -> .)
    CIRCLE          reduce using rule 160 (empty -> .)
    POLIGON         reduce using rule 160 (empty -> .)
    COLOR           reduce using rule 160 (empty -> .)
    PENSIZE         reduce using rule 160 (empty -> .)
    PENFORWARD      reduce using rule 160 (empty -> .)
    PENBACK         reduce using rule 160 (empty -> .)
    ROTATE          reduce using rule 160 (empty -> .)
    WHILE           reduce using rule 160 (empty -> .)
    PENON           reduce using rule 160 (empty -> .)
    PENOFF          reduce using rule 160 (empty -> .)
    PRINT           reduce using rule 160 (empty -> .)

    b2                             shift and go to state 325
    empty                          shift and go to state 38

state 325

    (101) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (14) b2 -> b2 . statute
    (27) statute -> . assignment
    (28) statute -> . call
    (29) statute -> . condition
    (30) statute -> . triangle
    (31) statute -> . rectangle
    (32) statute -> . square
    (33) statute -> . circle
    (34) statute -> . poligon
    (35) statute -> . color
    (36) statute -> . pensize
    (37) statute -> . penforward
    (38) statute -> . penback
    (39) statute -> . rotate
    (40) statute -> . while
    (41) statute -> . penon
    (42) statute -> . penoff
    (43) statute -> . print
    (47) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (48) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (143) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn
    (100) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (82) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (83) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (81) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (80) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (84) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (79) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (87) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (88) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (89) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (85) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (44) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (90) penon -> . PENON LPAREN RPAREN SEMICOLON
    (91) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (154) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 326
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 326

    (101) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PRINT           reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 101 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 306 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 313 resolved as shift
WARNING: reduce/reduce conflict in state 124 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 124
WARNING: Rule (push_id -> <empty>) is never reduced
