Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block
Rule 2     fillmain -> empty
Rule 3     gotomain -> empty
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     save_funcs -> empty
Rule 8     global_vars -> <empty>
Rule 9     block -> LBRACE b1 RBRACE
Rule 10    b1 -> vars local_vars b2
Rule 11    b1 -> b2
Rule 12    local_vars -> <empty>
Rule 13    b2 -> b2 statute
Rule 14    b2 -> empty
Rule 15    vars -> VAR vars2
Rule 16    vars2 -> type vars3 SEMICOLON vars2
Rule 17    vars2 -> empty
Rule 18    vars3 -> ID ASSIGN expression vars4
Rule 19    vars3 -> ID list vars4
Rule 20    vars3 -> ID vars4
Rule 21    setvalue -> <empty>
Rule 22    vars4 -> COMMA vars3
Rule 23    vars4 -> empty
Rule 24    save_type -> <empty>
Rule 25    list -> LIST
Rule 26    statute -> assignment
Rule 27    statute -> call
Rule 28    statute -> condition
Rule 29    statute -> triangle
Rule 30    statute -> rectangle
Rule 31    statute -> square
Rule 32    statute -> circle
Rule 33    statute -> poligon
Rule 34    statute -> color
Rule 35    statute -> pensize
Rule 36    statute -> penforward
Rule 37    statute -> penback
Rule 38    statute -> rotate
Rule 39    statute -> while
Rule 40    statute -> return
Rule 41    statute -> penon
Rule 42    statute -> penoff
Rule 43    while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
Rule 44    while_return -> <empty>
Rule 45    end_while -> <empty>
Rule 46    assignment -> ID ASSIGN expression SEMICOLON
Rule 47    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 48    cte_id -> <empty>
Rule 49    color_cte -> RED
Rule 50    color_cte -> BLUE
Rule 51    color_cte -> YELLOW
Rule 52    color_cte -> GREEN
Rule 53    color_cte -> PINK
Rule 54    color_cte -> PURPLE
Rule 55    st_cte -> STRING
Rule 56    st_cte -> cte_bool
Rule 57    funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 58    funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 59    funcs1 -> funcs1 COMMA type ID
Rule 60    funcs1 -> empty
Rule 61    funcs2 -> funcs2 vars
Rule 62    funcs2 -> funcs2 statute
Rule 63    funcs2 -> empty
Rule 64    funcs3 -> funcs
Rule 65    funcs3 -> empty
Rule 66    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 67    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 68    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 69    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 70    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 71    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 72    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 73    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 74    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 75    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 76    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 77    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 78    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 79    type -> INT
Rule 80    type -> FLOAT
Rule 81    type -> STRING
Rule 82    type -> BOOL
Rule 83    var_cte -> ID
Rule 84    var_cte -> CTE_INT
Rule 85    var_cte -> CTE_FLOAT
Rule 86    var_cte -> cte_bool
Rule 87    var_cte -> ID list
Rule 88    var_cte -> call
Rule 89    cte_bool -> TRUE
Rule 90    cte_bool -> FALSE
Rule 91    condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 92    condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 93    condition1 -> empty
Rule 94    type_check -> <empty>
Rule 95    gotoElse -> <empty>
Rule 96    end_if -> <empty>
Rule 97    expression -> exp expression1
Rule 98    expression1 -> LESSER relop exp top_relop
Rule 99    expression1 -> GREATER relop exp top_relop
Rule 100   expression1 -> EQUAL relop exp top_relop
Rule 101   expression1 -> NOTEQUAL relop exp top_relop
Rule 102   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 103   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 104   expression1 -> empty
Rule 105   relop -> <empty>
Rule 106   top_relop -> <empty>
Rule 107   exp -> term top_exp exp1
Rule 108   exp1 -> MINUS push_sign exp
Rule 109   exp1 -> PLUS push_sign exp
Rule 110   exp1 -> empty
Rule 111   top_exp -> <empty>
Rule 112   push_sign -> <empty>
Rule 113   top_factor -> <empty>
Rule 114   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 115   factor -> var_cte
Rule 116   factor -> ID push_id
Rule 117   false_bottom -> <empty>
Rule 118   end_par -> <empty>
Rule 119   push_id -> <empty>
Rule 120   term -> factor top_factor term1
Rule 121   term1 -> DIVIDE push_sign term
Rule 122   term1 -> TIMES push_sign term
Rule 123   term1 -> empty
Rule 124   call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
Rule 125   check_name -> <empty>
Rule 126   create_era -> <empty>
Rule 127   gosub -> <empty>
Rule 128   call1 -> ID COMMA call1
Rule 129   call1 -> exp
Rule 130   call1 -> st_cte
Rule 131   return -> RETURN var_cte SEMICOLON
Rule 132   return -> RETURN st_cte SEMICOLON
Rule 133   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 18 46 47
BLUE                 : 50
BOOL                 : 82
CIRCLE               : 67
COLOR                : 66
COMMA                : 22 59 69 70 71 128
CTE_BOOL             : 
CTE_FLOAT            : 85
CTE_INT              : 84
CTE_STRING           : 73
DAVINCI              : 1
DIVIDE               : 121
ELSE                 : 92
EQUAL                : 100
EXPRESSION           : 
FALSE                : 90
FLOAT                : 80
FUNC                 : 57 58
GREATER              : 99
GREATEROREQUAL       : 102
GREEN                : 52
ID                   : 1 18 19 20 46 47 57 57 58 58 59 83 87 116 124 128
IF                   : 91
INT                  : 79
LBRACE               : 9 43 57 58 91 92
LBRACKET             : 47
LESSER               : 98
LESSEROREQUAL        : 103
LIST                 : 25
LPAREN               : 43 57 58 66 67 68 69 70 71 72 73 74 75 76 77 78 91 114 124
MINUS                : 108
NOT                  : 
NOTEQUAL             : 101
OR                   : 
PENBACK              : 76
PENFORWARD           : 75
PENOFF               : 78
PENON                : 77
PENSIZE              : 74
PINK                 : 53
PLUS                 : 109
POLIGON              : 71
PROGRAM              : 1
PURPLE               : 54
RBRACE               : 9 43 57 58 91 92
RBRACKET             : 47
RECTANGLE            : 70
RED                  : 49
RETURN               : 131 132
ROTATE               : 72 73
RPAREN               : 43 57 58 66 67 68 69 70 71 72 73 74 75 76 77 78 91 114 124
SEMICOLON            : 1 16 46 47 66 67 68 69 70 71 72 73 74 75 76 77 78 124 131 132
SIZE                 : 
SQUARE               : 68
STRING               : 55 81
ST_CTE               : 
TERM                 : 
TIMES                : 122
TRIANGLE             : 69
TRUE                 : 89
VAR                  : 15
VOID                 : 58
WHILE                : 43
YELLOW               : 51
error                : 

Nonterminals, with rules where they appear

assignment           : 26
b1                   : 9
b2                   : 10 11 13 43 91 92
block                : 1
call                 : 27 88
call1                : 124 128
check_name           : 124
circle               : 32
color                : 34
color_cte            : 66
condition            : 28
condition1           : 91
create_era           : 124
cte_bool             : 56 86
cte_id               : 47
empty                : 2 3 6 7 14 17 23 60 63 65 93 104 110 123
end_if               : 91
end_par              : 114
end_while            : 43
exp                  : 47 67 68 69 69 70 70 71 71 72 74 75 76 97 98 99 100 101 102 103 108 109 129
exp1                 : 107
expression           : 18 43 46 47 91 114
expression1          : 97
factor               : 120
false_bottom         : 114
fillmain             : 1
funcs                : 4 64
funcs1               : 57 58 59
funcs2               : 57 58 61 62
funcs3               : 57 58
global_vars          : 5
gosub                : 124
gotoElse             : 92
gotomain             : 1
list                 : 19 87
local_vars           : 10
penback              : 37
penforward           : 36
penoff               : 42
penon                : 41
pensize              : 35
poligon              : 33
program              : 0
program1             : 1 4 5
push_id              : 116
push_sign            : 108 109 121 122
rectangle            : 30
relop                : 98 99 100 101 102 103
return               : 40
rotate               : 38
save_funcs           : 4
save_type            : 
setvalue             : 
square               : 31
st_cte               : 130 132
statute              : 13 62
term                 : 107 121 122
term1                : 120
top_exp              : 107
top_factor           : 120
top_relop            : 98 99 100 101 102 103
triangle             : 29
type                 : 16 57 57 58 59
type_check           : 43 91
var_cte              : 115 131
vars                 : 5 10 61
vars2                : 15 16
vars3                : 16 22
vars4                : 18 19 20
while                : 39
while_return         : 43

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 DAVINCI fillmain block
    (3) gotomain -> . empty
    (133) empty -> .

    DAVINCI         reduce using rule 133 (empty -> .)
    FUNC            reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

    gotomain                       shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (133) empty -> .

    DAVINCI         reduce using rule 133 (empty -> .)
    FUNC            reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

    program1                       shift and go to state 7
    empty                          shift and go to state 8

state 6

    (3) gotomain -> empty .

    DAVINCI         reduce using rule 3 (gotomain -> empty .)
    FUNC            reduce using rule 3 (gotomain -> empty .)
    VAR             reduce using rule 3 (gotomain -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (57) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (15) vars -> . VAR vars2

    DAVINCI         shift and go to state 9
    FUNC            shift and go to state 12
    VAR             shift and go to state 13

    funcs                          shift and go to state 10
    vars                           shift and go to state 11

state 8

    (6) program1 -> empty .

    DAVINCI         reduce using rule 6 (program1 -> empty .)
    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)


state 9

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI . fillmain block
    (2) fillmain -> . empty
    (133) empty -> .

    LBRACE          reduce using rule 133 (empty -> .)

    fillmain                       shift and go to state 14
    empty                          shift and go to state 15

state 10

    (4) program1 -> program1 funcs . save_funcs
    (7) save_funcs -> . empty
    (133) empty -> .

    DAVINCI         reduce using rule 133 (empty -> .)
    FUNC            reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

    save_funcs                     shift and go to state 16
    empty                          shift and go to state 17

state 11

    (5) program1 -> program1 vars . global_vars
    (8) global_vars -> .

    DAVINCI         reduce using rule 8 (global_vars -> .)
    FUNC            reduce using rule 8 (global_vars -> .)
    VAR             reduce using rule 8 (global_vars -> .)

    global_vars                    shift and go to state 18

state 12

    (57) funcs -> FUNC . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs -> FUNC . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL

    VOID            shift and go to state 20
    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    type                           shift and go to state 19

state 13

    (15) vars -> VAR . vars2
    (16) vars2 -> . type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL
    (133) empty -> .

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24
    DAVINCI         reduce using rule 133 (empty -> .)
    FUNC            reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)

    vars2                          shift and go to state 25
    type                           shift and go to state 26
    empty                          shift and go to state 27

state 14

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain . block
    (9) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 29

    block                          shift and go to state 28

state 15

    (2) fillmain -> empty .

    LBRACE          reduce using rule 2 (fillmain -> empty .)


state 16

    (4) program1 -> program1 funcs save_funcs .

    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 17

    (7) save_funcs -> empty .

    DAVINCI         reduce using rule 7 (save_funcs -> empty .)
    FUNC            reduce using rule 7 (save_funcs -> empty .)
    VAR             reduce using rule 7 (save_funcs -> empty .)


state 18

    (5) program1 -> program1 vars global_vars .

    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)
    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)


state 19

    (57) funcs -> FUNC type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 30


state 20

    (58) funcs -> FUNC VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 31


state 21

    (79) type -> INT .

    ID              reduce using rule 79 (type -> INT .)


state 22

    (80) type -> FLOAT .

    ID              reduce using rule 80 (type -> FLOAT .)


state 23

    (81) type -> STRING .

    ID              reduce using rule 81 (type -> STRING .)


state 24

    (82) type -> BOOL .

    ID              reduce using rule 82 (type -> BOOL .)


state 25

    (15) vars -> VAR vars2 .

    DAVINCI         reduce using rule 15 (vars -> VAR vars2 .)
    FUNC            reduce using rule 15 (vars -> VAR vars2 .)
    VAR             reduce using rule 15 (vars -> VAR vars2 .)
    ID              reduce using rule 15 (vars -> VAR vars2 .)
    IF              reduce using rule 15 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 15 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 15 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 15 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 15 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 15 (vars -> VAR vars2 .)
    COLOR           reduce using rule 15 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 15 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 15 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 15 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 15 (vars -> VAR vars2 .)
    WHILE           reduce using rule 15 (vars -> VAR vars2 .)
    RETURN          reduce using rule 15 (vars -> VAR vars2 .)
    PENON           reduce using rule 15 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 15 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 15 (vars -> VAR vars2 .)


state 26

    (16) vars2 -> type . vars3 SEMICOLON vars2
    (18) vars3 -> . ID ASSIGN expression vars4
    (19) vars3 -> . ID list vars4
    (20) vars3 -> . ID vars4

    ID              shift and go to state 33

    vars3                          shift and go to state 32

state 27

    (17) vars2 -> empty .

    DAVINCI         reduce using rule 17 (vars2 -> empty .)
    FUNC            reduce using rule 17 (vars2 -> empty .)
    VAR             reduce using rule 17 (vars2 -> empty .)
    ID              reduce using rule 17 (vars2 -> empty .)
    IF              reduce using rule 17 (vars2 -> empty .)
    TRIANGLE        reduce using rule 17 (vars2 -> empty .)
    RECTANGLE       reduce using rule 17 (vars2 -> empty .)
    SQUARE          reduce using rule 17 (vars2 -> empty .)
    CIRCLE          reduce using rule 17 (vars2 -> empty .)
    POLIGON         reduce using rule 17 (vars2 -> empty .)
    COLOR           reduce using rule 17 (vars2 -> empty .)
    PENSIZE         reduce using rule 17 (vars2 -> empty .)
    PENFORWARD      reduce using rule 17 (vars2 -> empty .)
    PENBACK         reduce using rule 17 (vars2 -> empty .)
    ROTATE          reduce using rule 17 (vars2 -> empty .)
    WHILE           reduce using rule 17 (vars2 -> empty .)
    RETURN          reduce using rule 17 (vars2 -> empty .)
    PENON           reduce using rule 17 (vars2 -> empty .)
    PENOFF          reduce using rule 17 (vars2 -> empty .)
    RBRACE          reduce using rule 17 (vars2 -> empty .)


state 28

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 DAVINCI fillmain block .)


state 29

    (9) block -> LBRACE . b1 RBRACE
    (10) b1 -> . vars local_vars b2
    (11) b1 -> . b2
    (15) vars -> . VAR vars2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (133) empty -> .

    VAR             shift and go to state 13
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)

    b1                             shift and go to state 34
    vars                           shift and go to state 35
    b2                             shift and go to state 36
    empty                          shift and go to state 37

state 30

    (57) funcs -> FUNC type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 38


state 31

    (58) funcs -> FUNC VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 39


state 32

    (16) vars2 -> type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 40


state 33

    (18) vars3 -> ID . ASSIGN expression vars4
    (19) vars3 -> ID . list vars4
    (20) vars3 -> ID . vars4
    (25) list -> . LIST
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (133) empty -> .

    ASSIGN          shift and go to state 41
    LIST            shift and go to state 44
    COMMA           shift and go to state 45
    SEMICOLON       reduce using rule 133 (empty -> .)

    vars4                          shift and go to state 42
    list                           shift and go to state 43
    empty                          shift and go to state 46

state 34

    (9) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 47


state 35

    (10) b1 -> vars . local_vars b2
    (12) local_vars -> .

    ID              reduce using rule 12 (local_vars -> .)
    IF              reduce using rule 12 (local_vars -> .)
    TRIANGLE        reduce using rule 12 (local_vars -> .)
    RECTANGLE       reduce using rule 12 (local_vars -> .)
    SQUARE          reduce using rule 12 (local_vars -> .)
    CIRCLE          reduce using rule 12 (local_vars -> .)
    POLIGON         reduce using rule 12 (local_vars -> .)
    COLOR           reduce using rule 12 (local_vars -> .)
    PENSIZE         reduce using rule 12 (local_vars -> .)
    PENFORWARD      reduce using rule 12 (local_vars -> .)
    PENBACK         reduce using rule 12 (local_vars -> .)
    ROTATE          reduce using rule 12 (local_vars -> .)
    WHILE           reduce using rule 12 (local_vars -> .)
    RETURN          reduce using rule 12 (local_vars -> .)
    PENON           reduce using rule 12 (local_vars -> .)
    PENOFF          reduce using rule 12 (local_vars -> .)
    RBRACE          reduce using rule 12 (local_vars -> .)

    local_vars                     shift and go to state 48

state 36

    (11) b1 -> b2 .
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 11 (b1 -> b2 .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    statute                        shift and go to state 49
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 37

    (14) b2 -> empty .

    ID              reduce using rule 14 (b2 -> empty .)
    IF              reduce using rule 14 (b2 -> empty .)
    TRIANGLE        reduce using rule 14 (b2 -> empty .)
    RECTANGLE       reduce using rule 14 (b2 -> empty .)
    SQUARE          reduce using rule 14 (b2 -> empty .)
    CIRCLE          reduce using rule 14 (b2 -> empty .)
    POLIGON         reduce using rule 14 (b2 -> empty .)
    COLOR           reduce using rule 14 (b2 -> empty .)
    PENSIZE         reduce using rule 14 (b2 -> empty .)
    PENFORWARD      reduce using rule 14 (b2 -> empty .)
    PENBACK         reduce using rule 14 (b2 -> empty .)
    ROTATE          reduce using rule 14 (b2 -> empty .)
    WHILE           reduce using rule 14 (b2 -> empty .)
    RETURN          reduce using rule 14 (b2 -> empty .)
    PENON           reduce using rule 14 (b2 -> empty .)
    PENOFF          reduce using rule 14 (b2 -> empty .)
    RBRACE          reduce using rule 14 (b2 -> empty .)


state 38

    (57) funcs -> FUNC type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    type                           shift and go to state 83

state 39

    (58) funcs -> FUNC VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    type                           shift and go to state 84

state 40

    (16) vars2 -> type vars3 SEMICOLON . vars2
    (16) vars2 -> . type vars3 SEMICOLON vars2
    (17) vars2 -> . empty
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL
    (133) empty -> .

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24
    DAVINCI         reduce using rule 133 (empty -> .)
    FUNC            reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)

    type                           shift and go to state 26
    vars2                          shift and go to state 85
    empty                          shift and go to state 27

state 41

    (18) vars3 -> ID ASSIGN . expression vars4
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expression                     shift and go to state 87
    exp                            shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 42

    (20) vars3 -> ID vars4 .

    SEMICOLON       reduce using rule 20 (vars3 -> ID vars4 .)


state 43

    (19) vars3 -> ID list . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (133) empty -> .

    COMMA           shift and go to state 45
    SEMICOLON       reduce using rule 133 (empty -> .)

    vars4                          shift and go to state 99
    empty                          shift and go to state 46

state 44

    (25) list -> LIST .

    COMMA           reduce using rule 25 (list -> LIST .)
    SEMICOLON       reduce using rule 25 (list -> LIST .)
    DIVIDE          reduce using rule 25 (list -> LIST .)
    TIMES           reduce using rule 25 (list -> LIST .)
    MINUS           reduce using rule 25 (list -> LIST .)
    PLUS            reduce using rule 25 (list -> LIST .)
    LESSER          reduce using rule 25 (list -> LIST .)
    GREATER         reduce using rule 25 (list -> LIST .)
    EQUAL           reduce using rule 25 (list -> LIST .)
    NOTEQUAL        reduce using rule 25 (list -> LIST .)
    GREATEROREQUAL  reduce using rule 25 (list -> LIST .)
    LESSEROREQUAL   reduce using rule 25 (list -> LIST .)
    RPAREN          reduce using rule 25 (list -> LIST .)
    RBRACKET        reduce using rule 25 (list -> LIST .)


state 45

    (22) vars4 -> COMMA . vars3
    (18) vars3 -> . ID ASSIGN expression vars4
    (19) vars3 -> . ID list vars4
    (20) vars3 -> . ID vars4

    ID              shift and go to state 33

    vars3                          shift and go to state 100

state 46

    (23) vars4 -> empty .

    SEMICOLON       reduce using rule 23 (vars4 -> empty .)


state 47

    (9) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 9 (block -> LBRACE b1 RBRACE .)


state 48

    (10) b1 -> vars local_vars . b2
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (133) empty -> .

    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)

    b2                             shift and go to state 101
    empty                          shift and go to state 37

state 49

    (13) b2 -> b2 statute .

    ID              reduce using rule 13 (b2 -> b2 statute .)
    IF              reduce using rule 13 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 13 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 13 (b2 -> b2 statute .)
    SQUARE          reduce using rule 13 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 13 (b2 -> b2 statute .)
    POLIGON         reduce using rule 13 (b2 -> b2 statute .)
    COLOR           reduce using rule 13 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 13 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 13 (b2 -> b2 statute .)
    PENBACK         reduce using rule 13 (b2 -> b2 statute .)
    ROTATE          reduce using rule 13 (b2 -> b2 statute .)
    WHILE           reduce using rule 13 (b2 -> b2 statute .)
    RETURN          reduce using rule 13 (b2 -> b2 statute .)
    PENON           reduce using rule 13 (b2 -> b2 statute .)
    PENOFF          reduce using rule 13 (b2 -> b2 statute .)
    RBRACE          reduce using rule 13 (b2 -> b2 statute .)


state 50

    (26) statute -> assignment .

    ID              reduce using rule 26 (statute -> assignment .)
    IF              reduce using rule 26 (statute -> assignment .)
    TRIANGLE        reduce using rule 26 (statute -> assignment .)
    RECTANGLE       reduce using rule 26 (statute -> assignment .)
    SQUARE          reduce using rule 26 (statute -> assignment .)
    CIRCLE          reduce using rule 26 (statute -> assignment .)
    POLIGON         reduce using rule 26 (statute -> assignment .)
    COLOR           reduce using rule 26 (statute -> assignment .)
    PENSIZE         reduce using rule 26 (statute -> assignment .)
    PENFORWARD      reduce using rule 26 (statute -> assignment .)
    PENBACK         reduce using rule 26 (statute -> assignment .)
    ROTATE          reduce using rule 26 (statute -> assignment .)
    WHILE           reduce using rule 26 (statute -> assignment .)
    RETURN          reduce using rule 26 (statute -> assignment .)
    PENON           reduce using rule 26 (statute -> assignment .)
    PENOFF          reduce using rule 26 (statute -> assignment .)
    RBRACE          reduce using rule 26 (statute -> assignment .)
    VAR             reduce using rule 26 (statute -> assignment .)


state 51

    (27) statute -> call .

    ID              reduce using rule 27 (statute -> call .)
    IF              reduce using rule 27 (statute -> call .)
    TRIANGLE        reduce using rule 27 (statute -> call .)
    RECTANGLE       reduce using rule 27 (statute -> call .)
    SQUARE          reduce using rule 27 (statute -> call .)
    CIRCLE          reduce using rule 27 (statute -> call .)
    POLIGON         reduce using rule 27 (statute -> call .)
    COLOR           reduce using rule 27 (statute -> call .)
    PENSIZE         reduce using rule 27 (statute -> call .)
    PENFORWARD      reduce using rule 27 (statute -> call .)
    PENBACK         reduce using rule 27 (statute -> call .)
    ROTATE          reduce using rule 27 (statute -> call .)
    WHILE           reduce using rule 27 (statute -> call .)
    RETURN          reduce using rule 27 (statute -> call .)
    PENON           reduce using rule 27 (statute -> call .)
    PENOFF          reduce using rule 27 (statute -> call .)
    RBRACE          reduce using rule 27 (statute -> call .)
    VAR             reduce using rule 27 (statute -> call .)


state 52

    (28) statute -> condition .

    ID              reduce using rule 28 (statute -> condition .)
    IF              reduce using rule 28 (statute -> condition .)
    TRIANGLE        reduce using rule 28 (statute -> condition .)
    RECTANGLE       reduce using rule 28 (statute -> condition .)
    SQUARE          reduce using rule 28 (statute -> condition .)
    CIRCLE          reduce using rule 28 (statute -> condition .)
    POLIGON         reduce using rule 28 (statute -> condition .)
    COLOR           reduce using rule 28 (statute -> condition .)
    PENSIZE         reduce using rule 28 (statute -> condition .)
    PENFORWARD      reduce using rule 28 (statute -> condition .)
    PENBACK         reduce using rule 28 (statute -> condition .)
    ROTATE          reduce using rule 28 (statute -> condition .)
    WHILE           reduce using rule 28 (statute -> condition .)
    RETURN          reduce using rule 28 (statute -> condition .)
    PENON           reduce using rule 28 (statute -> condition .)
    PENOFF          reduce using rule 28 (statute -> condition .)
    RBRACE          reduce using rule 28 (statute -> condition .)
    VAR             reduce using rule 28 (statute -> condition .)


state 53

    (29) statute -> triangle .

    ID              reduce using rule 29 (statute -> triangle .)
    IF              reduce using rule 29 (statute -> triangle .)
    TRIANGLE        reduce using rule 29 (statute -> triangle .)
    RECTANGLE       reduce using rule 29 (statute -> triangle .)
    SQUARE          reduce using rule 29 (statute -> triangle .)
    CIRCLE          reduce using rule 29 (statute -> triangle .)
    POLIGON         reduce using rule 29 (statute -> triangle .)
    COLOR           reduce using rule 29 (statute -> triangle .)
    PENSIZE         reduce using rule 29 (statute -> triangle .)
    PENFORWARD      reduce using rule 29 (statute -> triangle .)
    PENBACK         reduce using rule 29 (statute -> triangle .)
    ROTATE          reduce using rule 29 (statute -> triangle .)
    WHILE           reduce using rule 29 (statute -> triangle .)
    RETURN          reduce using rule 29 (statute -> triangle .)
    PENON           reduce using rule 29 (statute -> triangle .)
    PENOFF          reduce using rule 29 (statute -> triangle .)
    RBRACE          reduce using rule 29 (statute -> triangle .)
    VAR             reduce using rule 29 (statute -> triangle .)


state 54

    (30) statute -> rectangle .

    ID              reduce using rule 30 (statute -> rectangle .)
    IF              reduce using rule 30 (statute -> rectangle .)
    TRIANGLE        reduce using rule 30 (statute -> rectangle .)
    RECTANGLE       reduce using rule 30 (statute -> rectangle .)
    SQUARE          reduce using rule 30 (statute -> rectangle .)
    CIRCLE          reduce using rule 30 (statute -> rectangle .)
    POLIGON         reduce using rule 30 (statute -> rectangle .)
    COLOR           reduce using rule 30 (statute -> rectangle .)
    PENSIZE         reduce using rule 30 (statute -> rectangle .)
    PENFORWARD      reduce using rule 30 (statute -> rectangle .)
    PENBACK         reduce using rule 30 (statute -> rectangle .)
    ROTATE          reduce using rule 30 (statute -> rectangle .)
    WHILE           reduce using rule 30 (statute -> rectangle .)
    RETURN          reduce using rule 30 (statute -> rectangle .)
    PENON           reduce using rule 30 (statute -> rectangle .)
    PENOFF          reduce using rule 30 (statute -> rectangle .)
    RBRACE          reduce using rule 30 (statute -> rectangle .)
    VAR             reduce using rule 30 (statute -> rectangle .)


state 55

    (31) statute -> square .

    ID              reduce using rule 31 (statute -> square .)
    IF              reduce using rule 31 (statute -> square .)
    TRIANGLE        reduce using rule 31 (statute -> square .)
    RECTANGLE       reduce using rule 31 (statute -> square .)
    SQUARE          reduce using rule 31 (statute -> square .)
    CIRCLE          reduce using rule 31 (statute -> square .)
    POLIGON         reduce using rule 31 (statute -> square .)
    COLOR           reduce using rule 31 (statute -> square .)
    PENSIZE         reduce using rule 31 (statute -> square .)
    PENFORWARD      reduce using rule 31 (statute -> square .)
    PENBACK         reduce using rule 31 (statute -> square .)
    ROTATE          reduce using rule 31 (statute -> square .)
    WHILE           reduce using rule 31 (statute -> square .)
    RETURN          reduce using rule 31 (statute -> square .)
    PENON           reduce using rule 31 (statute -> square .)
    PENOFF          reduce using rule 31 (statute -> square .)
    RBRACE          reduce using rule 31 (statute -> square .)
    VAR             reduce using rule 31 (statute -> square .)


state 56

    (32) statute -> circle .

    ID              reduce using rule 32 (statute -> circle .)
    IF              reduce using rule 32 (statute -> circle .)
    TRIANGLE        reduce using rule 32 (statute -> circle .)
    RECTANGLE       reduce using rule 32 (statute -> circle .)
    SQUARE          reduce using rule 32 (statute -> circle .)
    CIRCLE          reduce using rule 32 (statute -> circle .)
    POLIGON         reduce using rule 32 (statute -> circle .)
    COLOR           reduce using rule 32 (statute -> circle .)
    PENSIZE         reduce using rule 32 (statute -> circle .)
    PENFORWARD      reduce using rule 32 (statute -> circle .)
    PENBACK         reduce using rule 32 (statute -> circle .)
    ROTATE          reduce using rule 32 (statute -> circle .)
    WHILE           reduce using rule 32 (statute -> circle .)
    RETURN          reduce using rule 32 (statute -> circle .)
    PENON           reduce using rule 32 (statute -> circle .)
    PENOFF          reduce using rule 32 (statute -> circle .)
    RBRACE          reduce using rule 32 (statute -> circle .)
    VAR             reduce using rule 32 (statute -> circle .)


state 57

    (33) statute -> poligon .

    ID              reduce using rule 33 (statute -> poligon .)
    IF              reduce using rule 33 (statute -> poligon .)
    TRIANGLE        reduce using rule 33 (statute -> poligon .)
    RECTANGLE       reduce using rule 33 (statute -> poligon .)
    SQUARE          reduce using rule 33 (statute -> poligon .)
    CIRCLE          reduce using rule 33 (statute -> poligon .)
    POLIGON         reduce using rule 33 (statute -> poligon .)
    COLOR           reduce using rule 33 (statute -> poligon .)
    PENSIZE         reduce using rule 33 (statute -> poligon .)
    PENFORWARD      reduce using rule 33 (statute -> poligon .)
    PENBACK         reduce using rule 33 (statute -> poligon .)
    ROTATE          reduce using rule 33 (statute -> poligon .)
    WHILE           reduce using rule 33 (statute -> poligon .)
    RETURN          reduce using rule 33 (statute -> poligon .)
    PENON           reduce using rule 33 (statute -> poligon .)
    PENOFF          reduce using rule 33 (statute -> poligon .)
    RBRACE          reduce using rule 33 (statute -> poligon .)
    VAR             reduce using rule 33 (statute -> poligon .)


state 58

    (34) statute -> color .

    ID              reduce using rule 34 (statute -> color .)
    IF              reduce using rule 34 (statute -> color .)
    TRIANGLE        reduce using rule 34 (statute -> color .)
    RECTANGLE       reduce using rule 34 (statute -> color .)
    SQUARE          reduce using rule 34 (statute -> color .)
    CIRCLE          reduce using rule 34 (statute -> color .)
    POLIGON         reduce using rule 34 (statute -> color .)
    COLOR           reduce using rule 34 (statute -> color .)
    PENSIZE         reduce using rule 34 (statute -> color .)
    PENFORWARD      reduce using rule 34 (statute -> color .)
    PENBACK         reduce using rule 34 (statute -> color .)
    ROTATE          reduce using rule 34 (statute -> color .)
    WHILE           reduce using rule 34 (statute -> color .)
    RETURN          reduce using rule 34 (statute -> color .)
    PENON           reduce using rule 34 (statute -> color .)
    PENOFF          reduce using rule 34 (statute -> color .)
    RBRACE          reduce using rule 34 (statute -> color .)
    VAR             reduce using rule 34 (statute -> color .)


state 59

    (35) statute -> pensize .

    ID              reduce using rule 35 (statute -> pensize .)
    IF              reduce using rule 35 (statute -> pensize .)
    TRIANGLE        reduce using rule 35 (statute -> pensize .)
    RECTANGLE       reduce using rule 35 (statute -> pensize .)
    SQUARE          reduce using rule 35 (statute -> pensize .)
    CIRCLE          reduce using rule 35 (statute -> pensize .)
    POLIGON         reduce using rule 35 (statute -> pensize .)
    COLOR           reduce using rule 35 (statute -> pensize .)
    PENSIZE         reduce using rule 35 (statute -> pensize .)
    PENFORWARD      reduce using rule 35 (statute -> pensize .)
    PENBACK         reduce using rule 35 (statute -> pensize .)
    ROTATE          reduce using rule 35 (statute -> pensize .)
    WHILE           reduce using rule 35 (statute -> pensize .)
    RETURN          reduce using rule 35 (statute -> pensize .)
    PENON           reduce using rule 35 (statute -> pensize .)
    PENOFF          reduce using rule 35 (statute -> pensize .)
    RBRACE          reduce using rule 35 (statute -> pensize .)
    VAR             reduce using rule 35 (statute -> pensize .)


state 60

    (36) statute -> penforward .

    ID              reduce using rule 36 (statute -> penforward .)
    IF              reduce using rule 36 (statute -> penforward .)
    TRIANGLE        reduce using rule 36 (statute -> penforward .)
    RECTANGLE       reduce using rule 36 (statute -> penforward .)
    SQUARE          reduce using rule 36 (statute -> penforward .)
    CIRCLE          reduce using rule 36 (statute -> penforward .)
    POLIGON         reduce using rule 36 (statute -> penforward .)
    COLOR           reduce using rule 36 (statute -> penforward .)
    PENSIZE         reduce using rule 36 (statute -> penforward .)
    PENFORWARD      reduce using rule 36 (statute -> penforward .)
    PENBACK         reduce using rule 36 (statute -> penforward .)
    ROTATE          reduce using rule 36 (statute -> penforward .)
    WHILE           reduce using rule 36 (statute -> penforward .)
    RETURN          reduce using rule 36 (statute -> penforward .)
    PENON           reduce using rule 36 (statute -> penforward .)
    PENOFF          reduce using rule 36 (statute -> penforward .)
    RBRACE          reduce using rule 36 (statute -> penforward .)
    VAR             reduce using rule 36 (statute -> penforward .)


state 61

    (37) statute -> penback .

    ID              reduce using rule 37 (statute -> penback .)
    IF              reduce using rule 37 (statute -> penback .)
    TRIANGLE        reduce using rule 37 (statute -> penback .)
    RECTANGLE       reduce using rule 37 (statute -> penback .)
    SQUARE          reduce using rule 37 (statute -> penback .)
    CIRCLE          reduce using rule 37 (statute -> penback .)
    POLIGON         reduce using rule 37 (statute -> penback .)
    COLOR           reduce using rule 37 (statute -> penback .)
    PENSIZE         reduce using rule 37 (statute -> penback .)
    PENFORWARD      reduce using rule 37 (statute -> penback .)
    PENBACK         reduce using rule 37 (statute -> penback .)
    ROTATE          reduce using rule 37 (statute -> penback .)
    WHILE           reduce using rule 37 (statute -> penback .)
    RETURN          reduce using rule 37 (statute -> penback .)
    PENON           reduce using rule 37 (statute -> penback .)
    PENOFF          reduce using rule 37 (statute -> penback .)
    RBRACE          reduce using rule 37 (statute -> penback .)
    VAR             reduce using rule 37 (statute -> penback .)


state 62

    (38) statute -> rotate .

    ID              reduce using rule 38 (statute -> rotate .)
    IF              reduce using rule 38 (statute -> rotate .)
    TRIANGLE        reduce using rule 38 (statute -> rotate .)
    RECTANGLE       reduce using rule 38 (statute -> rotate .)
    SQUARE          reduce using rule 38 (statute -> rotate .)
    CIRCLE          reduce using rule 38 (statute -> rotate .)
    POLIGON         reduce using rule 38 (statute -> rotate .)
    COLOR           reduce using rule 38 (statute -> rotate .)
    PENSIZE         reduce using rule 38 (statute -> rotate .)
    PENFORWARD      reduce using rule 38 (statute -> rotate .)
    PENBACK         reduce using rule 38 (statute -> rotate .)
    ROTATE          reduce using rule 38 (statute -> rotate .)
    WHILE           reduce using rule 38 (statute -> rotate .)
    RETURN          reduce using rule 38 (statute -> rotate .)
    PENON           reduce using rule 38 (statute -> rotate .)
    PENOFF          reduce using rule 38 (statute -> rotate .)
    RBRACE          reduce using rule 38 (statute -> rotate .)
    VAR             reduce using rule 38 (statute -> rotate .)


state 63

    (39) statute -> while .

    ID              reduce using rule 39 (statute -> while .)
    IF              reduce using rule 39 (statute -> while .)
    TRIANGLE        reduce using rule 39 (statute -> while .)
    RECTANGLE       reduce using rule 39 (statute -> while .)
    SQUARE          reduce using rule 39 (statute -> while .)
    CIRCLE          reduce using rule 39 (statute -> while .)
    POLIGON         reduce using rule 39 (statute -> while .)
    COLOR           reduce using rule 39 (statute -> while .)
    PENSIZE         reduce using rule 39 (statute -> while .)
    PENFORWARD      reduce using rule 39 (statute -> while .)
    PENBACK         reduce using rule 39 (statute -> while .)
    ROTATE          reduce using rule 39 (statute -> while .)
    WHILE           reduce using rule 39 (statute -> while .)
    RETURN          reduce using rule 39 (statute -> while .)
    PENON           reduce using rule 39 (statute -> while .)
    PENOFF          reduce using rule 39 (statute -> while .)
    RBRACE          reduce using rule 39 (statute -> while .)
    VAR             reduce using rule 39 (statute -> while .)


state 64

    (40) statute -> return .

    ID              reduce using rule 40 (statute -> return .)
    IF              reduce using rule 40 (statute -> return .)
    TRIANGLE        reduce using rule 40 (statute -> return .)
    RECTANGLE       reduce using rule 40 (statute -> return .)
    SQUARE          reduce using rule 40 (statute -> return .)
    CIRCLE          reduce using rule 40 (statute -> return .)
    POLIGON         reduce using rule 40 (statute -> return .)
    COLOR           reduce using rule 40 (statute -> return .)
    PENSIZE         reduce using rule 40 (statute -> return .)
    PENFORWARD      reduce using rule 40 (statute -> return .)
    PENBACK         reduce using rule 40 (statute -> return .)
    ROTATE          reduce using rule 40 (statute -> return .)
    WHILE           reduce using rule 40 (statute -> return .)
    RETURN          reduce using rule 40 (statute -> return .)
    PENON           reduce using rule 40 (statute -> return .)
    PENOFF          reduce using rule 40 (statute -> return .)
    RBRACE          reduce using rule 40 (statute -> return .)
    VAR             reduce using rule 40 (statute -> return .)


state 65

    (41) statute -> penon .

    ID              reduce using rule 41 (statute -> penon .)
    IF              reduce using rule 41 (statute -> penon .)
    TRIANGLE        reduce using rule 41 (statute -> penon .)
    RECTANGLE       reduce using rule 41 (statute -> penon .)
    SQUARE          reduce using rule 41 (statute -> penon .)
    CIRCLE          reduce using rule 41 (statute -> penon .)
    POLIGON         reduce using rule 41 (statute -> penon .)
    COLOR           reduce using rule 41 (statute -> penon .)
    PENSIZE         reduce using rule 41 (statute -> penon .)
    PENFORWARD      reduce using rule 41 (statute -> penon .)
    PENBACK         reduce using rule 41 (statute -> penon .)
    ROTATE          reduce using rule 41 (statute -> penon .)
    WHILE           reduce using rule 41 (statute -> penon .)
    RETURN          reduce using rule 41 (statute -> penon .)
    PENON           reduce using rule 41 (statute -> penon .)
    PENOFF          reduce using rule 41 (statute -> penon .)
    RBRACE          reduce using rule 41 (statute -> penon .)
    VAR             reduce using rule 41 (statute -> penon .)


state 66

    (42) statute -> penoff .

    ID              reduce using rule 42 (statute -> penoff .)
    IF              reduce using rule 42 (statute -> penoff .)
    TRIANGLE        reduce using rule 42 (statute -> penoff .)
    RECTANGLE       reduce using rule 42 (statute -> penoff .)
    SQUARE          reduce using rule 42 (statute -> penoff .)
    CIRCLE          reduce using rule 42 (statute -> penoff .)
    POLIGON         reduce using rule 42 (statute -> penoff .)
    COLOR           reduce using rule 42 (statute -> penoff .)
    PENSIZE         reduce using rule 42 (statute -> penoff .)
    PENFORWARD      reduce using rule 42 (statute -> penoff .)
    PENBACK         reduce using rule 42 (statute -> penoff .)
    ROTATE          reduce using rule 42 (statute -> penoff .)
    WHILE           reduce using rule 42 (statute -> penoff .)
    RETURN          reduce using rule 42 (statute -> penoff .)
    PENON           reduce using rule 42 (statute -> penoff .)
    PENOFF          reduce using rule 42 (statute -> penoff .)
    RBRACE          reduce using rule 42 (statute -> penoff .)
    VAR             reduce using rule 42 (statute -> penoff .)


state 67

    (46) assignment -> ID . ASSIGN expression SEMICOLON
    (47) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (48) cte_id -> .
    (125) check_name -> .

    ASSIGN          shift and go to state 102
    LBRACKET        reduce using rule 48 (cte_id -> .)
    LPAREN          reduce using rule 125 (check_name -> .)

    cte_id                         shift and go to state 103
    check_name                     shift and go to state 104

state 68

    (91) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 105


state 69

    (69) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 70

    (70) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 71

    (68) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 108


state 72

    (67) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 109


state 73

    (71) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 110


state 74

    (66) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 111


state 75

    (74) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 112


state 76

    (75) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 113


state 77

    (76) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 114


state 78

    (72) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (73) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 115


state 79

    (43) while -> WHILE . while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (44) while_return -> .

    LPAREN          reduce using rule 44 (while_return -> .)

    while_return                   shift and go to state 116

state 80

    (131) return -> RETURN . var_cte SEMICOLON
    (132) return -> RETURN . st_cte SEMICOLON
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (55) st_cte -> . STRING
    (56) st_cte -> . cte_bool
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 119
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    STRING          shift and go to state 121
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    var_cte                        shift and go to state 117
    st_cte                         shift and go to state 118
    cte_bool                       shift and go to state 120
    call                           shift and go to state 96

state 81

    (77) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 122


state 82

    (78) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 123


state 83

    (57) funcs -> FUNC type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 124


state 84

    (58) funcs -> FUNC VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 125


state 85

    (16) vars2 -> type vars3 SEMICOLON vars2 .

    DAVINCI         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    FUNC            reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RETURN          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 16 (vars2 -> type vars3 SEMICOLON vars2 .)


state 86

    (116) factor -> ID . push_id
    (83) var_cte -> ID .
    (87) var_cte -> ID . list
    (124) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (119) push_id -> .
    (25) list -> . LIST
    (125) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for LESSER resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for GREATER resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for EQUAL resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 83 (var_cte -> ID .)
    DIVIDE          reduce using rule 83 (var_cte -> ID .)
    TIMES           reduce using rule 83 (var_cte -> ID .)
    MINUS           reduce using rule 83 (var_cte -> ID .)
    PLUS            reduce using rule 83 (var_cte -> ID .)
    LESSER          reduce using rule 83 (var_cte -> ID .)
    GREATER         reduce using rule 83 (var_cte -> ID .)
    EQUAL           reduce using rule 83 (var_cte -> ID .)
    NOTEQUAL        reduce using rule 83 (var_cte -> ID .)
    GREATEROREQUAL  reduce using rule 83 (var_cte -> ID .)
    LESSEROREQUAL   reduce using rule 83 (var_cte -> ID .)
    COMMA           reduce using rule 83 (var_cte -> ID .)
    SEMICOLON       reduce using rule 83 (var_cte -> ID .)
    RPAREN          reduce using rule 83 (var_cte -> ID .)
    RBRACKET        reduce using rule 83 (var_cte -> ID .)
    LIST            shift and go to state 44
    LPAREN          reduce using rule 125 (check_name -> .)

  ! DIVIDE          [ reduce using rule 119 (push_id -> .) ]
  ! TIMES           [ reduce using rule 119 (push_id -> .) ]
  ! MINUS           [ reduce using rule 119 (push_id -> .) ]
  ! PLUS            [ reduce using rule 119 (push_id -> .) ]
  ! LESSER          [ reduce using rule 119 (push_id -> .) ]
  ! GREATER         [ reduce using rule 119 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 119 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 119 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 119 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 119 (push_id -> .) ]
  ! COMMA           [ reduce using rule 119 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 119 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 119 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 119 (push_id -> .) ]

    push_id                        shift and go to state 126
    list                           shift and go to state 127
    check_name                     shift and go to state 104

state 87

    (18) vars3 -> ID ASSIGN expression . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (133) empty -> .

    COMMA           shift and go to state 45
    SEMICOLON       reduce using rule 133 (empty -> .)

    vars4                          shift and go to state 128
    empty                          shift and go to state 46

state 88

    (97) expression -> exp . expression1
    (98) expression1 -> . LESSER relop exp top_relop
    (99) expression1 -> . GREATER relop exp top_relop
    (100) expression1 -> . EQUAL relop exp top_relop
    (101) expression1 -> . NOTEQUAL relop exp top_relop
    (102) expression1 -> . GREATEROREQUAL relop exp top_relop
    (103) expression1 -> . LESSEROREQUAL relop exp top_relop
    (104) expression1 -> . empty
    (133) empty -> .

    LESSER          shift and go to state 130
    GREATER         shift and go to state 131
    EQUAL           shift and go to state 132
    NOTEQUAL        shift and go to state 133
    GREATEROREQUAL  shift and go to state 134
    LESSEROREQUAL   shift and go to state 135
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    RPAREN          reduce using rule 133 (empty -> .)

    expression1                    shift and go to state 129
    empty                          shift and go to state 136

state 89

    (107) exp -> term . top_exp exp1
    (111) top_exp -> .

    MINUS           reduce using rule 111 (top_exp -> .)
    PLUS            reduce using rule 111 (top_exp -> .)
    LESSER          reduce using rule 111 (top_exp -> .)
    GREATER         reduce using rule 111 (top_exp -> .)
    EQUAL           reduce using rule 111 (top_exp -> .)
    NOTEQUAL        reduce using rule 111 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 111 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 111 (top_exp -> .)
    COMMA           reduce using rule 111 (top_exp -> .)
    SEMICOLON       reduce using rule 111 (top_exp -> .)
    RPAREN          reduce using rule 111 (top_exp -> .)
    RBRACKET        reduce using rule 111 (top_exp -> .)

    top_exp                        shift and go to state 137

state 90

    (120) term -> factor . top_factor term1
    (113) top_factor -> .

    DIVIDE          reduce using rule 113 (top_factor -> .)
    TIMES           reduce using rule 113 (top_factor -> .)
    MINUS           reduce using rule 113 (top_factor -> .)
    PLUS            reduce using rule 113 (top_factor -> .)
    LESSER          reduce using rule 113 (top_factor -> .)
    GREATER         reduce using rule 113 (top_factor -> .)
    EQUAL           reduce using rule 113 (top_factor -> .)
    NOTEQUAL        reduce using rule 113 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 113 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 113 (top_factor -> .)
    COMMA           reduce using rule 113 (top_factor -> .)
    SEMICOLON       reduce using rule 113 (top_factor -> .)
    RPAREN          reduce using rule 113 (top_factor -> .)
    RBRACKET        reduce using rule 113 (top_factor -> .)

    top_factor                     shift and go to state 138

state 91

    (114) factor -> LPAREN . false_bottom expression RPAREN end_par
    (117) false_bottom -> .

    LPAREN          reduce using rule 117 (false_bottom -> .)
    ID              reduce using rule 117 (false_bottom -> .)
    CTE_INT         reduce using rule 117 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 117 (false_bottom -> .)
    TRUE            reduce using rule 117 (false_bottom -> .)
    FALSE           reduce using rule 117 (false_bottom -> .)

    false_bottom                   shift and go to state 139

state 92

    (115) factor -> var_cte .

    DIVIDE          reduce using rule 115 (factor -> var_cte .)
    TIMES           reduce using rule 115 (factor -> var_cte .)
    MINUS           reduce using rule 115 (factor -> var_cte .)
    PLUS            reduce using rule 115 (factor -> var_cte .)
    LESSER          reduce using rule 115 (factor -> var_cte .)
    GREATER         reduce using rule 115 (factor -> var_cte .)
    EQUAL           reduce using rule 115 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 115 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 115 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 115 (factor -> var_cte .)
    COMMA           reduce using rule 115 (factor -> var_cte .)
    SEMICOLON       reduce using rule 115 (factor -> var_cte .)
    RPAREN          reduce using rule 115 (factor -> var_cte .)
    RBRACKET        reduce using rule 115 (factor -> var_cte .)


state 93

    (84) var_cte -> CTE_INT .

    DIVIDE          reduce using rule 84 (var_cte -> CTE_INT .)
    TIMES           reduce using rule 84 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 84 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 84 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 84 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 84 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 84 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 84 (var_cte -> CTE_INT .)
    GREATEROREQUAL  reduce using rule 84 (var_cte -> CTE_INT .)
    LESSEROREQUAL   reduce using rule 84 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 84 (var_cte -> CTE_INT .)
    SEMICOLON       reduce using rule 84 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 84 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 84 (var_cte -> CTE_INT .)


state 94

    (85) var_cte -> CTE_FLOAT .

    DIVIDE          reduce using rule 85 (var_cte -> CTE_FLOAT .)
    TIMES           reduce using rule 85 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 85 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 85 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 85 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 85 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 85 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 85 (var_cte -> CTE_FLOAT .)
    GREATEROREQUAL  reduce using rule 85 (var_cte -> CTE_FLOAT .)
    LESSEROREQUAL   reduce using rule 85 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 85 (var_cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 85 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 85 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 85 (var_cte -> CTE_FLOAT .)


state 95

    (86) var_cte -> cte_bool .

    DIVIDE          reduce using rule 86 (var_cte -> cte_bool .)
    TIMES           reduce using rule 86 (var_cte -> cte_bool .)
    MINUS           reduce using rule 86 (var_cte -> cte_bool .)
    PLUS            reduce using rule 86 (var_cte -> cte_bool .)
    LESSER          reduce using rule 86 (var_cte -> cte_bool .)
    GREATER         reduce using rule 86 (var_cte -> cte_bool .)
    EQUAL           reduce using rule 86 (var_cte -> cte_bool .)
    NOTEQUAL        reduce using rule 86 (var_cte -> cte_bool .)
    GREATEROREQUAL  reduce using rule 86 (var_cte -> cte_bool .)
    LESSEROREQUAL   reduce using rule 86 (var_cte -> cte_bool .)
    COMMA           reduce using rule 86 (var_cte -> cte_bool .)
    SEMICOLON       reduce using rule 86 (var_cte -> cte_bool .)
    RPAREN          reduce using rule 86 (var_cte -> cte_bool .)
    RBRACKET        reduce using rule 86 (var_cte -> cte_bool .)


state 96

    (88) var_cte -> call .

    DIVIDE          reduce using rule 88 (var_cte -> call .)
    TIMES           reduce using rule 88 (var_cte -> call .)
    MINUS           reduce using rule 88 (var_cte -> call .)
    PLUS            reduce using rule 88 (var_cte -> call .)
    LESSER          reduce using rule 88 (var_cte -> call .)
    GREATER         reduce using rule 88 (var_cte -> call .)
    EQUAL           reduce using rule 88 (var_cte -> call .)
    NOTEQUAL        reduce using rule 88 (var_cte -> call .)
    GREATEROREQUAL  reduce using rule 88 (var_cte -> call .)
    LESSEROREQUAL   reduce using rule 88 (var_cte -> call .)
    COMMA           reduce using rule 88 (var_cte -> call .)
    SEMICOLON       reduce using rule 88 (var_cte -> call .)
    RPAREN          reduce using rule 88 (var_cte -> call .)
    RBRACKET        reduce using rule 88 (var_cte -> call .)


state 97

    (89) cte_bool -> TRUE .

    DIVIDE          reduce using rule 89 (cte_bool -> TRUE .)
    TIMES           reduce using rule 89 (cte_bool -> TRUE .)
    MINUS           reduce using rule 89 (cte_bool -> TRUE .)
    PLUS            reduce using rule 89 (cte_bool -> TRUE .)
    LESSER          reduce using rule 89 (cte_bool -> TRUE .)
    GREATER         reduce using rule 89 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 89 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 89 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 89 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 89 (cte_bool -> TRUE .)
    COMMA           reduce using rule 89 (cte_bool -> TRUE .)
    SEMICOLON       reduce using rule 89 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 89 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 89 (cte_bool -> TRUE .)


state 98

    (90) cte_bool -> FALSE .

    DIVIDE          reduce using rule 90 (cte_bool -> FALSE .)
    TIMES           reduce using rule 90 (cte_bool -> FALSE .)
    MINUS           reduce using rule 90 (cte_bool -> FALSE .)
    PLUS            reduce using rule 90 (cte_bool -> FALSE .)
    LESSER          reduce using rule 90 (cte_bool -> FALSE .)
    GREATER         reduce using rule 90 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 90 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 90 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 90 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 90 (cte_bool -> FALSE .)
    COMMA           reduce using rule 90 (cte_bool -> FALSE .)
    SEMICOLON       reduce using rule 90 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 90 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 90 (cte_bool -> FALSE .)


state 99

    (19) vars3 -> ID list vars4 .

    SEMICOLON       reduce using rule 19 (vars3 -> ID list vars4 .)


state 100

    (22) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 22 (vars4 -> COMMA vars3 .)


state 101

    (10) b1 -> vars local_vars b2 .
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 10 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    statute                        shift and go to state 49
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 102

    (46) assignment -> ID ASSIGN . expression SEMICOLON
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expression                     shift and go to state 140
    exp                            shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 103

    (47) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 141


state 104

    (124) call -> ID check_name . LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 142


state 105

    (91) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expression                     shift and go to state 143
    exp                            shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 106

    (69) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 144
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 107

    (70) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 145
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 108

    (68) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 146
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 109

    (67) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 147
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 110

    (71) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 148
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 111

    (66) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (49) color_cte -> . RED
    (50) color_cte -> . BLUE
    (51) color_cte -> . YELLOW
    (52) color_cte -> . GREEN
    (53) color_cte -> . PINK
    (54) color_cte -> . PURPLE

    RED             shift and go to state 150
    BLUE            shift and go to state 151
    YELLOW          shift and go to state 152
    GREEN           shift and go to state 153
    PINK            shift and go to state 154
    PURPLE          shift and go to state 155

    color_cte                      shift and go to state 149

state 112

    (74) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 156
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 113

    (75) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 157
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 114

    (76) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 158
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 115

    (72) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (73) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    CTE_STRING      shift and go to state 160
    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 159
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 116

    (43) while -> WHILE while_return . LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 161


state 117

    (131) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 162


state 118

    (132) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 163


state 119

    (83) var_cte -> ID .
    (87) var_cte -> ID . list
    (124) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (25) list -> . LIST
    (125) check_name -> .

    SEMICOLON       reduce using rule 83 (var_cte -> ID .)
    LIST            shift and go to state 44
    LPAREN          reduce using rule 125 (check_name -> .)

    list                           shift and go to state 127
    check_name                     shift and go to state 104

state 120

    (86) var_cte -> cte_bool .
    (56) st_cte -> cte_bool .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 56 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 56 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 86 (var_cte -> cte_bool .) ]


state 121

    (55) st_cte -> STRING .

    SEMICOLON       reduce using rule 55 (st_cte -> STRING .)
    RPAREN          reduce using rule 55 (st_cte -> STRING .)


state 122

    (77) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 164


state 123

    (78) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 165


state 124

    (57) funcs -> FUNC type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (59) funcs1 -> . funcs1 COMMA type ID
    (60) funcs1 -> . empty
    (133) empty -> .

    RPAREN          reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)

    funcs1                         shift and go to state 166
    empty                          shift and go to state 167

state 125

    (58) funcs -> FUNC VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (59) funcs1 -> . funcs1 COMMA type ID
    (60) funcs1 -> . empty
    (133) empty -> .

    RPAREN          reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)

    funcs1                         shift and go to state 168
    empty                          shift and go to state 167

state 126

    (116) factor -> ID push_id .

    DIVIDE          reduce using rule 116 (factor -> ID push_id .)
    TIMES           reduce using rule 116 (factor -> ID push_id .)
    MINUS           reduce using rule 116 (factor -> ID push_id .)
    PLUS            reduce using rule 116 (factor -> ID push_id .)
    LESSER          reduce using rule 116 (factor -> ID push_id .)
    GREATER         reduce using rule 116 (factor -> ID push_id .)
    EQUAL           reduce using rule 116 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 116 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 116 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 116 (factor -> ID push_id .)
    COMMA           reduce using rule 116 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 116 (factor -> ID push_id .)
    RPAREN          reduce using rule 116 (factor -> ID push_id .)
    RBRACKET        reduce using rule 116 (factor -> ID push_id .)


state 127

    (87) var_cte -> ID list .

    DIVIDE          reduce using rule 87 (var_cte -> ID list .)
    TIMES           reduce using rule 87 (var_cte -> ID list .)
    MINUS           reduce using rule 87 (var_cte -> ID list .)
    PLUS            reduce using rule 87 (var_cte -> ID list .)
    LESSER          reduce using rule 87 (var_cte -> ID list .)
    GREATER         reduce using rule 87 (var_cte -> ID list .)
    EQUAL           reduce using rule 87 (var_cte -> ID list .)
    NOTEQUAL        reduce using rule 87 (var_cte -> ID list .)
    GREATEROREQUAL  reduce using rule 87 (var_cte -> ID list .)
    LESSEROREQUAL   reduce using rule 87 (var_cte -> ID list .)
    COMMA           reduce using rule 87 (var_cte -> ID list .)
    SEMICOLON       reduce using rule 87 (var_cte -> ID list .)
    RPAREN          reduce using rule 87 (var_cte -> ID list .)
    RBRACKET        reduce using rule 87 (var_cte -> ID list .)


state 128

    (18) vars3 -> ID ASSIGN expression vars4 .

    SEMICOLON       reduce using rule 18 (vars3 -> ID ASSIGN expression vars4 .)


state 129

    (97) expression -> exp expression1 .

    COMMA           reduce using rule 97 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 97 (expression -> exp expression1 .)
    RPAREN          reduce using rule 97 (expression -> exp expression1 .)


state 130

    (98) expression1 -> LESSER . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 169

state 131

    (99) expression1 -> GREATER . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 170

state 132

    (100) expression1 -> EQUAL . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 171

state 133

    (101) expression1 -> NOTEQUAL . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 172

state 134

    (102) expression1 -> GREATEROREQUAL . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 173

state 135

    (103) expression1 -> LESSEROREQUAL . relop exp top_relop
    (105) relop -> .

    LPAREN          reduce using rule 105 (relop -> .)
    ID              reduce using rule 105 (relop -> .)
    CTE_INT         reduce using rule 105 (relop -> .)
    CTE_FLOAT       reduce using rule 105 (relop -> .)
    TRUE            reduce using rule 105 (relop -> .)
    FALSE           reduce using rule 105 (relop -> .)

    relop                          shift and go to state 174

state 136

    (104) expression1 -> empty .

    COMMA           reduce using rule 104 (expression1 -> empty .)
    SEMICOLON       reduce using rule 104 (expression1 -> empty .)
    RPAREN          reduce using rule 104 (expression1 -> empty .)


state 137

    (107) exp -> term top_exp . exp1
    (108) exp1 -> . MINUS push_sign exp
    (109) exp1 -> . PLUS push_sign exp
    (110) exp1 -> . empty
    (133) empty -> .

    MINUS           shift and go to state 176
    PLUS            shift and go to state 177
    LESSER          reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    EQUAL           reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    GREATEROREQUAL  reduce using rule 133 (empty -> .)
    LESSEROREQUAL   reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    RPAREN          reduce using rule 133 (empty -> .)
    RBRACKET        reduce using rule 133 (empty -> .)

    exp1                           shift and go to state 175
    empty                          shift and go to state 178

state 138

    (120) term -> factor top_factor . term1
    (121) term1 -> . DIVIDE push_sign term
    (122) term1 -> . TIMES push_sign term
    (123) term1 -> . empty
    (133) empty -> .

    DIVIDE          shift and go to state 180
    TIMES           shift and go to state 181
    MINUS           reduce using rule 133 (empty -> .)
    PLUS            reduce using rule 133 (empty -> .)
    LESSER          reduce using rule 133 (empty -> .)
    GREATER         reduce using rule 133 (empty -> .)
    EQUAL           reduce using rule 133 (empty -> .)
    NOTEQUAL        reduce using rule 133 (empty -> .)
    GREATEROREQUAL  reduce using rule 133 (empty -> .)
    LESSEROREQUAL   reduce using rule 133 (empty -> .)
    COMMA           reduce using rule 133 (empty -> .)
    SEMICOLON       reduce using rule 133 (empty -> .)
    RPAREN          reduce using rule 133 (empty -> .)
    RBRACKET        reduce using rule 133 (empty -> .)

    term1                          shift and go to state 179
    empty                          shift and go to state 182

state 139

    (114) factor -> LPAREN false_bottom . expression RPAREN end_par
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expression                     shift and go to state 183
    exp                            shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 140

    (46) assignment -> ID ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 184


state 141

    (47) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 185
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 142

    (124) call -> ID check_name LPAREN . create_era call1 RPAREN SEMICOLON gosub
    (126) create_era -> .

    ID              reduce using rule 126 (create_era -> .)
    STRING          reduce using rule 126 (create_era -> .)
    TRUE            reduce using rule 126 (create_era -> .)
    FALSE           reduce using rule 126 (create_era -> .)
    LPAREN          reduce using rule 126 (create_era -> .)
    CTE_INT         reduce using rule 126 (create_era -> .)
    CTE_FLOAT       reduce using rule 126 (create_era -> .)

    create_era                     shift and go to state 186

state 143

    (91) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 187


state 144

    (69) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 188


state 145

    (70) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 189


state 146

    (68) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 190


state 147

    (67) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 191


state 148

    (71) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 192


state 149

    (66) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 193


state 150

    (49) color_cte -> RED .

    RPAREN          reduce using rule 49 (color_cte -> RED .)


state 151

    (50) color_cte -> BLUE .

    RPAREN          reduce using rule 50 (color_cte -> BLUE .)


state 152

    (51) color_cte -> YELLOW .

    RPAREN          reduce using rule 51 (color_cte -> YELLOW .)


state 153

    (52) color_cte -> GREEN .

    RPAREN          reduce using rule 52 (color_cte -> GREEN .)


state 154

    (53) color_cte -> PINK .

    RPAREN          reduce using rule 53 (color_cte -> PINK .)


state 155

    (54) color_cte -> PURPLE .

    RPAREN          reduce using rule 54 (color_cte -> PURPLE .)


state 156

    (74) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 194


state 157

    (75) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 195


state 158

    (76) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 196


state 159

    (72) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 197


state 160

    (73) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 198


state 161

    (43) while -> WHILE while_return LPAREN . type_check expression RPAREN LBRACE b2 RBRACE end_while
    (94) type_check -> .

    LPAREN          reduce using rule 94 (type_check -> .)
    ID              reduce using rule 94 (type_check -> .)
    CTE_INT         reduce using rule 94 (type_check -> .)
    CTE_FLOAT       reduce using rule 94 (type_check -> .)
    TRUE            reduce using rule 94 (type_check -> .)
    FALSE           reduce using rule 94 (type_check -> .)

    type_check                     shift and go to state 199

state 162

    (131) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 131 (return -> RETURN var_cte SEMICOLON .)


state 163

    (132) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 132 (return -> RETURN st_cte SEMICOLON .)


state 164

    (77) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 200


state 165

    (78) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 201


state 166

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (59) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 202
    COMMA           shift and go to state 203


state 167

    (60) funcs1 -> empty .

    RPAREN          reduce using rule 60 (funcs1 -> empty .)
    COMMA           reduce using rule 60 (funcs1 -> empty .)


state 168

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (59) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 204
    COMMA           shift and go to state 203


state 169

    (98) expression1 -> LESSER relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 205
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 170

    (99) expression1 -> GREATER relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 206
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 171

    (100) expression1 -> EQUAL relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 207
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 172

    (101) expression1 -> NOTEQUAL relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 208
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 173

    (102) expression1 -> GREATEROREQUAL relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 209
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 174

    (103) expression1 -> LESSEROREQUAL relop . exp top_relop
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 210
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 175

    (107) exp -> term top_exp exp1 .

    LESSER          reduce using rule 107 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 107 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 107 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 107 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 107 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 107 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 107 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 107 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 107 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 107 (exp -> term top_exp exp1 .)


state 176

    (108) exp1 -> MINUS . push_sign exp
    (112) push_sign -> .

    LPAREN          reduce using rule 112 (push_sign -> .)
    ID              reduce using rule 112 (push_sign -> .)
    CTE_INT         reduce using rule 112 (push_sign -> .)
    CTE_FLOAT       reduce using rule 112 (push_sign -> .)
    TRUE            reduce using rule 112 (push_sign -> .)
    FALSE           reduce using rule 112 (push_sign -> .)

    push_sign                      shift and go to state 211

state 177

    (109) exp1 -> PLUS . push_sign exp
    (112) push_sign -> .

    LPAREN          reduce using rule 112 (push_sign -> .)
    ID              reduce using rule 112 (push_sign -> .)
    CTE_INT         reduce using rule 112 (push_sign -> .)
    CTE_FLOAT       reduce using rule 112 (push_sign -> .)
    TRUE            reduce using rule 112 (push_sign -> .)
    FALSE           reduce using rule 112 (push_sign -> .)

    push_sign                      shift and go to state 212

state 178

    (110) exp1 -> empty .

    LESSER          reduce using rule 110 (exp1 -> empty .)
    GREATER         reduce using rule 110 (exp1 -> empty .)
    EQUAL           reduce using rule 110 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 110 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 110 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 110 (exp1 -> empty .)
    COMMA           reduce using rule 110 (exp1 -> empty .)
    SEMICOLON       reduce using rule 110 (exp1 -> empty .)
    RPAREN          reduce using rule 110 (exp1 -> empty .)
    RBRACKET        reduce using rule 110 (exp1 -> empty .)


state 179

    (120) term -> factor top_factor term1 .

    MINUS           reduce using rule 120 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 120 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 120 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 120 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 120 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 120 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 120 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 120 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 120 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 120 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 120 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 120 (term -> factor top_factor term1 .)


state 180

    (121) term1 -> DIVIDE . push_sign term
    (112) push_sign -> .

    LPAREN          reduce using rule 112 (push_sign -> .)
    ID              reduce using rule 112 (push_sign -> .)
    CTE_INT         reduce using rule 112 (push_sign -> .)
    CTE_FLOAT       reduce using rule 112 (push_sign -> .)
    TRUE            reduce using rule 112 (push_sign -> .)
    FALSE           reduce using rule 112 (push_sign -> .)

    push_sign                      shift and go to state 213

state 181

    (122) term1 -> TIMES . push_sign term
    (112) push_sign -> .

    LPAREN          reduce using rule 112 (push_sign -> .)
    ID              reduce using rule 112 (push_sign -> .)
    CTE_INT         reduce using rule 112 (push_sign -> .)
    CTE_FLOAT       reduce using rule 112 (push_sign -> .)
    TRUE            reduce using rule 112 (push_sign -> .)
    FALSE           reduce using rule 112 (push_sign -> .)

    push_sign                      shift and go to state 214

state 182

    (123) term1 -> empty .

    MINUS           reduce using rule 123 (term1 -> empty .)
    PLUS            reduce using rule 123 (term1 -> empty .)
    LESSER          reduce using rule 123 (term1 -> empty .)
    GREATER         reduce using rule 123 (term1 -> empty .)
    EQUAL           reduce using rule 123 (term1 -> empty .)
    NOTEQUAL        reduce using rule 123 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 123 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 123 (term1 -> empty .)
    COMMA           reduce using rule 123 (term1 -> empty .)
    SEMICOLON       reduce using rule 123 (term1 -> empty .)
    RPAREN          reduce using rule 123 (term1 -> empty .)
    RBRACKET        reduce using rule 123 (term1 -> empty .)


state 183

    (114) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 215


state 184

    (46) assignment -> ID ASSIGN expression SEMICOLON .

    ID              reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    IF              reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 46 (assignment -> ID ASSIGN expression SEMICOLON .)


state 185

    (47) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 216


state 186

    (124) call -> ID check_name LPAREN create_era . call1 RPAREN SEMICOLON gosub
    (128) call1 -> . ID COMMA call1
    (129) call1 -> . exp
    (130) call1 -> . st_cte
    (107) exp -> . term top_exp exp1
    (55) st_cte -> . STRING
    (56) st_cte -> . cte_bool
    (120) term -> . factor top_factor term1
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 217
    STRING          shift and go to state 121
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    LPAREN          shift and go to state 91
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94

    call1                          shift and go to state 218
    exp                            shift and go to state 219
    st_cte                         shift and go to state 220
    term                           shift and go to state 89
    cte_bool                       shift and go to state 221
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    call                           shift and go to state 96

state 187

    (91) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (94) type_check -> .

    LBRACE          reduce using rule 94 (type_check -> .)

    type_check                     shift and go to state 222

state 188

    (69) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 223
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 189

    (70) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 224
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 190

    (68) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 225


state 191

    (67) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 226


state 192

    (71) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 227
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 193

    (66) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 194

    (74) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 229


state 195

    (75) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 196

    (76) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 197

    (72) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 198

    (73) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 233


state 199

    (43) while -> WHILE while_return LPAREN type_check . expression RPAREN LBRACE b2 RBRACE end_while
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    expression                     shift and go to state 234
    exp                            shift and go to state 88
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 200

    (77) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 77 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 201

    (78) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 78 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 202

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 235


state 203

    (59) funcs1 -> funcs1 COMMA . type ID
    (79) type -> . INT
    (80) type -> . FLOAT
    (81) type -> . STRING
    (82) type -> . BOOL

    INT             shift and go to state 21
    FLOAT           shift and go to state 22
    STRING          shift and go to state 23
    BOOL            shift and go to state 24

    type                           shift and go to state 236

state 204

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 237


state 205

    (98) expression1 -> LESSER relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 238

state 206

    (99) expression1 -> GREATER relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 239

state 207

    (100) expression1 -> EQUAL relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 240

state 208

    (101) expression1 -> NOTEQUAL relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 241

state 209

    (102) expression1 -> GREATEROREQUAL relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 242

state 210

    (103) expression1 -> LESSEROREQUAL relop exp . top_relop
    (106) top_relop -> .

    COMMA           reduce using rule 106 (top_relop -> .)
    SEMICOLON       reduce using rule 106 (top_relop -> .)
    RPAREN          reduce using rule 106 (top_relop -> .)

    top_relop                      shift and go to state 243

state 211

    (108) exp1 -> MINUS push_sign . exp
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 244
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 212

    (109) exp1 -> PLUS push_sign . exp
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 245
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 213

    (121) term1 -> DIVIDE push_sign . term
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    term                           shift and go to state 246
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 214

    (122) term1 -> TIMES push_sign . term
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    term                           shift and go to state 247
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 215

    (114) factor -> LPAREN false_bottom expression RPAREN . end_par
    (118) end_par -> .

    DIVIDE          reduce using rule 118 (end_par -> .)
    TIMES           reduce using rule 118 (end_par -> .)
    MINUS           reduce using rule 118 (end_par -> .)
    PLUS            reduce using rule 118 (end_par -> .)
    LESSER          reduce using rule 118 (end_par -> .)
    GREATER         reduce using rule 118 (end_par -> .)
    EQUAL           reduce using rule 118 (end_par -> .)
    NOTEQUAL        reduce using rule 118 (end_par -> .)
    GREATEROREQUAL  reduce using rule 118 (end_par -> .)
    LESSEROREQUAL   reduce using rule 118 (end_par -> .)
    COMMA           reduce using rule 118 (end_par -> .)
    SEMICOLON       reduce using rule 118 (end_par -> .)
    RPAREN          reduce using rule 118 (end_par -> .)
    RBRACKET        reduce using rule 118 (end_par -> .)

    end_par                        shift and go to state 248

state 216

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 249


state 217

    (128) call1 -> ID . COMMA call1
    (116) factor -> ID . push_id
    (83) var_cte -> ID .
    (87) var_cte -> ID . list
    (124) call -> ID . check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (119) push_id -> .
    (25) list -> . LIST
    (125) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 83 (var_cte -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 83 (var_cte -> ID .)
    COMMA           shift and go to state 250
    DIVIDE          reduce using rule 83 (var_cte -> ID .)
    TIMES           reduce using rule 83 (var_cte -> ID .)
    MINUS           reduce using rule 83 (var_cte -> ID .)
    PLUS            reduce using rule 83 (var_cte -> ID .)
    RPAREN          reduce using rule 83 (var_cte -> ID .)
    LIST            shift and go to state 44
    LPAREN          reduce using rule 125 (check_name -> .)

  ! DIVIDE          [ reduce using rule 119 (push_id -> .) ]
  ! TIMES           [ reduce using rule 119 (push_id -> .) ]
  ! MINUS           [ reduce using rule 119 (push_id -> .) ]
  ! PLUS            [ reduce using rule 119 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 119 (push_id -> .) ]

    push_id                        shift and go to state 126
    list                           shift and go to state 127
    check_name                     shift and go to state 104

state 218

    (124) call -> ID check_name LPAREN create_era call1 . RPAREN SEMICOLON gosub

    RPAREN          shift and go to state 251


state 219

    (129) call1 -> exp .

    RPAREN          reduce using rule 129 (call1 -> exp .)


state 220

    (130) call1 -> st_cte .

    RPAREN          reduce using rule 130 (call1 -> st_cte .)


state 221

    (56) st_cte -> cte_bool .
    (86) var_cte -> cte_bool .

  ! reduce/reduce conflict for RPAREN resolved using rule 56 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 56 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 86 (var_cte -> cte_bool .)
    TIMES           reduce using rule 86 (var_cte -> cte_bool .)
    MINUS           reduce using rule 86 (var_cte -> cte_bool .)
    PLUS            reduce using rule 86 (var_cte -> cte_bool .)

  ! RPAREN          [ reduce using rule 86 (var_cte -> cte_bool .) ]


state 222

    (91) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 252


state 223

    (69) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 253


state 224

    (70) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 254


state 225

    (68) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 226

    (67) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 227

    (71) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 255


state 228

    (66) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 229

    (74) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 74 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 230

    (75) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 75 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 231

    (76) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 76 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 232

    (72) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 233

    (73) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 73 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 234

    (43) while -> WHILE while_return LPAREN type_check expression . RPAREN LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 256


state 235

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (61) funcs2 -> . funcs2 vars
    (62) funcs2 -> . funcs2 statute
    (63) funcs2 -> . empty
    (133) empty -> .

    RBRACE          reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)

    funcs2                         shift and go to state 257
    empty                          shift and go to state 258

state 236

    (59) funcs1 -> funcs1 COMMA type . ID

    ID              shift and go to state 259


state 237

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (61) funcs2 -> . funcs2 vars
    (62) funcs2 -> . funcs2 statute
    (63) funcs2 -> . empty
    (133) empty -> .

    RBRACE          reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)

    funcs2                         shift and go to state 260
    empty                          shift and go to state 258

state 238

    (98) expression1 -> LESSER relop exp top_relop .

    COMMA           reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)
    RPAREN          reduce using rule 98 (expression1 -> LESSER relop exp top_relop .)


state 239

    (99) expression1 -> GREATER relop exp top_relop .

    COMMA           reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)
    RPAREN          reduce using rule 99 (expression1 -> GREATER relop exp top_relop .)


state 240

    (100) expression1 -> EQUAL relop exp top_relop .

    COMMA           reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)
    RPAREN          reduce using rule 100 (expression1 -> EQUAL relop exp top_relop .)


state 241

    (101) expression1 -> NOTEQUAL relop exp top_relop .

    COMMA           reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)
    RPAREN          reduce using rule 101 (expression1 -> NOTEQUAL relop exp top_relop .)


state 242

    (102) expression1 -> GREATEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 102 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 243

    (103) expression1 -> LESSEROREQUAL relop exp top_relop .

    COMMA           reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    RPAREN          reduce using rule 103 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 244

    (108) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 108 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 108 (exp1 -> MINUS push_sign exp .)


state 245

    (109) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 109 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 109 (exp1 -> PLUS push_sign exp .)


state 246

    (121) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 121 (term1 -> DIVIDE push_sign term .)


state 247

    (122) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 122 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 122 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 122 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 122 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 122 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 122 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 122 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 122 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 122 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 122 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 122 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 122 (term1 -> TIMES push_sign term .)


state 248

    (114) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 114 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 249

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (97) expression -> . exp expression1
    (107) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    LPAREN          shift and go to state 91
    ID              shift and go to state 86
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98

    exp                            shift and go to state 88
    expression                     shift and go to state 261
    term                           shift and go to state 89
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    cte_bool                       shift and go to state 95
    call                           shift and go to state 96

state 250

    (128) call1 -> ID COMMA . call1
    (128) call1 -> . ID COMMA call1
    (129) call1 -> . exp
    (130) call1 -> . st_cte
    (107) exp -> . term top_exp exp1
    (55) st_cte -> . STRING
    (56) st_cte -> . cte_bool
    (120) term -> . factor top_factor term1
    (89) cte_bool -> . TRUE
    (90) cte_bool -> . FALSE
    (114) factor -> . LPAREN false_bottom expression RPAREN end_par
    (115) factor -> . var_cte
    (116) factor -> . ID push_id
    (83) var_cte -> . ID
    (84) var_cte -> . CTE_INT
    (85) var_cte -> . CTE_FLOAT
    (86) var_cte -> . cte_bool
    (87) var_cte -> . ID list
    (88) var_cte -> . call
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub

    ID              shift and go to state 217
    STRING          shift and go to state 121
    TRUE            shift and go to state 97
    FALSE           shift and go to state 98
    LPAREN          shift and go to state 91
    CTE_INT         shift and go to state 93
    CTE_FLOAT       shift and go to state 94

    call1                          shift and go to state 262
    exp                            shift and go to state 219
    st_cte                         shift and go to state 220
    term                           shift and go to state 89
    cte_bool                       shift and go to state 221
    factor                         shift and go to state 90
    var_cte                        shift and go to state 92
    call                           shift and go to state 96

state 251

    (124) call -> ID check_name LPAREN create_era call1 RPAREN . SEMICOLON gosub

    SEMICOLON       shift and go to state 263


state 252

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (133) empty -> .

    RBRACE          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)

    b2                             shift and go to state 264
    empty                          shift and go to state 37

state 253

    (69) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 265


state 254

    (70) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 266


state 255

    (71) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 267


state 256

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 268


state 257

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (61) funcs2 -> funcs2 . vars
    (62) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 269
    VAR             shift and go to state 13
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    vars                           shift and go to state 270
    statute                        shift and go to state 271
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 258

    (63) funcs2 -> empty .

    RBRACE          reduce using rule 63 (funcs2 -> empty .)
    VAR             reduce using rule 63 (funcs2 -> empty .)
    ID              reduce using rule 63 (funcs2 -> empty .)
    IF              reduce using rule 63 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 63 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 63 (funcs2 -> empty .)
    SQUARE          reduce using rule 63 (funcs2 -> empty .)
    CIRCLE          reduce using rule 63 (funcs2 -> empty .)
    POLIGON         reduce using rule 63 (funcs2 -> empty .)
    COLOR           reduce using rule 63 (funcs2 -> empty .)
    PENSIZE         reduce using rule 63 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 63 (funcs2 -> empty .)
    PENBACK         reduce using rule 63 (funcs2 -> empty .)
    ROTATE          reduce using rule 63 (funcs2 -> empty .)
    WHILE           reduce using rule 63 (funcs2 -> empty .)
    RETURN          reduce using rule 63 (funcs2 -> empty .)
    PENON           reduce using rule 63 (funcs2 -> empty .)
    PENOFF          reduce using rule 63 (funcs2 -> empty .)


state 259

    (59) funcs1 -> funcs1 COMMA type ID .

    RPAREN          reduce using rule 59 (funcs1 -> funcs1 COMMA type ID .)
    COMMA           reduce using rule 59 (funcs1 -> funcs1 COMMA type ID .)


state 260

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (61) funcs2 -> funcs2 . vars
    (62) funcs2 -> funcs2 . statute
    (15) vars -> . VAR vars2
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 272
    VAR             shift and go to state 13
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    vars                           shift and go to state 270
    statute                        shift and go to state 271
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 261

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 273


state 262

    (128) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 128 (call1 -> ID COMMA call1 .)


state 263

    (124) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON . gosub
    (127) gosub -> .

    ID              reduce using rule 127 (gosub -> .)
    IF              reduce using rule 127 (gosub -> .)
    TRIANGLE        reduce using rule 127 (gosub -> .)
    RECTANGLE       reduce using rule 127 (gosub -> .)
    SQUARE          reduce using rule 127 (gosub -> .)
    CIRCLE          reduce using rule 127 (gosub -> .)
    POLIGON         reduce using rule 127 (gosub -> .)
    COLOR           reduce using rule 127 (gosub -> .)
    PENSIZE         reduce using rule 127 (gosub -> .)
    PENFORWARD      reduce using rule 127 (gosub -> .)
    PENBACK         reduce using rule 127 (gosub -> .)
    ROTATE          reduce using rule 127 (gosub -> .)
    WHILE           reduce using rule 127 (gosub -> .)
    RETURN          reduce using rule 127 (gosub -> .)
    PENON           reduce using rule 127 (gosub -> .)
    PENOFF          reduce using rule 127 (gosub -> .)
    RBRACE          reduce using rule 127 (gosub -> .)
    DIVIDE          reduce using rule 127 (gosub -> .)
    TIMES           reduce using rule 127 (gosub -> .)
    MINUS           reduce using rule 127 (gosub -> .)
    PLUS            reduce using rule 127 (gosub -> .)
    LESSER          reduce using rule 127 (gosub -> .)
    GREATER         reduce using rule 127 (gosub -> .)
    EQUAL           reduce using rule 127 (gosub -> .)
    NOTEQUAL        reduce using rule 127 (gosub -> .)
    GREATEROREQUAL  reduce using rule 127 (gosub -> .)
    LESSEROREQUAL   reduce using rule 127 (gosub -> .)
    COMMA           reduce using rule 127 (gosub -> .)
    SEMICOLON       reduce using rule 127 (gosub -> .)
    RPAREN          reduce using rule 127 (gosub -> .)
    RBRACKET        reduce using rule 127 (gosub -> .)
    VAR             reduce using rule 127 (gosub -> .)

    gosub                          shift and go to state 274

state 264

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 275
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    statute                        shift and go to state 49
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 265

    (69) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 266

    (70) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 267

    (71) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 268

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE . b2 RBRACE end_while
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (133) empty -> .

    RBRACE          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)

    b2                             shift and go to state 276
    empty                          shift and go to state 37

state 269

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (64) funcs3 -> . funcs
    (65) funcs3 -> . empty
    (57) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (133) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 12
    DAVINCI         reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

  ! FUNC            [ reduce using rule 133 (empty -> .) ]

    funcs3                         shift and go to state 277
    funcs                          shift and go to state 278
    empty                          shift and go to state 279

state 270

    (61) funcs2 -> funcs2 vars .

    RBRACE          reduce using rule 61 (funcs2 -> funcs2 vars .)
    VAR             reduce using rule 61 (funcs2 -> funcs2 vars .)
    ID              reduce using rule 61 (funcs2 -> funcs2 vars .)
    IF              reduce using rule 61 (funcs2 -> funcs2 vars .)
    TRIANGLE        reduce using rule 61 (funcs2 -> funcs2 vars .)
    RECTANGLE       reduce using rule 61 (funcs2 -> funcs2 vars .)
    SQUARE          reduce using rule 61 (funcs2 -> funcs2 vars .)
    CIRCLE          reduce using rule 61 (funcs2 -> funcs2 vars .)
    POLIGON         reduce using rule 61 (funcs2 -> funcs2 vars .)
    COLOR           reduce using rule 61 (funcs2 -> funcs2 vars .)
    PENSIZE         reduce using rule 61 (funcs2 -> funcs2 vars .)
    PENFORWARD      reduce using rule 61 (funcs2 -> funcs2 vars .)
    PENBACK         reduce using rule 61 (funcs2 -> funcs2 vars .)
    ROTATE          reduce using rule 61 (funcs2 -> funcs2 vars .)
    WHILE           reduce using rule 61 (funcs2 -> funcs2 vars .)
    RETURN          reduce using rule 61 (funcs2 -> funcs2 vars .)
    PENON           reduce using rule 61 (funcs2 -> funcs2 vars .)
    PENOFF          reduce using rule 61 (funcs2 -> funcs2 vars .)


state 271

    (62) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 62 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 62 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 62 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 62 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 62 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 62 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 62 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 62 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 62 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 62 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 62 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 62 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 62 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 62 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 62 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 62 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 62 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 62 (funcs2 -> funcs2 statute .)


state 272

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (64) funcs3 -> . funcs
    (65) funcs3 -> . empty
    (57) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (58) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (133) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 12
    DAVINCI         reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

  ! FUNC            [ reduce using rule 133 (empty -> .) ]

    funcs3                         shift and go to state 280
    funcs                          shift and go to state 278
    empty                          shift and go to state 279

state 273

    (47) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 47 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 274

    (124) call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .

    ID              reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    IF              reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TRIANGLE        reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RECTANGLE       reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SQUARE          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    CIRCLE          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    POLIGON         reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COLOR           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENSIZE         reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENFORWARD      reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENBACK         reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    ROTATE          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    WHILE           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RETURN          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENON           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PENOFF          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACE          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    DIVIDE          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    TIMES           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    MINUS           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    PLUS            reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSER          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATER         reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    EQUAL           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    NOTEQUAL        reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    GREATEROREQUAL  reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    LESSEROREQUAL   reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    COMMA           reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    SEMICOLON       reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RPAREN          reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    RBRACKET        reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)
    VAR             reduce using rule 124 (call -> ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub .)


state 275

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (92) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (93) condition1 -> . empty
    (95) gotoElse -> .
    (133) empty -> .

    ELSE            reduce using rule 95 (gotoElse -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)
    RBRACE          reduce using rule 133 (empty -> .)
    VAR             reduce using rule 133 (empty -> .)

    condition1                     shift and go to state 281
    gotoElse                       shift and go to state 282
    empty                          shift and go to state 283

state 276

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 . RBRACE end_while
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 284
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    statute                        shift and go to state 49
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 277

    (57) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 57 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 57 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 57 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 278

    (64) funcs3 -> funcs .

    DAVINCI         reduce using rule 64 (funcs3 -> funcs .)
    FUNC            reduce using rule 64 (funcs3 -> funcs .)
    VAR             reduce using rule 64 (funcs3 -> funcs .)


state 279

    (65) funcs3 -> empty .

    DAVINCI         reduce using rule 65 (funcs3 -> empty .)
    FUNC            reduce using rule 65 (funcs3 -> empty .)
    VAR             reduce using rule 65 (funcs3 -> empty .)


state 280

    (58) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 58 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 58 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 58 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 281

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (96) end_if -> .

    ID              reduce using rule 96 (end_if -> .)
    IF              reduce using rule 96 (end_if -> .)
    TRIANGLE        reduce using rule 96 (end_if -> .)
    RECTANGLE       reduce using rule 96 (end_if -> .)
    SQUARE          reduce using rule 96 (end_if -> .)
    CIRCLE          reduce using rule 96 (end_if -> .)
    POLIGON         reduce using rule 96 (end_if -> .)
    COLOR           reduce using rule 96 (end_if -> .)
    PENSIZE         reduce using rule 96 (end_if -> .)
    PENFORWARD      reduce using rule 96 (end_if -> .)
    PENBACK         reduce using rule 96 (end_if -> .)
    ROTATE          reduce using rule 96 (end_if -> .)
    WHILE           reduce using rule 96 (end_if -> .)
    RETURN          reduce using rule 96 (end_if -> .)
    PENON           reduce using rule 96 (end_if -> .)
    PENOFF          reduce using rule 96 (end_if -> .)
    RBRACE          reduce using rule 96 (end_if -> .)
    VAR             reduce using rule 96 (end_if -> .)

    end_if                         shift and go to state 285

state 282

    (92) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 286


state 283

    (93) condition1 -> empty .

    ID              reduce using rule 93 (condition1 -> empty .)
    IF              reduce using rule 93 (condition1 -> empty .)
    TRIANGLE        reduce using rule 93 (condition1 -> empty .)
    RECTANGLE       reduce using rule 93 (condition1 -> empty .)
    SQUARE          reduce using rule 93 (condition1 -> empty .)
    CIRCLE          reduce using rule 93 (condition1 -> empty .)
    POLIGON         reduce using rule 93 (condition1 -> empty .)
    COLOR           reduce using rule 93 (condition1 -> empty .)
    PENSIZE         reduce using rule 93 (condition1 -> empty .)
    PENFORWARD      reduce using rule 93 (condition1 -> empty .)
    PENBACK         reduce using rule 93 (condition1 -> empty .)
    ROTATE          reduce using rule 93 (condition1 -> empty .)
    WHILE           reduce using rule 93 (condition1 -> empty .)
    RETURN          reduce using rule 93 (condition1 -> empty .)
    PENON           reduce using rule 93 (condition1 -> empty .)
    PENOFF          reduce using rule 93 (condition1 -> empty .)
    RBRACE          reduce using rule 93 (condition1 -> empty .)
    VAR             reduce using rule 93 (condition1 -> empty .)


state 284

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE . end_while
    (45) end_while -> .

    ID              reduce using rule 45 (end_while -> .)
    IF              reduce using rule 45 (end_while -> .)
    TRIANGLE        reduce using rule 45 (end_while -> .)
    RECTANGLE       reduce using rule 45 (end_while -> .)
    SQUARE          reduce using rule 45 (end_while -> .)
    CIRCLE          reduce using rule 45 (end_while -> .)
    POLIGON         reduce using rule 45 (end_while -> .)
    COLOR           reduce using rule 45 (end_while -> .)
    PENSIZE         reduce using rule 45 (end_while -> .)
    PENFORWARD      reduce using rule 45 (end_while -> .)
    PENBACK         reduce using rule 45 (end_while -> .)
    ROTATE          reduce using rule 45 (end_while -> .)
    WHILE           reduce using rule 45 (end_while -> .)
    RETURN          reduce using rule 45 (end_while -> .)
    PENON           reduce using rule 45 (end_while -> .)
    PENOFF          reduce using rule 45 (end_while -> .)
    RBRACE          reduce using rule 45 (end_while -> .)
    VAR             reduce using rule 45 (end_while -> .)

    end_while                      shift and go to state 287

state 285

    (91) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    VAR             reduce using rule 91 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 286

    (92) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 288


state 287

    (43) while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .

    ID              reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)
    VAR             reduce using rule 43 (while -> WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while .)


state 288

    (92) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (13) b2 -> . b2 statute
    (14) b2 -> . empty
    (133) empty -> .

    RBRACE          reduce using rule 133 (empty -> .)
    ID              reduce using rule 133 (empty -> .)
    IF              reduce using rule 133 (empty -> .)
    TRIANGLE        reduce using rule 133 (empty -> .)
    RECTANGLE       reduce using rule 133 (empty -> .)
    SQUARE          reduce using rule 133 (empty -> .)
    CIRCLE          reduce using rule 133 (empty -> .)
    POLIGON         reduce using rule 133 (empty -> .)
    COLOR           reduce using rule 133 (empty -> .)
    PENSIZE         reduce using rule 133 (empty -> .)
    PENFORWARD      reduce using rule 133 (empty -> .)
    PENBACK         reduce using rule 133 (empty -> .)
    ROTATE          reduce using rule 133 (empty -> .)
    WHILE           reduce using rule 133 (empty -> .)
    RETURN          reduce using rule 133 (empty -> .)
    PENON           reduce using rule 133 (empty -> .)
    PENOFF          reduce using rule 133 (empty -> .)

    b2                             shift and go to state 289
    empty                          shift and go to state 37

state 289

    (92) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (13) b2 -> b2 . statute
    (26) statute -> . assignment
    (27) statute -> . call
    (28) statute -> . condition
    (29) statute -> . triangle
    (30) statute -> . rectangle
    (31) statute -> . square
    (32) statute -> . circle
    (33) statute -> . poligon
    (34) statute -> . color
    (35) statute -> . pensize
    (36) statute -> . penforward
    (37) statute -> . penback
    (38) statute -> . rotate
    (39) statute -> . while
    (40) statute -> . return
    (41) statute -> . penon
    (42) statute -> . penoff
    (46) assignment -> . ID ASSIGN expression SEMICOLON
    (47) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (124) call -> . ID check_name LPAREN create_era call1 RPAREN SEMICOLON gosub
    (91) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (69) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (70) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (68) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (67) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (71) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (66) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (74) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (75) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (76) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (72) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (73) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (43) while -> . WHILE while_return LPAREN type_check expression RPAREN LBRACE b2 RBRACE end_while
    (131) return -> . RETURN var_cte SEMICOLON
    (132) return -> . RETURN st_cte SEMICOLON
    (77) penon -> . PENON LPAREN RPAREN SEMICOLON
    (78) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 290
    ID              shift and go to state 67
    IF              shift and go to state 68
    TRIANGLE        shift and go to state 69
    RECTANGLE       shift and go to state 70
    SQUARE          shift and go to state 71
    CIRCLE          shift and go to state 72
    POLIGON         shift and go to state 73
    COLOR           shift and go to state 74
    PENSIZE         shift and go to state 75
    PENFORWARD      shift and go to state 76
    PENBACK         shift and go to state 77
    ROTATE          shift and go to state 78
    WHILE           shift and go to state 79
    RETURN          shift and go to state 80
    PENON           shift and go to state 81
    PENOFF          shift and go to state 82

    statute                        shift and go to state 49
    assignment                     shift and go to state 50
    call                           shift and go to state 51
    condition                      shift and go to state 52
    triangle                       shift and go to state 53
    rectangle                      shift and go to state 54
    square                         shift and go to state 55
    circle                         shift and go to state 56
    poligon                        shift and go to state 57
    color                          shift and go to state 58
    pensize                        shift and go to state 59
    penforward                     shift and go to state 60
    penback                        shift and go to state 61
    rotate                         shift and go to state 62
    while                          shift and go to state 63
    return                         shift and go to state 64
    penon                          shift and go to state 65
    penoff                         shift and go to state 66

state 290

    (92) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 92 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 269 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 272 resolved as shift
WARNING: reduce/reduce conflict in state 86 resolved using rule (var_cte -> ID)
WARNING: rejected rule (push_id -> <empty>) in state 86
WARNING: reduce/reduce conflict in state 120 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 120
WARNING: reduce/reduce conflict in state 217 resolved using rule (var_cte -> ID)
WARNING: rejected rule (push_id -> <empty>) in state 217
WARNING: reduce/reduce conflict in state 221 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 221
WARNING: Rule (push_id -> <empty>) is never reduced
