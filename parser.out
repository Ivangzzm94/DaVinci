Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block
Rule 2     fillmain -> <empty>
Rule 3     gotomain -> <empty>
Rule 4     program1 -> program1 funcs save_funcs
Rule 5     program1 -> program1 vars global_vars
Rule 6     program1 -> empty
Rule 7     getglobalmemory -> <empty>
Rule 8     updateMemory -> <empty>
Rule 9     save_funcs -> <empty>
Rule 10    global_vars -> <empty>
Rule 11    block -> LBRACE b1 RBRACE
Rule 12    b1 -> vars local_vars b2
Rule 13    b1 -> b2
Rule 14    local_vars -> <empty>
Rule 15    b2 -> b2 statute
Rule 16    b2 -> empty
Rule 17    vars -> VAR vars2
Rule 18    vars2 -> type save_type vars3 SEMICOLON vars2
Rule 19    vars2 -> empty
Rule 20    vars3 -> ID list savelist vars4
Rule 21    vars3 -> ID saveid vars4
Rule 22    vars4 -> COMMA vars3
Rule 23    vars4 -> empty
Rule 24    savelist -> <empty>
Rule 25    saveid -> <empty>
Rule 26    save_type -> <empty>
Rule 27    list -> LBRACKET CTE_INT RBRACKET
Rule 28    statute -> assignment
Rule 29    statute -> call
Rule 30    statute -> condition
Rule 31    statute -> triangle
Rule 32    statute -> rectangle
Rule 33    statute -> square
Rule 34    statute -> circle
Rule 35    statute -> poligon
Rule 36    statute -> color
Rule 37    statute -> pensize
Rule 38    statute -> penforward
Rule 39    statute -> penback
Rule 40    statute -> rotate
Rule 41    statute -> while
Rule 42    statute -> penon
Rule 43    statute -> penoff
Rule 44    statute -> print
Rule 45    while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
Rule 46    while_return -> <empty>
Rule 47    end_while -> <empty>
Rule 48    assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON
Rule 49    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 50    verify_id -> <empty>
Rule 51    set_value -> <empty>
Rule 52    cte_id -> <empty>
Rule 53    color_cte -> RED
Rule 54    color_cte -> BLUE
Rule 55    color_cte -> YELLOW
Rule 56    color_cte -> GREEN
Rule 57    color_cte -> PINK
Rule 58    color_cte -> PURPLE
Rule 59    st_cte -> STRING
Rule 60    st_cte -> cte_bool
Rule 61    funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
Rule 62    funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
Rule 63    functype -> <empty>
Rule 64    params -> type ID save_par params1
Rule 65    params -> empty
Rule 66    params1 -> COMMA type ID save_par params1
Rule 67    params1 -> empty
Rule 68    funcs1 -> funcs1 COMMA type save_type ID save_par
Rule 69    funcs1 -> empty
Rule 70    statements -> statements statute
Rule 71    statements -> empty
Rule 72    test -> <empty>
Rule 73    funcs3 -> funcs
Rule 74    funcs3 -> empty
Rule 75    funcvars -> vars local_vars
Rule 76    funcvars -> empty
Rule 77    saveidfunc -> <empty>
Rule 78    end_func -> <empty>
Rule 79    save_par -> <empty>
Rule 80    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 81    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 82    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 83    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 84    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 85    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 86    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 87    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 88    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 89    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 90    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 91    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 92    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 93    type -> INT
Rule 94    type -> FLOAT
Rule 95    type -> STRING
Rule 96    type -> BOOL
Rule 97    getarrayvalue -> <empty>
Rule 98    getcallvalue -> <empty>
Rule 99    cte_bool -> TRUE
Rule 100   cte_bool -> FALSE
Rule 101   condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
Rule 102   condition1 -> gotoElse ELSE LBRACE b2 RBRACE
Rule 103   condition1 -> empty
Rule 104   type_check -> <empty>
Rule 105   gotoElse -> <empty>
Rule 106   end_if -> <empty>
Rule 107   expression -> exp expression1
Rule 108   expression1 -> LESSER relop exp top_relop
Rule 109   expression1 -> GREATER relop exp top_relop
Rule 110   expression1 -> EQUAL relop exp top_relop
Rule 111   expression1 -> NOTEQUAL relop exp top_relop
Rule 112   expression1 -> GREATEROREQUAL relop exp top_relop
Rule 113   expression1 -> LESSEROREQUAL relop exp top_relop
Rule 114   expression1 -> empty
Rule 115   exp -> term top_exp exp1
Rule 116   exp1 -> MINUS push_sign exp
Rule 117   exp1 -> PLUS push_sign exp
Rule 118   exp1 -> empty
Rule 119   top_exp -> <empty>
Rule 120   term -> factor top_factor term1
Rule 121   term1 -> DIVIDE push_sign term
Rule 122   term1 -> TIMES push_sign term
Rule 123   term1 -> empty
Rule 124   factor -> LPAREN false_bottom expression RPAREN end_par
Rule 125   factor -> var_cte
Rule 126   factor -> ID push_id
Rule 127   top_factor -> <empty>
Rule 128   var_cte -> ID getidvalue
Rule 129   var_cte -> CTE_INT getvalue_i
Rule 130   var_cte -> CTE_FLOAT getvalue_f
Rule 131   var_cte -> cte_bool getvalue_b
Rule 132   var_cte -> ID list getarrayvalue
Rule 133   var_cte -> call getcallvalue
Rule 134   getidvalue -> <empty>
Rule 135   getvalue_i -> <empty>
Rule 136   getvalue_f -> <empty>
Rule 137   getvalue_b -> <empty>
Rule 138   relop -> <empty>
Rule 139   top_relop -> <empty>
Rule 140   push_sign -> <empty>
Rule 141   false_bottom -> <empty>
Rule 142   end_par -> <empty>
Rule 143   push_id -> <empty>
Rule 144   call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
Rule 145   check_name -> <empty>
Rule 146   create_era -> <empty>
Rule 147   gosub -> <empty>
Rule 148   call1 -> ID argument call2
Rule 149   call1 -> exp argument call2
Rule 150   call1 -> st_cte argument call2
Rule 151   call1 -> call2
Rule 152   call2 -> COMMA increment exp argument call2
Rule 153   call2 -> empty
Rule 154   increment -> <empty>
Rule 155   argument -> <empty>
Rule 156   check_params -> <empty>
Rule 157   print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON
Rule 158   print_multi -> COMMA expression to_screen print_multi
Rule 159   print_multi -> empty
Rule 160   to_screen -> <empty>
Rule 161   return -> RETURN var_cte SEMICOLON
Rule 162   return -> RETURN st_cte SEMICOLON
Rule 163   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 48 49
BLUE                 : 54
BOOL                 : 96
CIRCLE               : 81
COLOR                : 80
COMMA                : 22 66 68 83 84 85 152 158
CTE_BOOL             : 
CTE_FLOAT            : 130
CTE_INT              : 27 129
CTE_STRING           : 87
DAVINCI              : 1
DIVIDE               : 121
ELSE                 : 102
EQUAL                : 110
EXPRESSION           : 
FALSE                : 100
FLOAT                : 94
FUNC                 : 61 62
GREATER              : 109
GREATEROREQUAL       : 112
GREEN                : 56
ID                   : 1 20 21 48 49 61 62 64 66 68 126 128 132 144 148
IF                   : 101
INT                  : 93
LBRACE               : 11 45 61 62 101 102
LBRACKET             : 27 49
LESSER               : 108
LESSEROREQUAL        : 113
LPAREN               : 45 61 62 80 81 82 83 84 85 86 87 88 89 90 91 92 101 124 144 157
MINUS                : 116
NOT                  : 
NOTEQUAL             : 111
OR                   : 
PENBACK              : 90
PENFORWARD           : 89
PENOFF               : 92
PENON                : 91
PENSIZE              : 88
PINK                 : 57
PLUS                 : 117
POLIGON              : 85
PRINT                : 157
PROGRAM              : 1
PURPLE               : 58
RBRACE               : 11 45 61 62 101 102
RBRACKET             : 27 49
RECTANGLE            : 84
RED                  : 53
RETURN               : 161 162
ROTATE               : 86 87
RPAREN               : 45 61 62 80 81 82 83 84 85 86 87 88 89 90 91 92 101 124 144 157
SEMICOLON            : 1 18 48 49 80 81 82 83 84 85 86 87 88 89 90 91 92 144 157 161 162
SIZE                 : 
SQUARE               : 82
STRING               : 59 95
ST_CTE               : 
TERM                 : 
TIMES                : 122
TRIANGLE             : 83
TRUE                 : 99
VAR                  : 17
VOID                 : 62
WHILE                : 45
YELLOW               : 55
error                : 

Nonterminals, with rules where they appear

argument             : 148 149 150 152
assignment           : 28
b1                   : 11
b2                   : 12 13 15 45 101 102
block                : 1
call                 : 29 133
call1                : 144
call2                : 148 149 150 151 152
check_name           : 144
check_params         : 144
circle               : 34
color                : 36
color_cte            : 80
condition            : 30
condition1           : 101
create_era           : 144
cte_bool             : 60 131
cte_id               : 49
empty                : 6 16 19 23 65 67 69 71 74 76 103 114 118 123 153 159
end_func             : 61 62
end_if               : 101
end_par              : 124
end_while            : 45
exp                  : 49 81 82 83 83 84 84 85 85 86 88 89 90 107 108 109 110 111 112 113 116 117 149 152
exp1                 : 115
expression           : 45 48 49 101 124 157 158
expression1          : 107
factor               : 120
false_bottom         : 124
fillmain             : 1
funcs                : 4 73
funcs1               : 68
funcs3               : 61 62
functype             : 61 62
funcvars             : 61 62
getarrayvalue        : 132
getcallvalue         : 133
getglobalmemory      : 1
getidvalue           : 128
getvalue_b           : 131
getvalue_f           : 130
getvalue_i           : 129
global_vars          : 5
gosub                : 144
gotoElse             : 102
gotomain             : 1
increment            : 152
list                 : 20 132
local_vars           : 12 75
params               : 61 62
params1              : 64 66
penback              : 39
penforward           : 38
penoff               : 43
penon                : 42
pensize              : 37
poligon              : 35
print                : 44
print_multi          : 157 158
program              : 0
program1             : 1 4 5
push_id              : 126
push_sign            : 48 116 117 121 122
rectangle            : 32
relop                : 108 109 110 111 112 113
return               : 61
rotate               : 40
save_funcs           : 4
save_par             : 64 66 68
save_type            : 18 68
saveid               : 21
saveidfunc           : 61 62
savelist             : 20
set_value            : 48
square               : 33
st_cte               : 150 162
statements           : 61 62 70
statute              : 15 70
term                 : 115 121 122
term1                : 120
test                 : 
to_screen            : 157 158
top_exp              : 115
top_factor           : 120
top_relop            : 108 109 110 111 112 113
triangle             : 31
type                 : 18 61 64 66 68
type_check           : 45 101
updateMemory         : 
var_cte              : 125 161
vars                 : 5 12 75
vars2                : 17 18
vars3                : 18 22
vars4                : 20 21
verify_id            : 48
while                : 41
while_return         : 45

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . gotomain program1 getglobalmemory DAVINCI fillmain block
    (3) gotomain -> .

    FUNC            reduce using rule 3 (gotomain -> .)
    VAR             reduce using rule 3 (gotomain -> .)
    DAVINCI         reduce using rule 3 (gotomain -> .)

    gotomain                       shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON gotomain . program1 getglobalmemory DAVINCI fillmain block
    (4) program1 -> . program1 funcs save_funcs
    (5) program1 -> . program1 vars global_vars
    (6) program1 -> . empty
    (163) empty -> .

    FUNC            reduce using rule 163 (empty -> .)
    VAR             reduce using rule 163 (empty -> .)
    DAVINCI         reduce using rule 163 (empty -> .)

    program1                       shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 . getglobalmemory DAVINCI fillmain block
    (4) program1 -> program1 . funcs save_funcs
    (5) program1 -> program1 . vars global_vars
    (7) getglobalmemory -> .
    (61) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (62) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (17) vars -> . VAR vars2

    DAVINCI         reduce using rule 7 (getglobalmemory -> .)
    FUNC            shift and go to state 11
    VAR             shift and go to state 12

    getglobalmemory                shift and go to state 8
    funcs                          shift and go to state 9
    vars                           shift and go to state 10

state 7

    (6) program1 -> empty .

    FUNC            reduce using rule 6 (program1 -> empty .)
    VAR             reduce using rule 6 (program1 -> empty .)
    DAVINCI         reduce using rule 6 (program1 -> empty .)


state 8

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory . DAVINCI fillmain block

    DAVINCI         shift and go to state 13


state 9

    (4) program1 -> program1 funcs . save_funcs
    (9) save_funcs -> .

    FUNC            reduce using rule 9 (save_funcs -> .)
    VAR             reduce using rule 9 (save_funcs -> .)
    DAVINCI         reduce using rule 9 (save_funcs -> .)

    save_funcs                     shift and go to state 14

state 10

    (5) program1 -> program1 vars . global_vars
    (10) global_vars -> .

    FUNC            reduce using rule 10 (global_vars -> .)
    VAR             reduce using rule 10 (global_vars -> .)
    DAVINCI         reduce using rule 10 (global_vars -> .)

    global_vars                    shift and go to state 15

state 11

    (61) funcs -> FUNC . type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (62) funcs -> FUNC . VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL

    VOID            shift and go to state 17
    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 16

state 12

    (17) vars -> VAR . vars2
    (18) vars2 -> . type save_type vars3 SEMICOLON vars2
    (19) vars2 -> . empty
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL
    (163) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    FUNC            reduce using rule 163 (empty -> .)
    VAR             reduce using rule 163 (empty -> .)
    DAVINCI         reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)
    RBRACE          reduce using rule 163 (empty -> .)
    LBRACE          reduce using rule 163 (empty -> .)

    vars2                          shift and go to state 22
    type                           shift and go to state 23
    empty                          shift and go to state 24

state 13

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI . fillmain block
    (2) fillmain -> .

    LBRACE          reduce using rule 2 (fillmain -> .)

    fillmain                       shift and go to state 25

state 14

    (4) program1 -> program1 funcs save_funcs .

    FUNC            reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    VAR             reduce using rule 4 (program1 -> program1 funcs save_funcs .)
    DAVINCI         reduce using rule 4 (program1 -> program1 funcs save_funcs .)


state 15

    (5) program1 -> program1 vars global_vars .

    FUNC            reduce using rule 5 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 5 (program1 -> program1 vars global_vars .)
    DAVINCI         reduce using rule 5 (program1 -> program1 vars global_vars .)


state 16

    (61) funcs -> FUNC type . functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (63) functype -> .

    ID              reduce using rule 63 (functype -> .)

    functype                       shift and go to state 26

state 17

    (62) funcs -> FUNC VOID . functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (63) functype -> .

    ID              reduce using rule 63 (functype -> .)

    functype                       shift and go to state 27

state 18

    (93) type -> INT .

    ID              reduce using rule 93 (type -> INT .)


state 19

    (94) type -> FLOAT .

    ID              reduce using rule 94 (type -> FLOAT .)


state 20

    (95) type -> STRING .

    ID              reduce using rule 95 (type -> STRING .)


state 21

    (96) type -> BOOL .

    ID              reduce using rule 96 (type -> BOOL .)


state 22

    (17) vars -> VAR vars2 .

    FUNC            reduce using rule 17 (vars -> VAR vars2 .)
    VAR             reduce using rule 17 (vars -> VAR vars2 .)
    DAVINCI         reduce using rule 17 (vars -> VAR vars2 .)
    ID              reduce using rule 17 (vars -> VAR vars2 .)
    IF              reduce using rule 17 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 17 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 17 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 17 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 17 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 17 (vars -> VAR vars2 .)
    COLOR           reduce using rule 17 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 17 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 17 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 17 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 17 (vars -> VAR vars2 .)
    WHILE           reduce using rule 17 (vars -> VAR vars2 .)
    PENON           reduce using rule 17 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 17 (vars -> VAR vars2 .)
    PRINT           reduce using rule 17 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 17 (vars -> VAR vars2 .)
    LBRACE          reduce using rule 17 (vars -> VAR vars2 .)


state 23

    (18) vars2 -> type . save_type vars3 SEMICOLON vars2
    (26) save_type -> .

    ID              reduce using rule 26 (save_type -> .)

    save_type                      shift and go to state 28

state 24

    (19) vars2 -> empty .

    FUNC            reduce using rule 19 (vars2 -> empty .)
    VAR             reduce using rule 19 (vars2 -> empty .)
    DAVINCI         reduce using rule 19 (vars2 -> empty .)
    ID              reduce using rule 19 (vars2 -> empty .)
    IF              reduce using rule 19 (vars2 -> empty .)
    TRIANGLE        reduce using rule 19 (vars2 -> empty .)
    RECTANGLE       reduce using rule 19 (vars2 -> empty .)
    SQUARE          reduce using rule 19 (vars2 -> empty .)
    CIRCLE          reduce using rule 19 (vars2 -> empty .)
    POLIGON         reduce using rule 19 (vars2 -> empty .)
    COLOR           reduce using rule 19 (vars2 -> empty .)
    PENSIZE         reduce using rule 19 (vars2 -> empty .)
    PENFORWARD      reduce using rule 19 (vars2 -> empty .)
    PENBACK         reduce using rule 19 (vars2 -> empty .)
    ROTATE          reduce using rule 19 (vars2 -> empty .)
    WHILE           reduce using rule 19 (vars2 -> empty .)
    PENON           reduce using rule 19 (vars2 -> empty .)
    PENOFF          reduce using rule 19 (vars2 -> empty .)
    PRINT           reduce using rule 19 (vars2 -> empty .)
    RBRACE          reduce using rule 19 (vars2 -> empty .)
    LBRACE          reduce using rule 19 (vars2 -> empty .)


state 25

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain . block
    (11) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 30

    block                          shift and go to state 29

state 26

    (61) funcs -> FUNC type functype . ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    ID              shift and go to state 31


state 27

    (62) funcs -> FUNC VOID functype . ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    ID              shift and go to state 32


state 28

    (18) vars2 -> type save_type . vars3 SEMICOLON vars2
    (20) vars3 -> . ID list savelist vars4
    (21) vars3 -> . ID saveid vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 33

state 29

    (1) program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block .)


state 30

    (11) block -> LBRACE . b1 RBRACE
    (12) b1 -> . vars local_vars b2
    (13) b1 -> . b2
    (17) vars -> . VAR vars2
    (15) b2 -> . b2 statute
    (16) b2 -> . empty
    (163) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)
    RBRACE          reduce using rule 163 (empty -> .)

    b1                             shift and go to state 35
    vars                           shift and go to state 36
    b2                             shift and go to state 37
    empty                          shift and go to state 38

state 31

    (61) funcs -> FUNC type functype ID . saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (77) saveidfunc -> .

    LPAREN          reduce using rule 77 (saveidfunc -> .)

    saveidfunc                     shift and go to state 39

state 32

    (62) funcs -> FUNC VOID functype ID . saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (77) saveidfunc -> .

    LPAREN          reduce using rule 77 (saveidfunc -> .)

    saveidfunc                     shift and go to state 40

state 33

    (18) vars2 -> type save_type vars3 . SEMICOLON vars2

    SEMICOLON       shift and go to state 41


state 34

    (20) vars3 -> ID . list savelist vars4
    (21) vars3 -> ID . saveid vars4
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (25) saveid -> .

    LBRACKET        shift and go to state 44
    COMMA           reduce using rule 25 (saveid -> .)
    SEMICOLON       reduce using rule 25 (saveid -> .)

    list                           shift and go to state 42
    saveid                         shift and go to state 43

state 35

    (11) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 45


state 36

    (12) b1 -> vars . local_vars b2
    (14) local_vars -> .

    ID              reduce using rule 14 (local_vars -> .)
    IF              reduce using rule 14 (local_vars -> .)
    TRIANGLE        reduce using rule 14 (local_vars -> .)
    RECTANGLE       reduce using rule 14 (local_vars -> .)
    SQUARE          reduce using rule 14 (local_vars -> .)
    CIRCLE          reduce using rule 14 (local_vars -> .)
    POLIGON         reduce using rule 14 (local_vars -> .)
    COLOR           reduce using rule 14 (local_vars -> .)
    PENSIZE         reduce using rule 14 (local_vars -> .)
    PENFORWARD      reduce using rule 14 (local_vars -> .)
    PENBACK         reduce using rule 14 (local_vars -> .)
    ROTATE          reduce using rule 14 (local_vars -> .)
    WHILE           reduce using rule 14 (local_vars -> .)
    PENON           reduce using rule 14 (local_vars -> .)
    PENOFF          reduce using rule 14 (local_vars -> .)
    PRINT           reduce using rule 14 (local_vars -> .)
    RBRACE          reduce using rule 14 (local_vars -> .)

    local_vars                     shift and go to state 46

state 37

    (13) b1 -> b2 .
    (15) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          reduce using rule 13 (b1 -> b2 .)
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 38

    (16) b2 -> empty .

    ID              reduce using rule 16 (b2 -> empty .)
    IF              reduce using rule 16 (b2 -> empty .)
    TRIANGLE        reduce using rule 16 (b2 -> empty .)
    RECTANGLE       reduce using rule 16 (b2 -> empty .)
    SQUARE          reduce using rule 16 (b2 -> empty .)
    CIRCLE          reduce using rule 16 (b2 -> empty .)
    POLIGON         reduce using rule 16 (b2 -> empty .)
    COLOR           reduce using rule 16 (b2 -> empty .)
    PENSIZE         reduce using rule 16 (b2 -> empty .)
    PENFORWARD      reduce using rule 16 (b2 -> empty .)
    PENBACK         reduce using rule 16 (b2 -> empty .)
    ROTATE          reduce using rule 16 (b2 -> empty .)
    WHILE           reduce using rule 16 (b2 -> empty .)
    PENON           reduce using rule 16 (b2 -> empty .)
    PENOFF          reduce using rule 16 (b2 -> empty .)
    PRINT           reduce using rule 16 (b2 -> empty .)
    RBRACE          reduce using rule 16 (b2 -> empty .)


state 39

    (61) funcs -> FUNC type functype ID saveidfunc . LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    LPAREN          shift and go to state 81


state 40

    (62) funcs -> FUNC VOID functype ID saveidfunc . LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    LPAREN          shift and go to state 82


state 41

    (18) vars2 -> type save_type vars3 SEMICOLON . vars2
    (18) vars2 -> . type save_type vars3 SEMICOLON vars2
    (19) vars2 -> . empty
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL
    (163) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    FUNC            reduce using rule 163 (empty -> .)
    VAR             reduce using rule 163 (empty -> .)
    DAVINCI         reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)
    RBRACE          reduce using rule 163 (empty -> .)
    LBRACE          reduce using rule 163 (empty -> .)

    type                           shift and go to state 23
    vars2                          shift and go to state 83
    empty                          shift and go to state 24

state 42

    (20) vars3 -> ID list . savelist vars4
    (24) savelist -> .

    COMMA           reduce using rule 24 (savelist -> .)
    SEMICOLON       reduce using rule 24 (savelist -> .)

    savelist                       shift and go to state 84

state 43

    (21) vars3 -> ID saveid . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 163 (empty -> .)

    vars4                          shift and go to state 85
    empty                          shift and go to state 87

state 44

    (27) list -> LBRACKET . CTE_INT RBRACKET

    CTE_INT         shift and go to state 88


state 45

    (11) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 11 (block -> LBRACE b1 RBRACE .)


state 46

    (12) b1 -> vars local_vars . b2
    (15) b2 -> . b2 statute
    (16) b2 -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)
    RBRACE          reduce using rule 163 (empty -> .)

    b2                             shift and go to state 89
    empty                          shift and go to state 38

state 47

    (15) b2 -> b2 statute .

    ID              reduce using rule 15 (b2 -> b2 statute .)
    IF              reduce using rule 15 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 15 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 15 (b2 -> b2 statute .)
    SQUARE          reduce using rule 15 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 15 (b2 -> b2 statute .)
    POLIGON         reduce using rule 15 (b2 -> b2 statute .)
    COLOR           reduce using rule 15 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 15 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 15 (b2 -> b2 statute .)
    PENBACK         reduce using rule 15 (b2 -> b2 statute .)
    ROTATE          reduce using rule 15 (b2 -> b2 statute .)
    WHILE           reduce using rule 15 (b2 -> b2 statute .)
    PENON           reduce using rule 15 (b2 -> b2 statute .)
    PENOFF          reduce using rule 15 (b2 -> b2 statute .)
    PRINT           reduce using rule 15 (b2 -> b2 statute .)
    RBRACE          reduce using rule 15 (b2 -> b2 statute .)


state 48

    (28) statute -> assignment .

    ID              reduce using rule 28 (statute -> assignment .)
    IF              reduce using rule 28 (statute -> assignment .)
    TRIANGLE        reduce using rule 28 (statute -> assignment .)
    RECTANGLE       reduce using rule 28 (statute -> assignment .)
    SQUARE          reduce using rule 28 (statute -> assignment .)
    CIRCLE          reduce using rule 28 (statute -> assignment .)
    POLIGON         reduce using rule 28 (statute -> assignment .)
    COLOR           reduce using rule 28 (statute -> assignment .)
    PENSIZE         reduce using rule 28 (statute -> assignment .)
    PENFORWARD      reduce using rule 28 (statute -> assignment .)
    PENBACK         reduce using rule 28 (statute -> assignment .)
    ROTATE          reduce using rule 28 (statute -> assignment .)
    WHILE           reduce using rule 28 (statute -> assignment .)
    PENON           reduce using rule 28 (statute -> assignment .)
    PENOFF          reduce using rule 28 (statute -> assignment .)
    PRINT           reduce using rule 28 (statute -> assignment .)
    RBRACE          reduce using rule 28 (statute -> assignment .)
    RETURN          reduce using rule 28 (statute -> assignment .)


state 49

    (29) statute -> call .

    ID              reduce using rule 29 (statute -> call .)
    IF              reduce using rule 29 (statute -> call .)
    TRIANGLE        reduce using rule 29 (statute -> call .)
    RECTANGLE       reduce using rule 29 (statute -> call .)
    SQUARE          reduce using rule 29 (statute -> call .)
    CIRCLE          reduce using rule 29 (statute -> call .)
    POLIGON         reduce using rule 29 (statute -> call .)
    COLOR           reduce using rule 29 (statute -> call .)
    PENSIZE         reduce using rule 29 (statute -> call .)
    PENFORWARD      reduce using rule 29 (statute -> call .)
    PENBACK         reduce using rule 29 (statute -> call .)
    ROTATE          reduce using rule 29 (statute -> call .)
    WHILE           reduce using rule 29 (statute -> call .)
    PENON           reduce using rule 29 (statute -> call .)
    PENOFF          reduce using rule 29 (statute -> call .)
    PRINT           reduce using rule 29 (statute -> call .)
    RBRACE          reduce using rule 29 (statute -> call .)
    RETURN          reduce using rule 29 (statute -> call .)


state 50

    (30) statute -> condition .

    ID              reduce using rule 30 (statute -> condition .)
    IF              reduce using rule 30 (statute -> condition .)
    TRIANGLE        reduce using rule 30 (statute -> condition .)
    RECTANGLE       reduce using rule 30 (statute -> condition .)
    SQUARE          reduce using rule 30 (statute -> condition .)
    CIRCLE          reduce using rule 30 (statute -> condition .)
    POLIGON         reduce using rule 30 (statute -> condition .)
    COLOR           reduce using rule 30 (statute -> condition .)
    PENSIZE         reduce using rule 30 (statute -> condition .)
    PENFORWARD      reduce using rule 30 (statute -> condition .)
    PENBACK         reduce using rule 30 (statute -> condition .)
    ROTATE          reduce using rule 30 (statute -> condition .)
    WHILE           reduce using rule 30 (statute -> condition .)
    PENON           reduce using rule 30 (statute -> condition .)
    PENOFF          reduce using rule 30 (statute -> condition .)
    PRINT           reduce using rule 30 (statute -> condition .)
    RBRACE          reduce using rule 30 (statute -> condition .)
    RETURN          reduce using rule 30 (statute -> condition .)


state 51

    (31) statute -> triangle .

    ID              reduce using rule 31 (statute -> triangle .)
    IF              reduce using rule 31 (statute -> triangle .)
    TRIANGLE        reduce using rule 31 (statute -> triangle .)
    RECTANGLE       reduce using rule 31 (statute -> triangle .)
    SQUARE          reduce using rule 31 (statute -> triangle .)
    CIRCLE          reduce using rule 31 (statute -> triangle .)
    POLIGON         reduce using rule 31 (statute -> triangle .)
    COLOR           reduce using rule 31 (statute -> triangle .)
    PENSIZE         reduce using rule 31 (statute -> triangle .)
    PENFORWARD      reduce using rule 31 (statute -> triangle .)
    PENBACK         reduce using rule 31 (statute -> triangle .)
    ROTATE          reduce using rule 31 (statute -> triangle .)
    WHILE           reduce using rule 31 (statute -> triangle .)
    PENON           reduce using rule 31 (statute -> triangle .)
    PENOFF          reduce using rule 31 (statute -> triangle .)
    PRINT           reduce using rule 31 (statute -> triangle .)
    RBRACE          reduce using rule 31 (statute -> triangle .)
    RETURN          reduce using rule 31 (statute -> triangle .)


state 52

    (32) statute -> rectangle .

    ID              reduce using rule 32 (statute -> rectangle .)
    IF              reduce using rule 32 (statute -> rectangle .)
    TRIANGLE        reduce using rule 32 (statute -> rectangle .)
    RECTANGLE       reduce using rule 32 (statute -> rectangle .)
    SQUARE          reduce using rule 32 (statute -> rectangle .)
    CIRCLE          reduce using rule 32 (statute -> rectangle .)
    POLIGON         reduce using rule 32 (statute -> rectangle .)
    COLOR           reduce using rule 32 (statute -> rectangle .)
    PENSIZE         reduce using rule 32 (statute -> rectangle .)
    PENFORWARD      reduce using rule 32 (statute -> rectangle .)
    PENBACK         reduce using rule 32 (statute -> rectangle .)
    ROTATE          reduce using rule 32 (statute -> rectangle .)
    WHILE           reduce using rule 32 (statute -> rectangle .)
    PENON           reduce using rule 32 (statute -> rectangle .)
    PENOFF          reduce using rule 32 (statute -> rectangle .)
    PRINT           reduce using rule 32 (statute -> rectangle .)
    RBRACE          reduce using rule 32 (statute -> rectangle .)
    RETURN          reduce using rule 32 (statute -> rectangle .)


state 53

    (33) statute -> square .

    ID              reduce using rule 33 (statute -> square .)
    IF              reduce using rule 33 (statute -> square .)
    TRIANGLE        reduce using rule 33 (statute -> square .)
    RECTANGLE       reduce using rule 33 (statute -> square .)
    SQUARE          reduce using rule 33 (statute -> square .)
    CIRCLE          reduce using rule 33 (statute -> square .)
    POLIGON         reduce using rule 33 (statute -> square .)
    COLOR           reduce using rule 33 (statute -> square .)
    PENSIZE         reduce using rule 33 (statute -> square .)
    PENFORWARD      reduce using rule 33 (statute -> square .)
    PENBACK         reduce using rule 33 (statute -> square .)
    ROTATE          reduce using rule 33 (statute -> square .)
    WHILE           reduce using rule 33 (statute -> square .)
    PENON           reduce using rule 33 (statute -> square .)
    PENOFF          reduce using rule 33 (statute -> square .)
    PRINT           reduce using rule 33 (statute -> square .)
    RBRACE          reduce using rule 33 (statute -> square .)
    RETURN          reduce using rule 33 (statute -> square .)


state 54

    (34) statute -> circle .

    ID              reduce using rule 34 (statute -> circle .)
    IF              reduce using rule 34 (statute -> circle .)
    TRIANGLE        reduce using rule 34 (statute -> circle .)
    RECTANGLE       reduce using rule 34 (statute -> circle .)
    SQUARE          reduce using rule 34 (statute -> circle .)
    CIRCLE          reduce using rule 34 (statute -> circle .)
    POLIGON         reduce using rule 34 (statute -> circle .)
    COLOR           reduce using rule 34 (statute -> circle .)
    PENSIZE         reduce using rule 34 (statute -> circle .)
    PENFORWARD      reduce using rule 34 (statute -> circle .)
    PENBACK         reduce using rule 34 (statute -> circle .)
    ROTATE          reduce using rule 34 (statute -> circle .)
    WHILE           reduce using rule 34 (statute -> circle .)
    PENON           reduce using rule 34 (statute -> circle .)
    PENOFF          reduce using rule 34 (statute -> circle .)
    PRINT           reduce using rule 34 (statute -> circle .)
    RBRACE          reduce using rule 34 (statute -> circle .)
    RETURN          reduce using rule 34 (statute -> circle .)


state 55

    (35) statute -> poligon .

    ID              reduce using rule 35 (statute -> poligon .)
    IF              reduce using rule 35 (statute -> poligon .)
    TRIANGLE        reduce using rule 35 (statute -> poligon .)
    RECTANGLE       reduce using rule 35 (statute -> poligon .)
    SQUARE          reduce using rule 35 (statute -> poligon .)
    CIRCLE          reduce using rule 35 (statute -> poligon .)
    POLIGON         reduce using rule 35 (statute -> poligon .)
    COLOR           reduce using rule 35 (statute -> poligon .)
    PENSIZE         reduce using rule 35 (statute -> poligon .)
    PENFORWARD      reduce using rule 35 (statute -> poligon .)
    PENBACK         reduce using rule 35 (statute -> poligon .)
    ROTATE          reduce using rule 35 (statute -> poligon .)
    WHILE           reduce using rule 35 (statute -> poligon .)
    PENON           reduce using rule 35 (statute -> poligon .)
    PENOFF          reduce using rule 35 (statute -> poligon .)
    PRINT           reduce using rule 35 (statute -> poligon .)
    RBRACE          reduce using rule 35 (statute -> poligon .)
    RETURN          reduce using rule 35 (statute -> poligon .)


state 56

    (36) statute -> color .

    ID              reduce using rule 36 (statute -> color .)
    IF              reduce using rule 36 (statute -> color .)
    TRIANGLE        reduce using rule 36 (statute -> color .)
    RECTANGLE       reduce using rule 36 (statute -> color .)
    SQUARE          reduce using rule 36 (statute -> color .)
    CIRCLE          reduce using rule 36 (statute -> color .)
    POLIGON         reduce using rule 36 (statute -> color .)
    COLOR           reduce using rule 36 (statute -> color .)
    PENSIZE         reduce using rule 36 (statute -> color .)
    PENFORWARD      reduce using rule 36 (statute -> color .)
    PENBACK         reduce using rule 36 (statute -> color .)
    ROTATE          reduce using rule 36 (statute -> color .)
    WHILE           reduce using rule 36 (statute -> color .)
    PENON           reduce using rule 36 (statute -> color .)
    PENOFF          reduce using rule 36 (statute -> color .)
    PRINT           reduce using rule 36 (statute -> color .)
    RBRACE          reduce using rule 36 (statute -> color .)
    RETURN          reduce using rule 36 (statute -> color .)


state 57

    (37) statute -> pensize .

    ID              reduce using rule 37 (statute -> pensize .)
    IF              reduce using rule 37 (statute -> pensize .)
    TRIANGLE        reduce using rule 37 (statute -> pensize .)
    RECTANGLE       reduce using rule 37 (statute -> pensize .)
    SQUARE          reduce using rule 37 (statute -> pensize .)
    CIRCLE          reduce using rule 37 (statute -> pensize .)
    POLIGON         reduce using rule 37 (statute -> pensize .)
    COLOR           reduce using rule 37 (statute -> pensize .)
    PENSIZE         reduce using rule 37 (statute -> pensize .)
    PENFORWARD      reduce using rule 37 (statute -> pensize .)
    PENBACK         reduce using rule 37 (statute -> pensize .)
    ROTATE          reduce using rule 37 (statute -> pensize .)
    WHILE           reduce using rule 37 (statute -> pensize .)
    PENON           reduce using rule 37 (statute -> pensize .)
    PENOFF          reduce using rule 37 (statute -> pensize .)
    PRINT           reduce using rule 37 (statute -> pensize .)
    RBRACE          reduce using rule 37 (statute -> pensize .)
    RETURN          reduce using rule 37 (statute -> pensize .)


state 58

    (38) statute -> penforward .

    ID              reduce using rule 38 (statute -> penforward .)
    IF              reduce using rule 38 (statute -> penforward .)
    TRIANGLE        reduce using rule 38 (statute -> penforward .)
    RECTANGLE       reduce using rule 38 (statute -> penforward .)
    SQUARE          reduce using rule 38 (statute -> penforward .)
    CIRCLE          reduce using rule 38 (statute -> penforward .)
    POLIGON         reduce using rule 38 (statute -> penforward .)
    COLOR           reduce using rule 38 (statute -> penforward .)
    PENSIZE         reduce using rule 38 (statute -> penforward .)
    PENFORWARD      reduce using rule 38 (statute -> penforward .)
    PENBACK         reduce using rule 38 (statute -> penforward .)
    ROTATE          reduce using rule 38 (statute -> penforward .)
    WHILE           reduce using rule 38 (statute -> penforward .)
    PENON           reduce using rule 38 (statute -> penforward .)
    PENOFF          reduce using rule 38 (statute -> penforward .)
    PRINT           reduce using rule 38 (statute -> penforward .)
    RBRACE          reduce using rule 38 (statute -> penforward .)
    RETURN          reduce using rule 38 (statute -> penforward .)


state 59

    (39) statute -> penback .

    ID              reduce using rule 39 (statute -> penback .)
    IF              reduce using rule 39 (statute -> penback .)
    TRIANGLE        reduce using rule 39 (statute -> penback .)
    RECTANGLE       reduce using rule 39 (statute -> penback .)
    SQUARE          reduce using rule 39 (statute -> penback .)
    CIRCLE          reduce using rule 39 (statute -> penback .)
    POLIGON         reduce using rule 39 (statute -> penback .)
    COLOR           reduce using rule 39 (statute -> penback .)
    PENSIZE         reduce using rule 39 (statute -> penback .)
    PENFORWARD      reduce using rule 39 (statute -> penback .)
    PENBACK         reduce using rule 39 (statute -> penback .)
    ROTATE          reduce using rule 39 (statute -> penback .)
    WHILE           reduce using rule 39 (statute -> penback .)
    PENON           reduce using rule 39 (statute -> penback .)
    PENOFF          reduce using rule 39 (statute -> penback .)
    PRINT           reduce using rule 39 (statute -> penback .)
    RBRACE          reduce using rule 39 (statute -> penback .)
    RETURN          reduce using rule 39 (statute -> penback .)


state 60

    (40) statute -> rotate .

    ID              reduce using rule 40 (statute -> rotate .)
    IF              reduce using rule 40 (statute -> rotate .)
    TRIANGLE        reduce using rule 40 (statute -> rotate .)
    RECTANGLE       reduce using rule 40 (statute -> rotate .)
    SQUARE          reduce using rule 40 (statute -> rotate .)
    CIRCLE          reduce using rule 40 (statute -> rotate .)
    POLIGON         reduce using rule 40 (statute -> rotate .)
    COLOR           reduce using rule 40 (statute -> rotate .)
    PENSIZE         reduce using rule 40 (statute -> rotate .)
    PENFORWARD      reduce using rule 40 (statute -> rotate .)
    PENBACK         reduce using rule 40 (statute -> rotate .)
    ROTATE          reduce using rule 40 (statute -> rotate .)
    WHILE           reduce using rule 40 (statute -> rotate .)
    PENON           reduce using rule 40 (statute -> rotate .)
    PENOFF          reduce using rule 40 (statute -> rotate .)
    PRINT           reduce using rule 40 (statute -> rotate .)
    RBRACE          reduce using rule 40 (statute -> rotate .)
    RETURN          reduce using rule 40 (statute -> rotate .)


state 61

    (41) statute -> while .

    ID              reduce using rule 41 (statute -> while .)
    IF              reduce using rule 41 (statute -> while .)
    TRIANGLE        reduce using rule 41 (statute -> while .)
    RECTANGLE       reduce using rule 41 (statute -> while .)
    SQUARE          reduce using rule 41 (statute -> while .)
    CIRCLE          reduce using rule 41 (statute -> while .)
    POLIGON         reduce using rule 41 (statute -> while .)
    COLOR           reduce using rule 41 (statute -> while .)
    PENSIZE         reduce using rule 41 (statute -> while .)
    PENFORWARD      reduce using rule 41 (statute -> while .)
    PENBACK         reduce using rule 41 (statute -> while .)
    ROTATE          reduce using rule 41 (statute -> while .)
    WHILE           reduce using rule 41 (statute -> while .)
    PENON           reduce using rule 41 (statute -> while .)
    PENOFF          reduce using rule 41 (statute -> while .)
    PRINT           reduce using rule 41 (statute -> while .)
    RBRACE          reduce using rule 41 (statute -> while .)
    RETURN          reduce using rule 41 (statute -> while .)


state 62

    (42) statute -> penon .

    ID              reduce using rule 42 (statute -> penon .)
    IF              reduce using rule 42 (statute -> penon .)
    TRIANGLE        reduce using rule 42 (statute -> penon .)
    RECTANGLE       reduce using rule 42 (statute -> penon .)
    SQUARE          reduce using rule 42 (statute -> penon .)
    CIRCLE          reduce using rule 42 (statute -> penon .)
    POLIGON         reduce using rule 42 (statute -> penon .)
    COLOR           reduce using rule 42 (statute -> penon .)
    PENSIZE         reduce using rule 42 (statute -> penon .)
    PENFORWARD      reduce using rule 42 (statute -> penon .)
    PENBACK         reduce using rule 42 (statute -> penon .)
    ROTATE          reduce using rule 42 (statute -> penon .)
    WHILE           reduce using rule 42 (statute -> penon .)
    PENON           reduce using rule 42 (statute -> penon .)
    PENOFF          reduce using rule 42 (statute -> penon .)
    PRINT           reduce using rule 42 (statute -> penon .)
    RBRACE          reduce using rule 42 (statute -> penon .)
    RETURN          reduce using rule 42 (statute -> penon .)


state 63

    (43) statute -> penoff .

    ID              reduce using rule 43 (statute -> penoff .)
    IF              reduce using rule 43 (statute -> penoff .)
    TRIANGLE        reduce using rule 43 (statute -> penoff .)
    RECTANGLE       reduce using rule 43 (statute -> penoff .)
    SQUARE          reduce using rule 43 (statute -> penoff .)
    CIRCLE          reduce using rule 43 (statute -> penoff .)
    POLIGON         reduce using rule 43 (statute -> penoff .)
    COLOR           reduce using rule 43 (statute -> penoff .)
    PENSIZE         reduce using rule 43 (statute -> penoff .)
    PENFORWARD      reduce using rule 43 (statute -> penoff .)
    PENBACK         reduce using rule 43 (statute -> penoff .)
    ROTATE          reduce using rule 43 (statute -> penoff .)
    WHILE           reduce using rule 43 (statute -> penoff .)
    PENON           reduce using rule 43 (statute -> penoff .)
    PENOFF          reduce using rule 43 (statute -> penoff .)
    PRINT           reduce using rule 43 (statute -> penoff .)
    RBRACE          reduce using rule 43 (statute -> penoff .)
    RETURN          reduce using rule 43 (statute -> penoff .)


state 64

    (44) statute -> print .

    ID              reduce using rule 44 (statute -> print .)
    IF              reduce using rule 44 (statute -> print .)
    TRIANGLE        reduce using rule 44 (statute -> print .)
    RECTANGLE       reduce using rule 44 (statute -> print .)
    SQUARE          reduce using rule 44 (statute -> print .)
    CIRCLE          reduce using rule 44 (statute -> print .)
    POLIGON         reduce using rule 44 (statute -> print .)
    COLOR           reduce using rule 44 (statute -> print .)
    PENSIZE         reduce using rule 44 (statute -> print .)
    PENFORWARD      reduce using rule 44 (statute -> print .)
    PENBACK         reduce using rule 44 (statute -> print .)
    ROTATE          reduce using rule 44 (statute -> print .)
    WHILE           reduce using rule 44 (statute -> print .)
    PENON           reduce using rule 44 (statute -> print .)
    PENOFF          reduce using rule 44 (statute -> print .)
    PRINT           reduce using rule 44 (statute -> print .)
    RBRACE          reduce using rule 44 (statute -> print .)
    RETURN          reduce using rule 44 (statute -> print .)


state 65

    (48) assignment -> ID . verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (50) verify_id -> .
    (52) cte_id -> .
    (145) check_name -> .

    ASSIGN          reduce using rule 50 (verify_id -> .)
    LBRACKET        reduce using rule 52 (cte_id -> .)
    LPAREN          reduce using rule 145 (check_name -> .)

    verify_id                      shift and go to state 90
    cte_id                         shift and go to state 91
    check_name                     shift and go to state 92

state 66

    (101) condition -> IF . LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    LPAREN          shift and go to state 93


state 67

    (83) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 68

    (84) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 69

    (82) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 96


state 70

    (81) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 97


state 71

    (85) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 98


state 72

    (80) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 99


state 73

    (88) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 100


state 74

    (89) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 101


state 75

    (90) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 102


state 76

    (86) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (87) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 103


state 77

    (45) while -> WHILE . while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (46) while_return -> .

    LPAREN          reduce using rule 46 (while_return -> .)

    while_return                   shift and go to state 104

state 78

    (91) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 105


state 79

    (92) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 106


state 80

    (157) print -> PRINT . LPAREN expression to_screen print_multi RPAREN SEMICOLON

    LPAREN          shift and go to state 107


state 81

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN . params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (64) params -> . type ID save_par params1
    (65) params -> . empty
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL
    (163) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    RPAREN          reduce using rule 163 (empty -> .)

    type                           shift and go to state 108
    params                         shift and go to state 109
    empty                          shift and go to state 110

state 82

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN . params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (64) params -> . type ID save_par params1
    (65) params -> . empty
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL
    (163) empty -> .

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    RPAREN          reduce using rule 163 (empty -> .)

    params                         shift and go to state 111
    type                           shift and go to state 108
    empty                          shift and go to state 110

state 83

    (18) vars2 -> type save_type vars3 SEMICOLON vars2 .

    FUNC            reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    VAR             reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    DAVINCI         reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ID              reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    IF              reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    TRIANGLE        reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RECTANGLE       reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    SQUARE          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    CIRCLE          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    POLIGON         reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    COLOR           reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENSIZE         reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENFORWARD      reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENBACK         reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    ROTATE          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    WHILE           reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENON           reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PENOFF          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    PRINT           reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    RBRACE          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)
    LBRACE          reduce using rule 18 (vars2 -> type save_type vars3 SEMICOLON vars2 .)


state 84

    (20) vars3 -> ID list savelist . vars4
    (22) vars4 -> . COMMA vars3
    (23) vars4 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 86
    SEMICOLON       reduce using rule 163 (empty -> .)

    vars4                          shift and go to state 112
    empty                          shift and go to state 87

state 85

    (21) vars3 -> ID saveid vars4 .

    SEMICOLON       reduce using rule 21 (vars3 -> ID saveid vars4 .)


state 86

    (22) vars4 -> COMMA . vars3
    (20) vars3 -> . ID list savelist vars4
    (21) vars3 -> . ID saveid vars4

    ID              shift and go to state 34

    vars3                          shift and go to state 113

state 87

    (23) vars4 -> empty .

    SEMICOLON       reduce using rule 23 (vars4 -> empty .)


state 88

    (27) list -> LBRACKET CTE_INT . RBRACKET

    RBRACKET        shift and go to state 114


state 89

    (12) b1 -> vars local_vars b2 .
    (15) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          reduce using rule 12 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 90

    (48) assignment -> ID verify_id . ASSIGN push_sign expression set_value SEMICOLON

    ASSIGN          shift and go to state 115


state 91

    (49) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    LBRACKET        shift and go to state 116


state 92

    (144) call -> ID check_name . LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 117


state 93

    (101) condition -> IF LPAREN . expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 119
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 94

    (83) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 131
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 95

    (84) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 132
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 96

    (82) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 133
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 97

    (81) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 134
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 98

    (85) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 135
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 99

    (80) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (53) color_cte -> . RED
    (54) color_cte -> . BLUE
    (55) color_cte -> . YELLOW
    (56) color_cte -> . GREEN
    (57) color_cte -> . PINK
    (58) color_cte -> . PURPLE

    RED             shift and go to state 137
    BLUE            shift and go to state 138
    YELLOW          shift and go to state 139
    GREEN           shift and go to state 140
    PINK            shift and go to state 141
    PURPLE          shift and go to state 142

    color_cte                      shift and go to state 136

state 100

    (88) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 143
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 101

    (89) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 144
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 102

    (90) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 145
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 103

    (86) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (87) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    CTE_STRING      shift and go to state 147
    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 146
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 104

    (45) while -> WHILE while_return . LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while

    LPAREN          shift and go to state 148


state 105

    (91) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 149


state 106

    (92) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 150


state 107

    (157) print -> PRINT LPAREN . expression to_screen print_multi RPAREN SEMICOLON
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 151
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 108

    (64) params -> type . ID save_par params1

    ID              shift and go to state 152


state 109

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params . RPAREN funcvars LBRACE statements return RBRACE end_func funcs3

    RPAREN          shift and go to state 153


state 110

    (65) params -> empty .

    RPAREN          reduce using rule 65 (params -> empty .)


state 111

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params . RPAREN funcvars LBRACE statements RBRACE end_func funcs3

    RPAREN          shift and go to state 154


state 112

    (20) vars3 -> ID list savelist vars4 .

    SEMICOLON       reduce using rule 20 (vars3 -> ID list savelist vars4 .)


state 113

    (22) vars4 -> COMMA vars3 .

    SEMICOLON       reduce using rule 22 (vars4 -> COMMA vars3 .)


state 114

    (27) list -> LBRACKET CTE_INT RBRACKET .

    COMMA           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    SEMICOLON       reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    DIVIDE          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    TIMES           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    MINUS           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    PLUS            reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSER          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATER         reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    EQUAL           reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    NOTEQUAL        reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    GREATEROREQUAL  reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    LESSEROREQUAL   reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    RPAREN          reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)
    RBRACKET        reduce using rule 27 (list -> LBRACKET CTE_INT RBRACKET .)


state 115

    (48) assignment -> ID verify_id ASSIGN . push_sign expression set_value SEMICOLON
    (140) push_sign -> .

    LPAREN          reduce using rule 140 (push_sign -> .)
    ID              reduce using rule 140 (push_sign -> .)
    CTE_INT         reduce using rule 140 (push_sign -> .)
    CTE_FLOAT       reduce using rule 140 (push_sign -> .)
    TRUE            reduce using rule 140 (push_sign -> .)
    FALSE           reduce using rule 140 (push_sign -> .)

    push_sign                      shift and go to state 155

state 116

    (49) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 156
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 117

    (144) call -> ID check_name LPAREN . create_era call1 RPAREN check_params SEMICOLON gosub
    (146) create_era -> .

    ID              reduce using rule 146 (create_era -> .)
    STRING          reduce using rule 146 (create_era -> .)
    COMMA           reduce using rule 146 (create_era -> .)
    TRUE            reduce using rule 146 (create_era -> .)
    FALSE           reduce using rule 146 (create_era -> .)
    LPAREN          reduce using rule 146 (create_era -> .)
    CTE_INT         reduce using rule 146 (create_era -> .)
    CTE_FLOAT       reduce using rule 146 (create_era -> .)
    RPAREN          reduce using rule 146 (create_era -> .)

    create_era                     shift and go to state 157

state 118

    (124) factor -> LPAREN . false_bottom expression RPAREN end_par
    (141) false_bottom -> .

    LPAREN          reduce using rule 141 (false_bottom -> .)
    ID              reduce using rule 141 (false_bottom -> .)
    CTE_INT         reduce using rule 141 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 141 (false_bottom -> .)
    TRUE            reduce using rule 141 (false_bottom -> .)
    FALSE           reduce using rule 141 (false_bottom -> .)

    false_bottom                   shift and go to state 158

state 119

    (101) condition -> IF LPAREN expression . RPAREN type_check LBRACE b2 RBRACE condition1 end_if

    RPAREN          shift and go to state 159


state 120

    (107) expression -> exp . expression1
    (108) expression1 -> . LESSER relop exp top_relop
    (109) expression1 -> . GREATER relop exp top_relop
    (110) expression1 -> . EQUAL relop exp top_relop
    (111) expression1 -> . NOTEQUAL relop exp top_relop
    (112) expression1 -> . GREATEROREQUAL relop exp top_relop
    (113) expression1 -> . LESSEROREQUAL relop exp top_relop
    (114) expression1 -> . empty
    (163) empty -> .

    LESSER          shift and go to state 161
    GREATER         shift and go to state 162
    EQUAL           shift and go to state 163
    NOTEQUAL        shift and go to state 164
    GREATEROREQUAL  shift and go to state 165
    LESSEROREQUAL   shift and go to state 166
    RPAREN          reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)

    expression1                    shift and go to state 160
    empty                          shift and go to state 167

state 121

    (115) exp -> term . top_exp exp1
    (119) top_exp -> .

    MINUS           reduce using rule 119 (top_exp -> .)
    PLUS            reduce using rule 119 (top_exp -> .)
    LESSER          reduce using rule 119 (top_exp -> .)
    GREATER         reduce using rule 119 (top_exp -> .)
    EQUAL           reduce using rule 119 (top_exp -> .)
    NOTEQUAL        reduce using rule 119 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 119 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 119 (top_exp -> .)
    RPAREN          reduce using rule 119 (top_exp -> .)
    COMMA           reduce using rule 119 (top_exp -> .)
    RBRACKET        reduce using rule 119 (top_exp -> .)
    SEMICOLON       reduce using rule 119 (top_exp -> .)

    top_exp                        shift and go to state 168

state 122

    (120) term -> factor . top_factor term1
    (127) top_factor -> .

    DIVIDE          reduce using rule 127 (top_factor -> .)
    TIMES           reduce using rule 127 (top_factor -> .)
    MINUS           reduce using rule 127 (top_factor -> .)
    PLUS            reduce using rule 127 (top_factor -> .)
    LESSER          reduce using rule 127 (top_factor -> .)
    GREATER         reduce using rule 127 (top_factor -> .)
    EQUAL           reduce using rule 127 (top_factor -> .)
    NOTEQUAL        reduce using rule 127 (top_factor -> .)
    GREATEROREQUAL  reduce using rule 127 (top_factor -> .)
    LESSEROREQUAL   reduce using rule 127 (top_factor -> .)
    RPAREN          reduce using rule 127 (top_factor -> .)
    COMMA           reduce using rule 127 (top_factor -> .)
    RBRACKET        reduce using rule 127 (top_factor -> .)
    SEMICOLON       reduce using rule 127 (top_factor -> .)

    top_factor                     shift and go to state 169

state 123

    (125) factor -> var_cte .

    DIVIDE          reduce using rule 125 (factor -> var_cte .)
    TIMES           reduce using rule 125 (factor -> var_cte .)
    MINUS           reduce using rule 125 (factor -> var_cte .)
    PLUS            reduce using rule 125 (factor -> var_cte .)
    LESSER          reduce using rule 125 (factor -> var_cte .)
    GREATER         reduce using rule 125 (factor -> var_cte .)
    EQUAL           reduce using rule 125 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 125 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 125 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 125 (factor -> var_cte .)
    RPAREN          reduce using rule 125 (factor -> var_cte .)
    COMMA           reduce using rule 125 (factor -> var_cte .)
    RBRACKET        reduce using rule 125 (factor -> var_cte .)
    SEMICOLON       reduce using rule 125 (factor -> var_cte .)


state 124

    (126) factor -> ID . push_id
    (128) var_cte -> ID . getidvalue
    (132) var_cte -> ID . list getarrayvalue
    (144) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (143) push_id -> .
    (134) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (145) check_name -> .

  ! reduce/reduce conflict for DIVIDE resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for LESSER resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for GREATER resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for EQUAL resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 134 (getidvalue -> .)
    DIVIDE          reduce using rule 134 (getidvalue -> .)
    TIMES           reduce using rule 134 (getidvalue -> .)
    MINUS           reduce using rule 134 (getidvalue -> .)
    PLUS            reduce using rule 134 (getidvalue -> .)
    LESSER          reduce using rule 134 (getidvalue -> .)
    GREATER         reduce using rule 134 (getidvalue -> .)
    EQUAL           reduce using rule 134 (getidvalue -> .)
    NOTEQUAL        reduce using rule 134 (getidvalue -> .)
    GREATEROREQUAL  reduce using rule 134 (getidvalue -> .)
    LESSEROREQUAL   reduce using rule 134 (getidvalue -> .)
    RPAREN          reduce using rule 134 (getidvalue -> .)
    COMMA           reduce using rule 134 (getidvalue -> .)
    RBRACKET        reduce using rule 134 (getidvalue -> .)
    SEMICOLON       reduce using rule 134 (getidvalue -> .)
    LBRACKET        shift and go to state 44
    LPAREN          reduce using rule 145 (check_name -> .)

  ! DIVIDE          [ reduce using rule 143 (push_id -> .) ]
  ! TIMES           [ reduce using rule 143 (push_id -> .) ]
  ! MINUS           [ reduce using rule 143 (push_id -> .) ]
  ! PLUS            [ reduce using rule 143 (push_id -> .) ]
  ! LESSER          [ reduce using rule 143 (push_id -> .) ]
  ! GREATER         [ reduce using rule 143 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 143 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 143 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 143 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 143 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 143 (push_id -> .) ]
  ! COMMA           [ reduce using rule 143 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 143 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 143 (push_id -> .) ]

    push_id                        shift and go to state 170
    getidvalue                     shift and go to state 171
    list                           shift and go to state 172
    check_name                     shift and go to state 92

state 125

    (129) var_cte -> CTE_INT . getvalue_i
    (135) getvalue_i -> .

    DIVIDE          reduce using rule 135 (getvalue_i -> .)
    TIMES           reduce using rule 135 (getvalue_i -> .)
    MINUS           reduce using rule 135 (getvalue_i -> .)
    PLUS            reduce using rule 135 (getvalue_i -> .)
    LESSER          reduce using rule 135 (getvalue_i -> .)
    GREATER         reduce using rule 135 (getvalue_i -> .)
    EQUAL           reduce using rule 135 (getvalue_i -> .)
    NOTEQUAL        reduce using rule 135 (getvalue_i -> .)
    GREATEROREQUAL  reduce using rule 135 (getvalue_i -> .)
    LESSEROREQUAL   reduce using rule 135 (getvalue_i -> .)
    RPAREN          reduce using rule 135 (getvalue_i -> .)
    COMMA           reduce using rule 135 (getvalue_i -> .)
    RBRACKET        reduce using rule 135 (getvalue_i -> .)
    SEMICOLON       reduce using rule 135 (getvalue_i -> .)

    getvalue_i                     shift and go to state 173

state 126

    (130) var_cte -> CTE_FLOAT . getvalue_f
    (136) getvalue_f -> .

    DIVIDE          reduce using rule 136 (getvalue_f -> .)
    TIMES           reduce using rule 136 (getvalue_f -> .)
    MINUS           reduce using rule 136 (getvalue_f -> .)
    PLUS            reduce using rule 136 (getvalue_f -> .)
    LESSER          reduce using rule 136 (getvalue_f -> .)
    GREATER         reduce using rule 136 (getvalue_f -> .)
    EQUAL           reduce using rule 136 (getvalue_f -> .)
    NOTEQUAL        reduce using rule 136 (getvalue_f -> .)
    GREATEROREQUAL  reduce using rule 136 (getvalue_f -> .)
    LESSEROREQUAL   reduce using rule 136 (getvalue_f -> .)
    RPAREN          reduce using rule 136 (getvalue_f -> .)
    COMMA           reduce using rule 136 (getvalue_f -> .)
    RBRACKET        reduce using rule 136 (getvalue_f -> .)
    SEMICOLON       reduce using rule 136 (getvalue_f -> .)

    getvalue_f                     shift and go to state 174

state 127

    (131) var_cte -> cte_bool . getvalue_b
    (137) getvalue_b -> .

    DIVIDE          reduce using rule 137 (getvalue_b -> .)
    TIMES           reduce using rule 137 (getvalue_b -> .)
    MINUS           reduce using rule 137 (getvalue_b -> .)
    PLUS            reduce using rule 137 (getvalue_b -> .)
    LESSER          reduce using rule 137 (getvalue_b -> .)
    GREATER         reduce using rule 137 (getvalue_b -> .)
    EQUAL           reduce using rule 137 (getvalue_b -> .)
    NOTEQUAL        reduce using rule 137 (getvalue_b -> .)
    GREATEROREQUAL  reduce using rule 137 (getvalue_b -> .)
    LESSEROREQUAL   reduce using rule 137 (getvalue_b -> .)
    RPAREN          reduce using rule 137 (getvalue_b -> .)
    COMMA           reduce using rule 137 (getvalue_b -> .)
    RBRACKET        reduce using rule 137 (getvalue_b -> .)
    SEMICOLON       reduce using rule 137 (getvalue_b -> .)

    getvalue_b                     shift and go to state 175

state 128

    (133) var_cte -> call . getcallvalue
    (98) getcallvalue -> .

    DIVIDE          reduce using rule 98 (getcallvalue -> .)
    TIMES           reduce using rule 98 (getcallvalue -> .)
    MINUS           reduce using rule 98 (getcallvalue -> .)
    PLUS            reduce using rule 98 (getcallvalue -> .)
    LESSER          reduce using rule 98 (getcallvalue -> .)
    GREATER         reduce using rule 98 (getcallvalue -> .)
    EQUAL           reduce using rule 98 (getcallvalue -> .)
    NOTEQUAL        reduce using rule 98 (getcallvalue -> .)
    GREATEROREQUAL  reduce using rule 98 (getcallvalue -> .)
    LESSEROREQUAL   reduce using rule 98 (getcallvalue -> .)
    RPAREN          reduce using rule 98 (getcallvalue -> .)
    COMMA           reduce using rule 98 (getcallvalue -> .)
    RBRACKET        reduce using rule 98 (getcallvalue -> .)
    SEMICOLON       reduce using rule 98 (getcallvalue -> .)

    getcallvalue                   shift and go to state 176

state 129

    (99) cte_bool -> TRUE .

    DIVIDE          reduce using rule 99 (cte_bool -> TRUE .)
    TIMES           reduce using rule 99 (cte_bool -> TRUE .)
    MINUS           reduce using rule 99 (cte_bool -> TRUE .)
    PLUS            reduce using rule 99 (cte_bool -> TRUE .)
    LESSER          reduce using rule 99 (cte_bool -> TRUE .)
    GREATER         reduce using rule 99 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 99 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 99 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 99 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 99 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 99 (cte_bool -> TRUE .)
    COMMA           reduce using rule 99 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 99 (cte_bool -> TRUE .)
    SEMICOLON       reduce using rule 99 (cte_bool -> TRUE .)


state 130

    (100) cte_bool -> FALSE .

    DIVIDE          reduce using rule 100 (cte_bool -> FALSE .)
    TIMES           reduce using rule 100 (cte_bool -> FALSE .)
    MINUS           reduce using rule 100 (cte_bool -> FALSE .)
    PLUS            reduce using rule 100 (cte_bool -> FALSE .)
    LESSER          reduce using rule 100 (cte_bool -> FALSE .)
    GREATER         reduce using rule 100 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 100 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 100 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 100 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 100 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 100 (cte_bool -> FALSE .)
    COMMA           reduce using rule 100 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 100 (cte_bool -> FALSE .)
    SEMICOLON       reduce using rule 100 (cte_bool -> FALSE .)


state 131

    (83) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 177


state 132

    (84) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 178


state 133

    (82) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 179


state 134

    (81) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 180


state 135

    (85) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 181


state 136

    (80) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 182


state 137

    (53) color_cte -> RED .

    RPAREN          reduce using rule 53 (color_cte -> RED .)


state 138

    (54) color_cte -> BLUE .

    RPAREN          reduce using rule 54 (color_cte -> BLUE .)


state 139

    (55) color_cte -> YELLOW .

    RPAREN          reduce using rule 55 (color_cte -> YELLOW .)


state 140

    (56) color_cte -> GREEN .

    RPAREN          reduce using rule 56 (color_cte -> GREEN .)


state 141

    (57) color_cte -> PINK .

    RPAREN          reduce using rule 57 (color_cte -> PINK .)


state 142

    (58) color_cte -> PURPLE .

    RPAREN          reduce using rule 58 (color_cte -> PURPLE .)


state 143

    (88) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 183


state 144

    (89) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 184


state 145

    (90) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 185


state 146

    (86) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 186


state 147

    (87) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 187


state 148

    (45) while -> WHILE while_return LPAREN . expression RPAREN type_check LBRACE b2 RBRACE end_while
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 188
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 149

    (91) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 150

    (92) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 151

    (157) print -> PRINT LPAREN expression . to_screen print_multi RPAREN SEMICOLON
    (160) to_screen -> .

    COMMA           reduce using rule 160 (to_screen -> .)
    RPAREN          reduce using rule 160 (to_screen -> .)

    to_screen                      shift and go to state 191

state 152

    (64) params -> type ID . save_par params1
    (79) save_par -> .

    COMMA           reduce using rule 79 (save_par -> .)
    RPAREN          reduce using rule 79 (save_par -> .)

    save_par                       shift and go to state 192

state 153

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN . funcvars LBRACE statements return RBRACE end_func funcs3
    (75) funcvars -> . vars local_vars
    (76) funcvars -> . empty
    (17) vars -> . VAR vars2
    (163) empty -> .

    VAR             shift and go to state 12
    LBRACE          reduce using rule 163 (empty -> .)

    funcvars                       shift and go to state 193
    vars                           shift and go to state 194
    empty                          shift and go to state 195

state 154

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN . funcvars LBRACE statements RBRACE end_func funcs3
    (75) funcvars -> . vars local_vars
    (76) funcvars -> . empty
    (17) vars -> . VAR vars2
    (163) empty -> .

    VAR             shift and go to state 12
    LBRACE          reduce using rule 163 (empty -> .)

    funcvars                       shift and go to state 196
    vars                           shift and go to state 194
    empty                          shift and go to state 195

state 155

    (48) assignment -> ID verify_id ASSIGN push_sign . expression set_value SEMICOLON
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 197
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 156

    (49) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 198


state 157

    (144) call -> ID check_name LPAREN create_era . call1 RPAREN check_params SEMICOLON gosub
    (148) call1 -> . ID argument call2
    (149) call1 -> . exp argument call2
    (150) call1 -> . st_cte argument call2
    (151) call1 -> . call2
    (115) exp -> . term top_exp exp1
    (59) st_cte -> . STRING
    (60) st_cte -> . cte_bool
    (152) call2 -> . COMMA increment exp argument call2
    (153) call2 -> . empty
    (120) term -> . factor top_factor term1
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (163) empty -> .
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    ID              shift and go to state 199
    STRING          shift and go to state 204
    COMMA           shift and go to state 206
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130
    RPAREN          reduce using rule 163 (empty -> .)
    LPAREN          shift and go to state 118
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126

    call1                          shift and go to state 200
    call2                          shift and go to state 201
    exp                            shift and go to state 202
    st_cte                         shift and go to state 203
    term                           shift and go to state 121
    cte_bool                       shift and go to state 205
    empty                          shift and go to state 207
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    call                           shift and go to state 128

state 158

    (124) factor -> LPAREN false_bottom . expression RPAREN end_par
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 208
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 159

    (101) condition -> IF LPAREN expression RPAREN . type_check LBRACE b2 RBRACE condition1 end_if
    (104) type_check -> .

    LBRACE          reduce using rule 104 (type_check -> .)

    type_check                     shift and go to state 209

state 160

    (107) expression -> exp expression1 .

    RPAREN          reduce using rule 107 (expression -> exp expression1 .)
    COMMA           reduce using rule 107 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 107 (expression -> exp expression1 .)


state 161

    (108) expression1 -> LESSER . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 210

state 162

    (109) expression1 -> GREATER . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 211

state 163

    (110) expression1 -> EQUAL . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 212

state 164

    (111) expression1 -> NOTEQUAL . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 213

state 165

    (112) expression1 -> GREATEROREQUAL . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 214

state 166

    (113) expression1 -> LESSEROREQUAL . relop exp top_relop
    (138) relop -> .

    LPAREN          reduce using rule 138 (relop -> .)
    ID              reduce using rule 138 (relop -> .)
    CTE_INT         reduce using rule 138 (relop -> .)
    CTE_FLOAT       reduce using rule 138 (relop -> .)
    TRUE            reduce using rule 138 (relop -> .)
    FALSE           reduce using rule 138 (relop -> .)

    relop                          shift and go to state 215

state 167

    (114) expression1 -> empty .

    RPAREN          reduce using rule 114 (expression1 -> empty .)
    COMMA           reduce using rule 114 (expression1 -> empty .)
    SEMICOLON       reduce using rule 114 (expression1 -> empty .)


state 168

    (115) exp -> term top_exp . exp1
    (116) exp1 -> . MINUS push_sign exp
    (117) exp1 -> . PLUS push_sign exp
    (118) exp1 -> . empty
    (163) empty -> .

    MINUS           shift and go to state 217
    PLUS            shift and go to state 218
    LESSER          reduce using rule 163 (empty -> .)
    GREATER         reduce using rule 163 (empty -> .)
    EQUAL           reduce using rule 163 (empty -> .)
    NOTEQUAL        reduce using rule 163 (empty -> .)
    GREATEROREQUAL  reduce using rule 163 (empty -> .)
    LESSEROREQUAL   reduce using rule 163 (empty -> .)
    RPAREN          reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RBRACKET        reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)

    exp1                           shift and go to state 216
    empty                          shift and go to state 219

state 169

    (120) term -> factor top_factor . term1
    (121) term1 -> . DIVIDE push_sign term
    (122) term1 -> . TIMES push_sign term
    (123) term1 -> . empty
    (163) empty -> .

    DIVIDE          shift and go to state 221
    TIMES           shift and go to state 222
    MINUS           reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    LESSER          reduce using rule 163 (empty -> .)
    GREATER         reduce using rule 163 (empty -> .)
    EQUAL           reduce using rule 163 (empty -> .)
    NOTEQUAL        reduce using rule 163 (empty -> .)
    GREATEROREQUAL  reduce using rule 163 (empty -> .)
    LESSEROREQUAL   reduce using rule 163 (empty -> .)
    RPAREN          reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RBRACKET        reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)

    term1                          shift and go to state 220
    empty                          shift and go to state 223

state 170

    (126) factor -> ID push_id .

    DIVIDE          reduce using rule 126 (factor -> ID push_id .)
    TIMES           reduce using rule 126 (factor -> ID push_id .)
    MINUS           reduce using rule 126 (factor -> ID push_id .)
    PLUS            reduce using rule 126 (factor -> ID push_id .)
    LESSER          reduce using rule 126 (factor -> ID push_id .)
    GREATER         reduce using rule 126 (factor -> ID push_id .)
    EQUAL           reduce using rule 126 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 126 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 126 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 126 (factor -> ID push_id .)
    RPAREN          reduce using rule 126 (factor -> ID push_id .)
    COMMA           reduce using rule 126 (factor -> ID push_id .)
    RBRACKET        reduce using rule 126 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 126 (factor -> ID push_id .)


state 171

    (128) var_cte -> ID getidvalue .

    DIVIDE          reduce using rule 128 (var_cte -> ID getidvalue .)
    TIMES           reduce using rule 128 (var_cte -> ID getidvalue .)
    MINUS           reduce using rule 128 (var_cte -> ID getidvalue .)
    PLUS            reduce using rule 128 (var_cte -> ID getidvalue .)
    LESSER          reduce using rule 128 (var_cte -> ID getidvalue .)
    GREATER         reduce using rule 128 (var_cte -> ID getidvalue .)
    EQUAL           reduce using rule 128 (var_cte -> ID getidvalue .)
    NOTEQUAL        reduce using rule 128 (var_cte -> ID getidvalue .)
    GREATEROREQUAL  reduce using rule 128 (var_cte -> ID getidvalue .)
    LESSEROREQUAL   reduce using rule 128 (var_cte -> ID getidvalue .)
    RPAREN          reduce using rule 128 (var_cte -> ID getidvalue .)
    COMMA           reduce using rule 128 (var_cte -> ID getidvalue .)
    RBRACKET        reduce using rule 128 (var_cte -> ID getidvalue .)
    SEMICOLON       reduce using rule 128 (var_cte -> ID getidvalue .)


state 172

    (132) var_cte -> ID list . getarrayvalue
    (97) getarrayvalue -> .

    DIVIDE          reduce using rule 97 (getarrayvalue -> .)
    TIMES           reduce using rule 97 (getarrayvalue -> .)
    MINUS           reduce using rule 97 (getarrayvalue -> .)
    PLUS            reduce using rule 97 (getarrayvalue -> .)
    LESSER          reduce using rule 97 (getarrayvalue -> .)
    GREATER         reduce using rule 97 (getarrayvalue -> .)
    EQUAL           reduce using rule 97 (getarrayvalue -> .)
    NOTEQUAL        reduce using rule 97 (getarrayvalue -> .)
    GREATEROREQUAL  reduce using rule 97 (getarrayvalue -> .)
    LESSEROREQUAL   reduce using rule 97 (getarrayvalue -> .)
    RPAREN          reduce using rule 97 (getarrayvalue -> .)
    COMMA           reduce using rule 97 (getarrayvalue -> .)
    RBRACKET        reduce using rule 97 (getarrayvalue -> .)
    SEMICOLON       reduce using rule 97 (getarrayvalue -> .)

    getarrayvalue                  shift and go to state 224

state 173

    (129) var_cte -> CTE_INT getvalue_i .

    DIVIDE          reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    TIMES           reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    MINUS           reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    PLUS            reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    LESSER          reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    GREATER         reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    EQUAL           reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    NOTEQUAL        reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    GREATEROREQUAL  reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    LESSEROREQUAL   reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    RPAREN          reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    COMMA           reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    RBRACKET        reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)
    SEMICOLON       reduce using rule 129 (var_cte -> CTE_INT getvalue_i .)


state 174

    (130) var_cte -> CTE_FLOAT getvalue_f .

    DIVIDE          reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    TIMES           reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    MINUS           reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    PLUS            reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSER          reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATER         reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    EQUAL           reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    NOTEQUAL        reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    GREATEROREQUAL  reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    LESSEROREQUAL   reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    RPAREN          reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    COMMA           reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    RBRACKET        reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)
    SEMICOLON       reduce using rule 130 (var_cte -> CTE_FLOAT getvalue_f .)


state 175

    (131) var_cte -> cte_bool getvalue_b .

    DIVIDE          reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    TIMES           reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    MINUS           reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    PLUS            reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    LESSER          reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    GREATER         reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    EQUAL           reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    NOTEQUAL        reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    GREATEROREQUAL  reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    LESSEROREQUAL   reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    RPAREN          reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    COMMA           reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    RBRACKET        reduce using rule 131 (var_cte -> cte_bool getvalue_b .)
    SEMICOLON       reduce using rule 131 (var_cte -> cte_bool getvalue_b .)


state 176

    (133) var_cte -> call getcallvalue .

    DIVIDE          reduce using rule 133 (var_cte -> call getcallvalue .)
    TIMES           reduce using rule 133 (var_cte -> call getcallvalue .)
    MINUS           reduce using rule 133 (var_cte -> call getcallvalue .)
    PLUS            reduce using rule 133 (var_cte -> call getcallvalue .)
    LESSER          reduce using rule 133 (var_cte -> call getcallvalue .)
    GREATER         reduce using rule 133 (var_cte -> call getcallvalue .)
    EQUAL           reduce using rule 133 (var_cte -> call getcallvalue .)
    NOTEQUAL        reduce using rule 133 (var_cte -> call getcallvalue .)
    GREATEROREQUAL  reduce using rule 133 (var_cte -> call getcallvalue .)
    LESSEROREQUAL   reduce using rule 133 (var_cte -> call getcallvalue .)
    RPAREN          reduce using rule 133 (var_cte -> call getcallvalue .)
    COMMA           reduce using rule 133 (var_cte -> call getcallvalue .)
    RBRACKET        reduce using rule 133 (var_cte -> call getcallvalue .)
    SEMICOLON       reduce using rule 133 (var_cte -> call getcallvalue .)


state 177

    (83) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 225
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 178

    (84) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 226
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 179

    (82) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 227


state 180

    (81) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 228


state 181

    (85) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 229
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 182

    (80) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 230


state 183

    (88) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 231


state 184

    (89) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 185

    (90) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 233


state 186

    (86) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 234


state 187

    (87) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 235


state 188

    (45) while -> WHILE while_return LPAREN expression . RPAREN type_check LBRACE b2 RBRACE end_while

    RPAREN          shift and go to state 236


state 189

    (91) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 91 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 190

    (92) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PRINT           reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 92 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 191

    (157) print -> PRINT LPAREN expression to_screen . print_multi RPAREN SEMICOLON
    (158) print_multi -> . COMMA expression to_screen print_multi
    (159) print_multi -> . empty
    (163) empty -> .

    COMMA           shift and go to state 238
    RPAREN          reduce using rule 163 (empty -> .)

    print_multi                    shift and go to state 237
    empty                          shift and go to state 239

state 192

    (64) params -> type ID save_par . params1
    (66) params1 -> . COMMA type ID save_par params1
    (67) params1 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 241
    RPAREN          reduce using rule 163 (empty -> .)

    params1                        shift and go to state 240
    empty                          shift and go to state 242

state 193

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars . LBRACE statements return RBRACE end_func funcs3

    LBRACE          shift and go to state 243


state 194

    (75) funcvars -> vars . local_vars
    (14) local_vars -> .

    LBRACE          reduce using rule 14 (local_vars -> .)

    local_vars                     shift and go to state 244

state 195

    (76) funcvars -> empty .

    LBRACE          reduce using rule 76 (funcvars -> empty .)


state 196

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars . LBRACE statements RBRACE end_func funcs3

    LBRACE          shift and go to state 245


state 197

    (48) assignment -> ID verify_id ASSIGN push_sign expression . set_value SEMICOLON
    (51) set_value -> .

    SEMICOLON       reduce using rule 51 (set_value -> .)

    set_value                      shift and go to state 246

state 198

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 247


state 199

    (148) call1 -> ID . argument call2
    (126) factor -> ID . push_id
    (128) var_cte -> ID . getidvalue
    (132) var_cte -> ID . list getarrayvalue
    (144) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (155) argument -> .
    (143) push_id -> .
    (134) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (145) check_name -> .

  ! reduce/reduce conflict for COMMA resolved using rule 143 (push_id -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 143 (push_id -> .)
  ! reduce/reduce conflict for DIVIDE resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for TIMES resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for MINUS resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for PLUS resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for COMMA resolved using rule 134 (getidvalue -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 134 (getidvalue -> .)
    DIVIDE          reduce using rule 134 (getidvalue -> .)
    TIMES           reduce using rule 134 (getidvalue -> .)
    MINUS           reduce using rule 134 (getidvalue -> .)
    PLUS            reduce using rule 134 (getidvalue -> .)
    COMMA           reduce using rule 134 (getidvalue -> .)
    RPAREN          reduce using rule 134 (getidvalue -> .)
    LBRACKET        shift and go to state 44
    LPAREN          reduce using rule 145 (check_name -> .)

  ! COMMA           [ reduce using rule 155 (argument -> .) ]
  ! RPAREN          [ reduce using rule 155 (argument -> .) ]
  ! DIVIDE          [ reduce using rule 143 (push_id -> .) ]
  ! TIMES           [ reduce using rule 143 (push_id -> .) ]
  ! MINUS           [ reduce using rule 143 (push_id -> .) ]
  ! PLUS            [ reduce using rule 143 (push_id -> .) ]
  ! COMMA           [ reduce using rule 143 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 143 (push_id -> .) ]

    argument                       shift and go to state 248
    push_id                        shift and go to state 170
    getidvalue                     shift and go to state 171
    list                           shift and go to state 172
    check_name                     shift and go to state 92

state 200

    (144) call -> ID check_name LPAREN create_era call1 . RPAREN check_params SEMICOLON gosub

    RPAREN          shift and go to state 249


state 201

    (151) call1 -> call2 .

    RPAREN          reduce using rule 151 (call1 -> call2 .)


state 202

    (149) call1 -> exp . argument call2
    (155) argument -> .

    COMMA           reduce using rule 155 (argument -> .)
    RPAREN          reduce using rule 155 (argument -> .)

    argument                       shift and go to state 250

state 203

    (150) call1 -> st_cte . argument call2
    (155) argument -> .

    COMMA           reduce using rule 155 (argument -> .)
    RPAREN          reduce using rule 155 (argument -> .)

    argument                       shift and go to state 251

state 204

    (59) st_cte -> STRING .

    COMMA           reduce using rule 59 (st_cte -> STRING .)
    RPAREN          reduce using rule 59 (st_cte -> STRING .)
    SEMICOLON       reduce using rule 59 (st_cte -> STRING .)


state 205

    (60) st_cte -> cte_bool .
    (131) var_cte -> cte_bool . getvalue_b
    (137) getvalue_b -> .

  ! reduce/reduce conflict for COMMA resolved using rule 60 (st_cte -> cte_bool .)
  ! reduce/reduce conflict for RPAREN resolved using rule 60 (st_cte -> cte_bool .)
    COMMA           reduce using rule 60 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 60 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 137 (getvalue_b -> .)
    TIMES           reduce using rule 137 (getvalue_b -> .)
    MINUS           reduce using rule 137 (getvalue_b -> .)
    PLUS            reduce using rule 137 (getvalue_b -> .)

  ! COMMA           [ reduce using rule 137 (getvalue_b -> .) ]
  ! RPAREN          [ reduce using rule 137 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 175

state 206

    (152) call2 -> COMMA . increment exp argument call2
    (154) increment -> .

    LPAREN          reduce using rule 154 (increment -> .)
    ID              reduce using rule 154 (increment -> .)
    CTE_INT         reduce using rule 154 (increment -> .)
    CTE_FLOAT       reduce using rule 154 (increment -> .)
    TRUE            reduce using rule 154 (increment -> .)
    FALSE           reduce using rule 154 (increment -> .)

    increment                      shift and go to state 252

state 207

    (153) call2 -> empty .

    RPAREN          reduce using rule 153 (call2 -> empty .)


state 208

    (124) factor -> LPAREN false_bottom expression . RPAREN end_par

    RPAREN          shift and go to state 253


state 209

    (101) condition -> IF LPAREN expression RPAREN type_check . LBRACE b2 RBRACE condition1 end_if

    LBRACE          shift and go to state 254


state 210

    (108) expression1 -> LESSER relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 255
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 211

    (109) expression1 -> GREATER relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 256
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 212

    (110) expression1 -> EQUAL relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 257
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 213

    (111) expression1 -> NOTEQUAL relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 258
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 214

    (112) expression1 -> GREATEROREQUAL relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 259
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 215

    (113) expression1 -> LESSEROREQUAL relop . exp top_relop
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 260
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 216

    (115) exp -> term top_exp exp1 .

    LESSER          reduce using rule 115 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 115 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 115 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 115 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 115 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 115 (exp -> term top_exp exp1 .)
    RPAREN          reduce using rule 115 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 115 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 115 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 115 (exp -> term top_exp exp1 .)


state 217

    (116) exp1 -> MINUS . push_sign exp
    (140) push_sign -> .

    LPAREN          reduce using rule 140 (push_sign -> .)
    ID              reduce using rule 140 (push_sign -> .)
    CTE_INT         reduce using rule 140 (push_sign -> .)
    CTE_FLOAT       reduce using rule 140 (push_sign -> .)
    TRUE            reduce using rule 140 (push_sign -> .)
    FALSE           reduce using rule 140 (push_sign -> .)

    push_sign                      shift and go to state 261

state 218

    (117) exp1 -> PLUS . push_sign exp
    (140) push_sign -> .

    LPAREN          reduce using rule 140 (push_sign -> .)
    ID              reduce using rule 140 (push_sign -> .)
    CTE_INT         reduce using rule 140 (push_sign -> .)
    CTE_FLOAT       reduce using rule 140 (push_sign -> .)
    TRUE            reduce using rule 140 (push_sign -> .)
    FALSE           reduce using rule 140 (push_sign -> .)

    push_sign                      shift and go to state 262

state 219

    (118) exp1 -> empty .

    LESSER          reduce using rule 118 (exp1 -> empty .)
    GREATER         reduce using rule 118 (exp1 -> empty .)
    EQUAL           reduce using rule 118 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 118 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 118 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 118 (exp1 -> empty .)
    RPAREN          reduce using rule 118 (exp1 -> empty .)
    COMMA           reduce using rule 118 (exp1 -> empty .)
    RBRACKET        reduce using rule 118 (exp1 -> empty .)
    SEMICOLON       reduce using rule 118 (exp1 -> empty .)


state 220

    (120) term -> factor top_factor term1 .

    MINUS           reduce using rule 120 (term -> factor top_factor term1 .)
    PLUS            reduce using rule 120 (term -> factor top_factor term1 .)
    LESSER          reduce using rule 120 (term -> factor top_factor term1 .)
    GREATER         reduce using rule 120 (term -> factor top_factor term1 .)
    EQUAL           reduce using rule 120 (term -> factor top_factor term1 .)
    NOTEQUAL        reduce using rule 120 (term -> factor top_factor term1 .)
    GREATEROREQUAL  reduce using rule 120 (term -> factor top_factor term1 .)
    LESSEROREQUAL   reduce using rule 120 (term -> factor top_factor term1 .)
    RPAREN          reduce using rule 120 (term -> factor top_factor term1 .)
    COMMA           reduce using rule 120 (term -> factor top_factor term1 .)
    RBRACKET        reduce using rule 120 (term -> factor top_factor term1 .)
    SEMICOLON       reduce using rule 120 (term -> factor top_factor term1 .)


state 221

    (121) term1 -> DIVIDE . push_sign term
    (140) push_sign -> .

    LPAREN          reduce using rule 140 (push_sign -> .)
    ID              reduce using rule 140 (push_sign -> .)
    CTE_INT         reduce using rule 140 (push_sign -> .)
    CTE_FLOAT       reduce using rule 140 (push_sign -> .)
    TRUE            reduce using rule 140 (push_sign -> .)
    FALSE           reduce using rule 140 (push_sign -> .)

    push_sign                      shift and go to state 263

state 222

    (122) term1 -> TIMES . push_sign term
    (140) push_sign -> .

    LPAREN          reduce using rule 140 (push_sign -> .)
    ID              reduce using rule 140 (push_sign -> .)
    CTE_INT         reduce using rule 140 (push_sign -> .)
    CTE_FLOAT       reduce using rule 140 (push_sign -> .)
    TRUE            reduce using rule 140 (push_sign -> .)
    FALSE           reduce using rule 140 (push_sign -> .)

    push_sign                      shift and go to state 264

state 223

    (123) term1 -> empty .

    MINUS           reduce using rule 123 (term1 -> empty .)
    PLUS            reduce using rule 123 (term1 -> empty .)
    LESSER          reduce using rule 123 (term1 -> empty .)
    GREATER         reduce using rule 123 (term1 -> empty .)
    EQUAL           reduce using rule 123 (term1 -> empty .)
    NOTEQUAL        reduce using rule 123 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 123 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 123 (term1 -> empty .)
    RPAREN          reduce using rule 123 (term1 -> empty .)
    COMMA           reduce using rule 123 (term1 -> empty .)
    RBRACKET        reduce using rule 123 (term1 -> empty .)
    SEMICOLON       reduce using rule 123 (term1 -> empty .)


state 224

    (132) var_cte -> ID list getarrayvalue .

    DIVIDE          reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    TIMES           reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    MINUS           reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    PLUS            reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    LESSER          reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    GREATER         reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    EQUAL           reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    NOTEQUAL        reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    GREATEROREQUAL  reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    LESSEROREQUAL   reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    RPAREN          reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    COMMA           reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    RBRACKET        reduce using rule 132 (var_cte -> ID list getarrayvalue .)
    SEMICOLON       reduce using rule 132 (var_cte -> ID list getarrayvalue .)


state 225

    (83) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 265


state 226

    (84) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 266


state 227

    (82) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 82 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 228

    (81) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 81 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 229

    (85) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 267


state 230

    (80) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PRINT           reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 80 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 231

    (88) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 88 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 232

    (89) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 89 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 233

    (90) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 90 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 234

    (86) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 86 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 235

    (87) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 87 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 236

    (45) while -> WHILE while_return LPAREN expression RPAREN . type_check LBRACE b2 RBRACE end_while
    (104) type_check -> .

    LBRACE          reduce using rule 104 (type_check -> .)

    type_check                     shift and go to state 268

state 237

    (157) print -> PRINT LPAREN expression to_screen print_multi . RPAREN SEMICOLON

    RPAREN          shift and go to state 269


state 238

    (158) print_multi -> COMMA . expression to_screen print_multi
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    expression                     shift and go to state 270
    exp                            shift and go to state 120
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 239

    (159) print_multi -> empty .

    RPAREN          reduce using rule 159 (print_multi -> empty .)


state 240

    (64) params -> type ID save_par params1 .

    RPAREN          reduce using rule 64 (params -> type ID save_par params1 .)


state 241

    (66) params1 -> COMMA . type ID save_par params1
    (93) type -> . INT
    (94) type -> . FLOAT
    (95) type -> . STRING
    (96) type -> . BOOL

    INT             shift and go to state 18
    FLOAT           shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21

    type                           shift and go to state 271

state 242

    (67) params1 -> empty .

    RPAREN          reduce using rule 67 (params1 -> empty .)


state 243

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE . statements return RBRACE end_func funcs3
    (70) statements -> . statements statute
    (71) statements -> . empty
    (163) empty -> .

    RETURN          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)

    statements                     shift and go to state 272
    empty                          shift and go to state 273

state 244

    (75) funcvars -> vars local_vars .

    LBRACE          reduce using rule 75 (funcvars -> vars local_vars .)


state 245

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE . statements RBRACE end_func funcs3
    (70) statements -> . statements statute
    (71) statements -> . empty
    (163) empty -> .

    RBRACE          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)

    statements                     shift and go to state 274
    empty                          shift and go to state 273

state 246

    (48) assignment -> ID verify_id ASSIGN push_sign expression set_value . SEMICOLON

    SEMICOLON       shift and go to state 275


state 247

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (107) expression -> . exp expression1
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 120
    expression                     shift and go to state 276
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 248

    (148) call1 -> ID argument . call2
    (152) call2 -> . COMMA increment exp argument call2
    (153) call2 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 206
    RPAREN          reduce using rule 163 (empty -> .)

    call2                          shift and go to state 277
    empty                          shift and go to state 207

state 249

    (144) call -> ID check_name LPAREN create_era call1 RPAREN . check_params SEMICOLON gosub
    (156) check_params -> .

    SEMICOLON       reduce using rule 156 (check_params -> .)

    check_params                   shift and go to state 278

state 250

    (149) call1 -> exp argument . call2
    (152) call2 -> . COMMA increment exp argument call2
    (153) call2 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 206
    RPAREN          reduce using rule 163 (empty -> .)

    call2                          shift and go to state 279
    empty                          shift and go to state 207

state 251

    (150) call1 -> st_cte argument . call2
    (152) call2 -> . COMMA increment exp argument call2
    (153) call2 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 206
    RPAREN          reduce using rule 163 (empty -> .)

    call2                          shift and go to state 280
    empty                          shift and go to state 207

state 252

    (152) call2 -> COMMA increment . exp argument call2
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 281
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 253

    (124) factor -> LPAREN false_bottom expression RPAREN . end_par
    (142) end_par -> .

    DIVIDE          reduce using rule 142 (end_par -> .)
    TIMES           reduce using rule 142 (end_par -> .)
    MINUS           reduce using rule 142 (end_par -> .)
    PLUS            reduce using rule 142 (end_par -> .)
    LESSER          reduce using rule 142 (end_par -> .)
    GREATER         reduce using rule 142 (end_par -> .)
    EQUAL           reduce using rule 142 (end_par -> .)
    NOTEQUAL        reduce using rule 142 (end_par -> .)
    GREATEROREQUAL  reduce using rule 142 (end_par -> .)
    LESSEROREQUAL   reduce using rule 142 (end_par -> .)
    RPAREN          reduce using rule 142 (end_par -> .)
    COMMA           reduce using rule 142 (end_par -> .)
    RBRACKET        reduce using rule 142 (end_par -> .)
    SEMICOLON       reduce using rule 142 (end_par -> .)

    end_par                        shift and go to state 282

state 254

    (101) condition -> IF LPAREN expression RPAREN type_check LBRACE . b2 RBRACE condition1 end_if
    (15) b2 -> . b2 statute
    (16) b2 -> . empty
    (163) empty -> .

    RBRACE          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)

    b2                             shift and go to state 283
    empty                          shift and go to state 38

state 255

    (108) expression1 -> LESSER relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 284

state 256

    (109) expression1 -> GREATER relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 285

state 257

    (110) expression1 -> EQUAL relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 286

state 258

    (111) expression1 -> NOTEQUAL relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 287

state 259

    (112) expression1 -> GREATEROREQUAL relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 288

state 260

    (113) expression1 -> LESSEROREQUAL relop exp . top_relop
    (139) top_relop -> .

    RPAREN          reduce using rule 139 (top_relop -> .)
    COMMA           reduce using rule 139 (top_relop -> .)
    SEMICOLON       reduce using rule 139 (top_relop -> .)

    top_relop                      shift and go to state 289

state 261

    (116) exp1 -> MINUS push_sign . exp
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 290
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 262

    (117) exp1 -> PLUS push_sign . exp
    (115) exp -> . term top_exp exp1
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    exp                            shift and go to state 291
    term                           shift and go to state 121
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 263

    (121) term1 -> DIVIDE push_sign . term
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    term                           shift and go to state 292
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 264

    (122) term1 -> TIMES push_sign . term
    (120) term -> . factor top_factor term1
    (124) factor -> . LPAREN false_bottom expression RPAREN end_par
    (125) factor -> . var_cte
    (126) factor -> . ID push_id
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    LPAREN          shift and go to state 118
    ID              shift and go to state 124
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    term                           shift and go to state 293
    factor                         shift and go to state 122
    var_cte                        shift and go to state 123
    cte_bool                       shift and go to state 127
    call                           shift and go to state 128

state 265

    (83) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 294


state 266

    (84) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 295


state 267

    (85) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 296


state 268

    (45) while -> WHILE while_return LPAREN expression RPAREN type_check . LBRACE b2 RBRACE end_while

    LBRACE          shift and go to state 297


state 269

    (157) print -> PRINT LPAREN expression to_screen print_multi RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 298


state 270

    (158) print_multi -> COMMA expression . to_screen print_multi
    (160) to_screen -> .

    COMMA           reduce using rule 160 (to_screen -> .)
    RPAREN          reduce using rule 160 (to_screen -> .)

    to_screen                      shift and go to state 299

state 271

    (66) params1 -> COMMA type . ID save_par params1

    ID              shift and go to state 300


state 272

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements . return RBRACE end_func funcs3
    (70) statements -> statements . statute
    (161) return -> . RETURN var_cte SEMICOLON
    (162) return -> . RETURN st_cte SEMICOLON
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RETURN          shift and go to state 303
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    return                         shift and go to state 301
    statute                        shift and go to state 302
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 273

    (71) statements -> empty .

    RETURN          reduce using rule 71 (statements -> empty .)
    ID              reduce using rule 71 (statements -> empty .)
    IF              reduce using rule 71 (statements -> empty .)
    TRIANGLE        reduce using rule 71 (statements -> empty .)
    RECTANGLE       reduce using rule 71 (statements -> empty .)
    SQUARE          reduce using rule 71 (statements -> empty .)
    CIRCLE          reduce using rule 71 (statements -> empty .)
    POLIGON         reduce using rule 71 (statements -> empty .)
    COLOR           reduce using rule 71 (statements -> empty .)
    PENSIZE         reduce using rule 71 (statements -> empty .)
    PENFORWARD      reduce using rule 71 (statements -> empty .)
    PENBACK         reduce using rule 71 (statements -> empty .)
    ROTATE          reduce using rule 71 (statements -> empty .)
    WHILE           reduce using rule 71 (statements -> empty .)
    PENON           reduce using rule 71 (statements -> empty .)
    PENOFF          reduce using rule 71 (statements -> empty .)
    PRINT           reduce using rule 71 (statements -> empty .)
    RBRACE          reduce using rule 71 (statements -> empty .)


state 274

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements . RBRACE end_func funcs3
    (70) statements -> statements . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 304
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 302
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 275

    (48) assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .

    ID              reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    IF              reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    TRIANGLE        reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RECTANGLE       reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    SQUARE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    CIRCLE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    POLIGON         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    COLOR           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENSIZE         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENFORWARD      reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENBACK         reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    ROTATE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    WHILE           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENON           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PENOFF          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    PRINT           reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RBRACE          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)
    RETURN          reduce using rule 48 (assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON .)


state 276

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 305


state 277

    (148) call1 -> ID argument call2 .

    RPAREN          reduce using rule 148 (call1 -> ID argument call2 .)


state 278

    (144) call -> ID check_name LPAREN create_era call1 RPAREN check_params . SEMICOLON gosub

    SEMICOLON       shift and go to state 306


state 279

    (149) call1 -> exp argument call2 .

    RPAREN          reduce using rule 149 (call1 -> exp argument call2 .)


state 280

    (150) call1 -> st_cte argument call2 .

    RPAREN          reduce using rule 150 (call1 -> st_cte argument call2 .)


state 281

    (152) call2 -> COMMA increment exp . argument call2
    (155) argument -> .

    COMMA           reduce using rule 155 (argument -> .)
    RPAREN          reduce using rule 155 (argument -> .)

    argument                       shift and go to state 307

state 282

    (124) factor -> LPAREN false_bottom expression RPAREN end_par .

    DIVIDE          reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    TIMES           reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    MINUS           reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    PLUS            reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSER          reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATER         reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    EQUAL           reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    NOTEQUAL        reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    GREATEROREQUAL  reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    LESSEROREQUAL   reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RPAREN          reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    COMMA           reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    RBRACKET        reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)
    SEMICOLON       reduce using rule 124 (factor -> LPAREN false_bottom expression RPAREN end_par .)


state 283

    (101) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 . RBRACE condition1 end_if
    (15) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 308
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 284

    (108) expression1 -> LESSER relop exp top_relop .

    RPAREN          reduce using rule 108 (expression1 -> LESSER relop exp top_relop .)
    COMMA           reduce using rule 108 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 108 (expression1 -> LESSER relop exp top_relop .)


state 285

    (109) expression1 -> GREATER relop exp top_relop .

    RPAREN          reduce using rule 109 (expression1 -> GREATER relop exp top_relop .)
    COMMA           reduce using rule 109 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 109 (expression1 -> GREATER relop exp top_relop .)


state 286

    (110) expression1 -> EQUAL relop exp top_relop .

    RPAREN          reduce using rule 110 (expression1 -> EQUAL relop exp top_relop .)
    COMMA           reduce using rule 110 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 110 (expression1 -> EQUAL relop exp top_relop .)


state 287

    (111) expression1 -> NOTEQUAL relop exp top_relop .

    RPAREN          reduce using rule 111 (expression1 -> NOTEQUAL relop exp top_relop .)
    COMMA           reduce using rule 111 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 111 (expression1 -> NOTEQUAL relop exp top_relop .)


state 288

    (112) expression1 -> GREATEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 112 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 112 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 112 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 289

    (113) expression1 -> LESSEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 113 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 113 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 113 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 290

    (116) exp1 -> MINUS push_sign exp .

    LESSER          reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    RPAREN          reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 116 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 116 (exp1 -> MINUS push_sign exp .)


state 291

    (117) exp1 -> PLUS push_sign exp .

    LESSER          reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    RPAREN          reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 117 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 117 (exp1 -> PLUS push_sign exp .)


state 292

    (121) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 121 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 121 (term1 -> DIVIDE push_sign term .)


state 293

    (122) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 122 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 122 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 122 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 122 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 122 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 122 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 122 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 122 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 122 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 122 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 122 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 122 (term1 -> TIMES push_sign term .)


state 294

    (83) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 83 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 295

    (84) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 84 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 296

    (85) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PRINT           reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 85 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 297

    (45) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE . b2 RBRACE end_while
    (15) b2 -> . b2 statute
    (16) b2 -> . empty
    (163) empty -> .

    RBRACE          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)

    b2                             shift and go to state 309
    empty                          shift and go to state 38

state 298

    (157) print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .

    ID              reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    IF              reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    SQUARE          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    POLIGON         reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    COLOR           reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENBACK         reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    ROTATE          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    WHILE           reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENON           reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PENOFF          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    PRINT           reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RBRACE          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)
    RETURN          reduce using rule 157 (print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON .)


state 299

    (158) print_multi -> COMMA expression to_screen . print_multi
    (158) print_multi -> . COMMA expression to_screen print_multi
    (159) print_multi -> . empty
    (163) empty -> .

    COMMA           shift and go to state 238
    RPAREN          reduce using rule 163 (empty -> .)

    print_multi                    shift and go to state 310
    empty                          shift and go to state 239

state 300

    (66) params1 -> COMMA type ID . save_par params1
    (79) save_par -> .

    COMMA           reduce using rule 79 (save_par -> .)
    RPAREN          reduce using rule 79 (save_par -> .)

    save_par                       shift and go to state 311

state 301

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return . RBRACE end_func funcs3

    RBRACE          shift and go to state 312


state 302

    (70) statements -> statements statute .

    RETURN          reduce using rule 70 (statements -> statements statute .)
    ID              reduce using rule 70 (statements -> statements statute .)
    IF              reduce using rule 70 (statements -> statements statute .)
    TRIANGLE        reduce using rule 70 (statements -> statements statute .)
    RECTANGLE       reduce using rule 70 (statements -> statements statute .)
    SQUARE          reduce using rule 70 (statements -> statements statute .)
    CIRCLE          reduce using rule 70 (statements -> statements statute .)
    POLIGON         reduce using rule 70 (statements -> statements statute .)
    COLOR           reduce using rule 70 (statements -> statements statute .)
    PENSIZE         reduce using rule 70 (statements -> statements statute .)
    PENFORWARD      reduce using rule 70 (statements -> statements statute .)
    PENBACK         reduce using rule 70 (statements -> statements statute .)
    ROTATE          reduce using rule 70 (statements -> statements statute .)
    WHILE           reduce using rule 70 (statements -> statements statute .)
    PENON           reduce using rule 70 (statements -> statements statute .)
    PENOFF          reduce using rule 70 (statements -> statements statute .)
    PRINT           reduce using rule 70 (statements -> statements statute .)
    RBRACE          reduce using rule 70 (statements -> statements statute .)


state 303

    (161) return -> RETURN . var_cte SEMICOLON
    (162) return -> RETURN . st_cte SEMICOLON
    (128) var_cte -> . ID getidvalue
    (129) var_cte -> . CTE_INT getvalue_i
    (130) var_cte -> . CTE_FLOAT getvalue_f
    (131) var_cte -> . cte_bool getvalue_b
    (132) var_cte -> . ID list getarrayvalue
    (133) var_cte -> . call getcallvalue
    (59) st_cte -> . STRING
    (60) st_cte -> . cte_bool
    (99) cte_bool -> . TRUE
    (100) cte_bool -> . FALSE
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub

    ID              shift and go to state 315
    CTE_INT         shift and go to state 125
    CTE_FLOAT       shift and go to state 126
    STRING          shift and go to state 204
    TRUE            shift and go to state 129
    FALSE           shift and go to state 130

    var_cte                        shift and go to state 313
    st_cte                         shift and go to state 314
    cte_bool                       shift and go to state 316
    call                           shift and go to state 128

state 304

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE . end_func funcs3
    (78) end_func -> .

    FUNC            reduce using rule 78 (end_func -> .)
    VAR             reduce using rule 78 (end_func -> .)
    DAVINCI         reduce using rule 78 (end_func -> .)

    end_func                       shift and go to state 317

state 305

    (49) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PRINT           reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 49 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 306

    (144) call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON . gosub
    (147) gosub -> .

    ID              reduce using rule 147 (gosub -> .)
    IF              reduce using rule 147 (gosub -> .)
    TRIANGLE        reduce using rule 147 (gosub -> .)
    RECTANGLE       reduce using rule 147 (gosub -> .)
    SQUARE          reduce using rule 147 (gosub -> .)
    CIRCLE          reduce using rule 147 (gosub -> .)
    POLIGON         reduce using rule 147 (gosub -> .)
    COLOR           reduce using rule 147 (gosub -> .)
    PENSIZE         reduce using rule 147 (gosub -> .)
    PENFORWARD      reduce using rule 147 (gosub -> .)
    PENBACK         reduce using rule 147 (gosub -> .)
    ROTATE          reduce using rule 147 (gosub -> .)
    WHILE           reduce using rule 147 (gosub -> .)
    PENON           reduce using rule 147 (gosub -> .)
    PENOFF          reduce using rule 147 (gosub -> .)
    PRINT           reduce using rule 147 (gosub -> .)
    RBRACE          reduce using rule 147 (gosub -> .)
    DIVIDE          reduce using rule 147 (gosub -> .)
    TIMES           reduce using rule 147 (gosub -> .)
    MINUS           reduce using rule 147 (gosub -> .)
    PLUS            reduce using rule 147 (gosub -> .)
    LESSER          reduce using rule 147 (gosub -> .)
    GREATER         reduce using rule 147 (gosub -> .)
    EQUAL           reduce using rule 147 (gosub -> .)
    NOTEQUAL        reduce using rule 147 (gosub -> .)
    GREATEROREQUAL  reduce using rule 147 (gosub -> .)
    LESSEROREQUAL   reduce using rule 147 (gosub -> .)
    RPAREN          reduce using rule 147 (gosub -> .)
    COMMA           reduce using rule 147 (gosub -> .)
    RBRACKET        reduce using rule 147 (gosub -> .)
    SEMICOLON       reduce using rule 147 (gosub -> .)
    RETURN          reduce using rule 147 (gosub -> .)

    gosub                          shift and go to state 318

state 307

    (152) call2 -> COMMA increment exp argument . call2
    (152) call2 -> . COMMA increment exp argument call2
    (153) call2 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 206
    RPAREN          reduce using rule 163 (empty -> .)

    call2                          shift and go to state 319
    empty                          shift and go to state 207

state 308

    (101) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE . condition1 end_if
    (102) condition1 -> . gotoElse ELSE LBRACE b2 RBRACE
    (103) condition1 -> . empty
    (105) gotoElse -> .
    (163) empty -> .

    ELSE            reduce using rule 105 (gotoElse -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)
    RBRACE          reduce using rule 163 (empty -> .)
    RETURN          reduce using rule 163 (empty -> .)

    condition1                     shift and go to state 320
    gotoElse                       shift and go to state 321
    empty                          shift and go to state 322

state 309

    (45) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 . RBRACE end_while
    (15) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 323
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 310

    (158) print_multi -> COMMA expression to_screen print_multi .

    RPAREN          reduce using rule 158 (print_multi -> COMMA expression to_screen print_multi .)


state 311

    (66) params1 -> COMMA type ID save_par . params1
    (66) params1 -> . COMMA type ID save_par params1
    (67) params1 -> . empty
    (163) empty -> .

    COMMA           shift and go to state 241
    RPAREN          reduce using rule 163 (empty -> .)

    params1                        shift and go to state 324
    empty                          shift and go to state 242

state 312

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE . end_func funcs3
    (78) end_func -> .

    FUNC            reduce using rule 78 (end_func -> .)
    VAR             reduce using rule 78 (end_func -> .)
    DAVINCI         reduce using rule 78 (end_func -> .)

    end_func                       shift and go to state 325

state 313

    (161) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 326


state 314

    (162) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 327


state 315

    (128) var_cte -> ID . getidvalue
    (132) var_cte -> ID . list getarrayvalue
    (144) call -> ID . check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (134) getidvalue -> .
    (27) list -> . LBRACKET CTE_INT RBRACKET
    (145) check_name -> .

    SEMICOLON       reduce using rule 134 (getidvalue -> .)
    LBRACKET        shift and go to state 44
    LPAREN          reduce using rule 145 (check_name -> .)

    getidvalue                     shift and go to state 171
    list                           shift and go to state 172
    check_name                     shift and go to state 92

state 316

    (131) var_cte -> cte_bool . getvalue_b
    (60) st_cte -> cte_bool .
    (137) getvalue_b -> .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 60 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 60 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 137 (getvalue_b -> .) ]

    getvalue_b                     shift and go to state 175

state 317

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func . funcs3
    (73) funcs3 -> . funcs
    (74) funcs3 -> . empty
    (61) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (62) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (163) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    VAR             reduce using rule 163 (empty -> .)
    DAVINCI         reduce using rule 163 (empty -> .)

  ! FUNC            [ reduce using rule 163 (empty -> .) ]

    funcs3                         shift and go to state 328
    funcs                          shift and go to state 329
    empty                          shift and go to state 330

state 318

    (144) call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .

    ID              reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    IF              reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    TRIANGLE        reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    RECTANGLE       reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    SQUARE          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    CIRCLE          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    POLIGON         reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    COLOR           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PENSIZE         reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PENFORWARD      reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PENBACK         reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    ROTATE          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    WHILE           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PENON           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PENOFF          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PRINT           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    RBRACE          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    DIVIDE          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    TIMES           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    MINUS           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    PLUS            reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    LESSER          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    GREATER         reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    EQUAL           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    NOTEQUAL        reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    GREATEROREQUAL  reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    LESSEROREQUAL   reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    RPAREN          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    COMMA           reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    RBRACKET        reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    SEMICOLON       reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)
    RETURN          reduce using rule 144 (call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub .)


state 319

    (152) call2 -> COMMA increment exp argument call2 .

    RPAREN          reduce using rule 152 (call2 -> COMMA increment exp argument call2 .)


state 320

    (101) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 . end_if
    (106) end_if -> .

    ID              reduce using rule 106 (end_if -> .)
    IF              reduce using rule 106 (end_if -> .)
    TRIANGLE        reduce using rule 106 (end_if -> .)
    RECTANGLE       reduce using rule 106 (end_if -> .)
    SQUARE          reduce using rule 106 (end_if -> .)
    CIRCLE          reduce using rule 106 (end_if -> .)
    POLIGON         reduce using rule 106 (end_if -> .)
    COLOR           reduce using rule 106 (end_if -> .)
    PENSIZE         reduce using rule 106 (end_if -> .)
    PENFORWARD      reduce using rule 106 (end_if -> .)
    PENBACK         reduce using rule 106 (end_if -> .)
    ROTATE          reduce using rule 106 (end_if -> .)
    WHILE           reduce using rule 106 (end_if -> .)
    PENON           reduce using rule 106 (end_if -> .)
    PENOFF          reduce using rule 106 (end_if -> .)
    PRINT           reduce using rule 106 (end_if -> .)
    RBRACE          reduce using rule 106 (end_if -> .)
    RETURN          reduce using rule 106 (end_if -> .)

    end_if                         shift and go to state 331

state 321

    (102) condition1 -> gotoElse . ELSE LBRACE b2 RBRACE

    ELSE            shift and go to state 332


state 322

    (103) condition1 -> empty .

    ID              reduce using rule 103 (condition1 -> empty .)
    IF              reduce using rule 103 (condition1 -> empty .)
    TRIANGLE        reduce using rule 103 (condition1 -> empty .)
    RECTANGLE       reduce using rule 103 (condition1 -> empty .)
    SQUARE          reduce using rule 103 (condition1 -> empty .)
    CIRCLE          reduce using rule 103 (condition1 -> empty .)
    POLIGON         reduce using rule 103 (condition1 -> empty .)
    COLOR           reduce using rule 103 (condition1 -> empty .)
    PENSIZE         reduce using rule 103 (condition1 -> empty .)
    PENFORWARD      reduce using rule 103 (condition1 -> empty .)
    PENBACK         reduce using rule 103 (condition1 -> empty .)
    ROTATE          reduce using rule 103 (condition1 -> empty .)
    WHILE           reduce using rule 103 (condition1 -> empty .)
    PENON           reduce using rule 103 (condition1 -> empty .)
    PENOFF          reduce using rule 103 (condition1 -> empty .)
    PRINT           reduce using rule 103 (condition1 -> empty .)
    RBRACE          reduce using rule 103 (condition1 -> empty .)
    RETURN          reduce using rule 103 (condition1 -> empty .)


state 323

    (45) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE . end_while
    (47) end_while -> .

    ID              reduce using rule 47 (end_while -> .)
    IF              reduce using rule 47 (end_while -> .)
    TRIANGLE        reduce using rule 47 (end_while -> .)
    RECTANGLE       reduce using rule 47 (end_while -> .)
    SQUARE          reduce using rule 47 (end_while -> .)
    CIRCLE          reduce using rule 47 (end_while -> .)
    POLIGON         reduce using rule 47 (end_while -> .)
    COLOR           reduce using rule 47 (end_while -> .)
    PENSIZE         reduce using rule 47 (end_while -> .)
    PENFORWARD      reduce using rule 47 (end_while -> .)
    PENBACK         reduce using rule 47 (end_while -> .)
    ROTATE          reduce using rule 47 (end_while -> .)
    WHILE           reduce using rule 47 (end_while -> .)
    PENON           reduce using rule 47 (end_while -> .)
    PENOFF          reduce using rule 47 (end_while -> .)
    PRINT           reduce using rule 47 (end_while -> .)
    RBRACE          reduce using rule 47 (end_while -> .)
    RETURN          reduce using rule 47 (end_while -> .)

    end_while                      shift and go to state 333

state 324

    (66) params1 -> COMMA type ID save_par params1 .

    RPAREN          reduce using rule 66 (params1 -> COMMA type ID save_par params1 .)


state 325

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func . funcs3
    (73) funcs3 -> . funcs
    (74) funcs3 -> . empty
    (61) funcs -> . FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3
    (62) funcs -> . FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3
    (163) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 11
    VAR             reduce using rule 163 (empty -> .)
    DAVINCI         reduce using rule 163 (empty -> .)

  ! FUNC            [ reduce using rule 163 (empty -> .) ]

    funcs3                         shift and go to state 334
    funcs                          shift and go to state 329
    empty                          shift and go to state 330

state 326

    (161) return -> RETURN var_cte SEMICOLON .

    RBRACE          reduce using rule 161 (return -> RETURN var_cte SEMICOLON .)


state 327

    (162) return -> RETURN st_cte SEMICOLON .

    RBRACE          reduce using rule 162 (return -> RETURN st_cte SEMICOLON .)


state 328

    (62) funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .

    FUNC            reduce using rule 62 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)
    VAR             reduce using rule 62 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)
    DAVINCI         reduce using rule 62 (funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 .)


state 329

    (73) funcs3 -> funcs .

    FUNC            reduce using rule 73 (funcs3 -> funcs .)
    VAR             reduce using rule 73 (funcs3 -> funcs .)
    DAVINCI         reduce using rule 73 (funcs3 -> funcs .)


state 330

    (74) funcs3 -> empty .

    FUNC            reduce using rule 74 (funcs3 -> empty .)
    VAR             reduce using rule 74 (funcs3 -> empty .)
    DAVINCI         reduce using rule 74 (funcs3 -> empty .)


state 331

    (101) condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .

    ID              reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    IF              reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    TRIANGLE        reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RECTANGLE       reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    SQUARE          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    CIRCLE          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    POLIGON         reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    COLOR           reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENSIZE         reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENFORWARD      reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENBACK         reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    ROTATE          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    WHILE           reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENON           reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PENOFF          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    PRINT           reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RBRACE          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)
    RETURN          reduce using rule 101 (condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if .)


state 332

    (102) condition1 -> gotoElse ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 335


state 333

    (45) while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .

    ID              reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    IF              reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    TRIANGLE        reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RECTANGLE       reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    SQUARE          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    CIRCLE          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    POLIGON         reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    COLOR           reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENSIZE         reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENFORWARD      reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENBACK         reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    ROTATE          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    WHILE           reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENON           reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PENOFF          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    PRINT           reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RBRACE          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)
    RETURN          reduce using rule 45 (while -> WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while .)


state 334

    (61) funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .

    FUNC            reduce using rule 61 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)
    VAR             reduce using rule 61 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)
    DAVINCI         reduce using rule 61 (funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3 .)


state 335

    (102) condition1 -> gotoElse ELSE LBRACE . b2 RBRACE
    (15) b2 -> . b2 statute
    (16) b2 -> . empty
    (163) empty -> .

    RBRACE          reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    TRIANGLE        reduce using rule 163 (empty -> .)
    RECTANGLE       reduce using rule 163 (empty -> .)
    SQUARE          reduce using rule 163 (empty -> .)
    CIRCLE          reduce using rule 163 (empty -> .)
    POLIGON         reduce using rule 163 (empty -> .)
    COLOR           reduce using rule 163 (empty -> .)
    PENSIZE         reduce using rule 163 (empty -> .)
    PENFORWARD      reduce using rule 163 (empty -> .)
    PENBACK         reduce using rule 163 (empty -> .)
    ROTATE          reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    PENON           reduce using rule 163 (empty -> .)
    PENOFF          reduce using rule 163 (empty -> .)
    PRINT           reduce using rule 163 (empty -> .)

    b2                             shift and go to state 336
    empty                          shift and go to state 38

state 336

    (102) condition1 -> gotoElse ELSE LBRACE b2 . RBRACE
    (15) b2 -> b2 . statute
    (28) statute -> . assignment
    (29) statute -> . call
    (30) statute -> . condition
    (31) statute -> . triangle
    (32) statute -> . rectangle
    (33) statute -> . square
    (34) statute -> . circle
    (35) statute -> . poligon
    (36) statute -> . color
    (37) statute -> . pensize
    (38) statute -> . penforward
    (39) statute -> . penback
    (40) statute -> . rotate
    (41) statute -> . while
    (42) statute -> . penon
    (43) statute -> . penoff
    (44) statute -> . print
    (48) assignment -> . ID verify_id ASSIGN push_sign expression set_value SEMICOLON
    (49) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (144) call -> . ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub
    (101) condition -> . IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if
    (83) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (84) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (82) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (81) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (85) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (80) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (88) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (89) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (90) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (86) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (87) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (45) while -> . WHILE while_return LPAREN expression RPAREN type_check LBRACE b2 RBRACE end_while
    (91) penon -> . PENON LPAREN RPAREN SEMICOLON
    (92) penoff -> . PENOFF LPAREN RPAREN SEMICOLON
    (157) print -> . PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON

    RBRACE          shift and go to state 337
    ID              shift and go to state 65
    IF              shift and go to state 66
    TRIANGLE        shift and go to state 67
    RECTANGLE       shift and go to state 68
    SQUARE          shift and go to state 69
    CIRCLE          shift and go to state 70
    POLIGON         shift and go to state 71
    COLOR           shift and go to state 72
    PENSIZE         shift and go to state 73
    PENFORWARD      shift and go to state 74
    PENBACK         shift and go to state 75
    ROTATE          shift and go to state 76
    WHILE           shift and go to state 77
    PENON           shift and go to state 78
    PENOFF          shift and go to state 79
    PRINT           shift and go to state 80

    statute                        shift and go to state 47
    assignment                     shift and go to state 48
    call                           shift and go to state 49
    condition                      shift and go to state 50
    triangle                       shift and go to state 51
    rectangle                      shift and go to state 52
    square                         shift and go to state 53
    circle                         shift and go to state 54
    poligon                        shift and go to state 55
    color                          shift and go to state 56
    pensize                        shift and go to state 57
    penforward                     shift and go to state 58
    penback                        shift and go to state 59
    rotate                         shift and go to state 60
    while                          shift and go to state 61
    penon                          shift and go to state 62
    penoff                         shift and go to state 63
    print                          shift and go to state 64

state 337

    (102) condition1 -> gotoElse ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    PRINT           reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 102 (condition1 -> gotoElse ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 317 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 325 resolved as shift
WARNING: reduce/reduce conflict in state 124 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 124
WARNING: reduce/reduce conflict in state 199 resolved using rule (push_id -> <empty>)
WARNING: rejected rule (argument -> <empty>) in state 199
WARNING: reduce/reduce conflict in state 199 resolved using rule (getidvalue -> <empty>)
WARNING: rejected rule (push_id -> <empty>) in state 199
WARNING: reduce/reduce conflict in state 205 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 205
WARNING: reduce/reduce conflict in state 316 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (getvalue_b -> <empty>) in state 316
WARNING: Rule (push_id -> <empty>) is never reduced
