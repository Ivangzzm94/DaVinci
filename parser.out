Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    CTE_BOOL
    EXPRESSION
    NOT
    OR
    SIZE
    ST_CTE
    TERM

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON program1 DAVINCI block
Rule 2     program1 -> program1 funcs
Rule 3     program1 -> program1 vars global_vars
Rule 4     program1 -> empty
Rule 5     global_vars -> <empty>
Rule 6     block -> LBRACE b1 RBRACE
Rule 7     b1 -> vars local_vars b2
Rule 8     b1 -> b2
Rule 9     local_vars -> <empty>
Rule 10    b2 -> b2 statute
Rule 11    b2 -> empty
Rule 12    vars -> VAR vars2
Rule 13    vars2 -> vars2 type save_type vars3 SEMICOLON
Rule 14    vars2 -> empty
Rule 15    vars3 -> ID ASSIGN expression vars4
Rule 16    vars3 -> ID list vars4
Rule 17    vars3 -> ID vars4
Rule 18    vars4 -> vars4 COMMA ID
Rule 19    vars4 -> empty
Rule 20    save_type -> <empty>
Rule 21    list -> LIST
Rule 22    statute -> assignment
Rule 23    statute -> call
Rule 24    statute -> condition
Rule 25    statute -> triangle
Rule 26    statute -> rectangle
Rule 27    statute -> square
Rule 28    statute -> circle
Rule 29    statute -> poligon
Rule 30    statute -> color
Rule 31    statute -> pensize
Rule 32    statute -> penforward
Rule 33    statute -> penback
Rule 34    statute -> rotate
Rule 35    statute -> while
Rule 36    statute -> return
Rule 37    statute -> penon
Rule 38    statute -> penoff
Rule 39    while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
Rule 40    assignment -> ID cte_id ASSIGN expression SEMICOLON
Rule 41    assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
Rule 42    cte_id -> <empty>
Rule 43    color_cte -> RED
Rule 44    color_cte -> BLUE
Rule 45    color_cte -> YELLOW
Rule 46    color_cte -> GREEN
Rule 47    color_cte -> PINK
Rule 48    color_cte -> PURPLE
Rule 49    st_cte -> STRING
Rule 50    st_cte -> cte_bool
Rule 51    funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 52    funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
Rule 53    funcs1 -> funcs1 COMMA type ID
Rule 54    funcs1 -> empty
Rule 55    funcs2 -> funcs2 vars
Rule 56    funcs2 -> funcs2 statute
Rule 57    funcs2 -> empty
Rule 58    funcs3 -> funcs
Rule 59    funcs3 -> empty
Rule 60    color -> COLOR LPAREN color_cte RPAREN SEMICOLON
Rule 61    circle -> CIRCLE LPAREN exp RPAREN SEMICOLON
Rule 62    square -> SQUARE LPAREN exp RPAREN SEMICOLON
Rule 63    triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 64    rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 65    poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
Rule 66    rotate -> ROTATE LPAREN exp RPAREN SEMICOLON
Rule 67    rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
Rule 68    pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON
Rule 69    penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON
Rule 70    penback -> PENBACK LPAREN exp RPAREN SEMICOLON
Rule 71    penon -> PENON LPAREN RPAREN SEMICOLON
Rule 72    penoff -> PENOFF LPAREN RPAREN SEMICOLON
Rule 73    type -> INT
Rule 74    type -> FLOAT
Rule 75    type -> STRING
Rule 76    type -> BOOL
Rule 77    var_cte -> ID
Rule 78    var_cte -> CTE_INT
Rule 79    var_cte -> CTE_FLOAT
Rule 80    var_cte -> cte_bool
Rule 81    var_cte -> ID list
Rule 82    var_cte -> call
Rule 83    cte_bool -> TRUE
Rule 84    cte_bool -> FALSE
Rule 85    condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
Rule 86    condition1 -> ELSE LBRACE b2 RBRACE
Rule 87    condition1 -> empty
Rule 88    expression -> exp expression1
Rule 89    expression1 -> LESSER relop exp top_relop
Rule 90    expression1 -> GREATER relop exp top_relop
Rule 91    expression1 -> EQUAL relop exp top_relop
Rule 92    expression1 -> NOTEQUAL relop exp top_relop
Rule 93    expression1 -> GREATEROREQUAL relop exp top_relop
Rule 94    expression1 -> LESSEROREQUAL relop exp top_relop
Rule 95    expression1 -> empty
Rule 96    relop -> <empty>
Rule 97    top_relop -> <empty>
Rule 98    exp -> term top_exp exp1
Rule 99    exp1 -> MINUS push_sign exp
Rule 100   exp1 -> PLUS push_sign exp
Rule 101   exp1 -> empty
Rule 102   top_exp -> <empty>
Rule 103   push_sign -> <empty>
Rule 104   top_factor -> <empty>
Rule 105   factor -> LPAREN false_bottom expression RPAREN
Rule 106   factor -> var_cte
Rule 107   factor -> ID push_id
Rule 108   false_bottom -> <empty>
Rule 109   push_id -> <empty>
Rule 110   term -> factor term1
Rule 111   term1 -> DIVIDE push_sign term
Rule 112   term1 -> TIMES push_sign term
Rule 113   term1 -> empty
Rule 114   call -> ID LPAREN call1 RPAREN SEMICOLON
Rule 115   call1 -> ID COMMA call1
Rule 116   call1 -> exp
Rule 117   call1 -> st_cte
Rule 118   return -> RETURN var_cte SEMICOLON
Rule 119   return -> RETURN st_cte SEMICOLON
Rule 120   empty -> <empty>

Terminals, with rules where they appear

AND                  : 
ASSIGN               : 15 40 41
BLUE                 : 44
BOOL                 : 76
CIRCLE               : 61
COLOR                : 60
COMMA                : 18 53 63 64 65 115
CTE_BOOL             : 
CTE_FLOAT            : 79
CTE_INT              : 78
CTE_STRING           : 67
DAVINCI              : 1
DIVIDE               : 111
ELSE                 : 86
EQUAL                : 91
EXPRESSION           : 
FALSE                : 84
FLOAT                : 74
FUNC                 : 51 52
GREATER              : 90
GREATEROREQUAL       : 93
GREEN                : 46
ID                   : 1 15 16 17 18 40 41 51 51 52 52 53 77 81 107 114 115
IF                   : 85
INT                  : 73
LBRACE               : 6 39 51 52 85 86
LBRACKET             : 41
LESSER               : 89
LESSEROREQUAL        : 94
LIST                 : 21
LPAREN               : 39 51 52 60 61 62 63 64 65 66 67 68 69 70 71 72 85 105 114
MINUS                : 99
NOT                  : 
NOTEQUAL             : 92
OR                   : 
PENBACK              : 70
PENFORWARD           : 69
PENOFF               : 72
PENON                : 71
PENSIZE              : 68
PINK                 : 47
PLUS                 : 100
POLIGON              : 65
PROGRAM              : 1
PURPLE               : 48
RBRACE               : 6 39 51 52 85 86
RBRACKET             : 41
RECTANGLE            : 64
RED                  : 43
RETURN               : 118 119
ROTATE               : 66 67
RPAREN               : 39 51 52 60 61 62 63 64 65 66 67 68 69 70 71 72 85 105 114
SEMICOLON            : 1 13 40 41 60 61 62 63 64 65 66 67 68 69 70 71 72 114 118 119
SIZE                 : 
SQUARE               : 62
STRING               : 49 75
ST_CTE               : 
TERM                 : 
TIMES                : 112
TRIANGLE             : 63
TRUE                 : 83
VAR                  : 12
VOID                 : 52
WHILE                : 39
YELLOW               : 45
error                : 

Nonterminals, with rules where they appear

assignment           : 22
b1                   : 6
b2                   : 7 8 10 39 85 86
block                : 1
call                 : 23 82
call1                : 114 115
circle               : 28
color                : 30
color_cte            : 60
condition            : 24
condition1           : 85
cte_bool             : 50 80
cte_id               : 40 41
empty                : 4 11 14 19 54 57 59 87 95 101 113
exp                  : 41 61 62 63 63 64 64 65 65 66 68 69 70 88 89 90 91 92 93 94 99 100 116
exp1                 : 98
expression           : 15 39 40 41 85 105
expression1          : 88
factor               : 110
false_bottom         : 105
funcs                : 2 58
funcs1               : 51 52 53
funcs2               : 51 52 55 56
funcs3               : 51 52
global_vars          : 3
list                 : 16 81
local_vars           : 7
penback              : 33
penforward           : 32
penoff               : 38
penon                : 37
pensize              : 31
poligon              : 29
program              : 0
program1             : 1 2 3
push_id              : 107
push_sign            : 99 100 111 112
rectangle            : 26
relop                : 89 90 91 92 93 94
return               : 36
rotate               : 34
save_type            : 13
square               : 27
st_cte               : 117 119
statute              : 10 56
term                 : 98 111 112
term1                : 110
top_exp              : 98
top_factor           : 
top_relop            : 89 90 91 92 93 94
triangle             : 25
type                 : 13 51 51 52 53
var_cte              : 106 118
vars                 : 3 7 55
vars2                : 12 13
vars3                : 13
vars4                : 15 16 17 18
while                : 35

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON program1 DAVINCI block

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON program1 DAVINCI block

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON program1 DAVINCI block

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . program1 DAVINCI block
    (2) program1 -> . program1 funcs
    (3) program1 -> . program1 vars global_vars
    (4) program1 -> . empty
    (120) empty -> .

    DAVINCI         reduce using rule 120 (empty -> .)
    FUNC            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)

    program1                       shift and go to state 5
    empty                          shift and go to state 6

state 5

    (1) program -> PROGRAM ID SEMICOLON program1 . DAVINCI block
    (2) program1 -> program1 . funcs
    (3) program1 -> program1 . vars global_vars
    (51) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (12) vars -> . VAR vars2

    DAVINCI         shift and go to state 7
    FUNC            shift and go to state 10
    VAR             shift and go to state 11

    funcs                          shift and go to state 8
    vars                           shift and go to state 9

state 6

    (4) program1 -> empty .

    DAVINCI         reduce using rule 4 (program1 -> empty .)
    FUNC            reduce using rule 4 (program1 -> empty .)
    VAR             reduce using rule 4 (program1 -> empty .)


state 7

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI . block
    (6) block -> . LBRACE b1 RBRACE

    LBRACE          shift and go to state 13

    block                          shift and go to state 12

state 8

    (2) program1 -> program1 funcs .

    DAVINCI         reduce using rule 2 (program1 -> program1 funcs .)
    FUNC            reduce using rule 2 (program1 -> program1 funcs .)
    VAR             reduce using rule 2 (program1 -> program1 funcs .)


state 9

    (3) program1 -> program1 vars . global_vars
    (5) global_vars -> .

    DAVINCI         reduce using rule 5 (global_vars -> .)
    FUNC            reduce using rule 5 (global_vars -> .)
    VAR             reduce using rule 5 (global_vars -> .)

    global_vars                    shift and go to state 14

state 10

    (51) funcs -> FUNC . type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs -> FUNC . VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    VOID            shift and go to state 16
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20

    type                           shift and go to state 15

state 11

    (12) vars -> VAR . vars2
    (13) vars2 -> . vars2 type save_type vars3 SEMICOLON
    (14) vars2 -> . empty
    (120) empty -> .

    INT             reduce using rule 120 (empty -> .)
    FLOAT           reduce using rule 120 (empty -> .)
    STRING          reduce using rule 120 (empty -> .)
    BOOL            reduce using rule 120 (empty -> .)
    DAVINCI         reduce using rule 120 (empty -> .)
    FUNC            reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)
    RBRACE          reduce using rule 120 (empty -> .)

    vars2                          shift and go to state 21
    empty                          shift and go to state 22

state 12

    (1) program -> PROGRAM ID SEMICOLON program1 DAVINCI block .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON program1 DAVINCI block .)


state 13

    (6) block -> LBRACE . b1 RBRACE
    (7) b1 -> . vars local_vars b2
    (8) b1 -> . b2
    (12) vars -> . VAR vars2
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (120) empty -> .

    VAR             shift and go to state 11
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)
    RBRACE          reduce using rule 120 (empty -> .)

    b1                             shift and go to state 23
    vars                           shift and go to state 24
    b2                             shift and go to state 25
    empty                          shift and go to state 26

state 14

    (3) program1 -> program1 vars global_vars .

    DAVINCI         reduce using rule 3 (program1 -> program1 vars global_vars .)
    FUNC            reduce using rule 3 (program1 -> program1 vars global_vars .)
    VAR             reduce using rule 3 (program1 -> program1 vars global_vars .)


state 15

    (51) funcs -> FUNC type . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 27


state 16

    (52) funcs -> FUNC VOID . ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 28


state 17

    (73) type -> INT .

    ID              reduce using rule 73 (type -> INT .)


state 18

    (74) type -> FLOAT .

    ID              reduce using rule 74 (type -> FLOAT .)


state 19

    (75) type -> STRING .

    ID              reduce using rule 75 (type -> STRING .)


state 20

    (76) type -> BOOL .

    ID              reduce using rule 76 (type -> BOOL .)


state 21

    (12) vars -> VAR vars2 .
    (13) vars2 -> vars2 . type save_type vars3 SEMICOLON
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    DAVINCI         reduce using rule 12 (vars -> VAR vars2 .)
    FUNC            reduce using rule 12 (vars -> VAR vars2 .)
    VAR             reduce using rule 12 (vars -> VAR vars2 .)
    ID              reduce using rule 12 (vars -> VAR vars2 .)
    IF              reduce using rule 12 (vars -> VAR vars2 .)
    TRIANGLE        reduce using rule 12 (vars -> VAR vars2 .)
    RECTANGLE       reduce using rule 12 (vars -> VAR vars2 .)
    SQUARE          reduce using rule 12 (vars -> VAR vars2 .)
    CIRCLE          reduce using rule 12 (vars -> VAR vars2 .)
    POLIGON         reduce using rule 12 (vars -> VAR vars2 .)
    COLOR           reduce using rule 12 (vars -> VAR vars2 .)
    PENSIZE         reduce using rule 12 (vars -> VAR vars2 .)
    PENFORWARD      reduce using rule 12 (vars -> VAR vars2 .)
    PENBACK         reduce using rule 12 (vars -> VAR vars2 .)
    ROTATE          reduce using rule 12 (vars -> VAR vars2 .)
    WHILE           reduce using rule 12 (vars -> VAR vars2 .)
    RETURN          reduce using rule 12 (vars -> VAR vars2 .)
    PENON           reduce using rule 12 (vars -> VAR vars2 .)
    PENOFF          reduce using rule 12 (vars -> VAR vars2 .)
    RBRACE          reduce using rule 12 (vars -> VAR vars2 .)
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20

    type                           shift and go to state 29

state 22

    (14) vars2 -> empty .

    INT             reduce using rule 14 (vars2 -> empty .)
    FLOAT           reduce using rule 14 (vars2 -> empty .)
    STRING          reduce using rule 14 (vars2 -> empty .)
    BOOL            reduce using rule 14 (vars2 -> empty .)
    DAVINCI         reduce using rule 14 (vars2 -> empty .)
    FUNC            reduce using rule 14 (vars2 -> empty .)
    VAR             reduce using rule 14 (vars2 -> empty .)
    ID              reduce using rule 14 (vars2 -> empty .)
    IF              reduce using rule 14 (vars2 -> empty .)
    TRIANGLE        reduce using rule 14 (vars2 -> empty .)
    RECTANGLE       reduce using rule 14 (vars2 -> empty .)
    SQUARE          reduce using rule 14 (vars2 -> empty .)
    CIRCLE          reduce using rule 14 (vars2 -> empty .)
    POLIGON         reduce using rule 14 (vars2 -> empty .)
    COLOR           reduce using rule 14 (vars2 -> empty .)
    PENSIZE         reduce using rule 14 (vars2 -> empty .)
    PENFORWARD      reduce using rule 14 (vars2 -> empty .)
    PENBACK         reduce using rule 14 (vars2 -> empty .)
    ROTATE          reduce using rule 14 (vars2 -> empty .)
    WHILE           reduce using rule 14 (vars2 -> empty .)
    RETURN          reduce using rule 14 (vars2 -> empty .)
    PENON           reduce using rule 14 (vars2 -> empty .)
    PENOFF          reduce using rule 14 (vars2 -> empty .)
    RBRACE          reduce using rule 14 (vars2 -> empty .)


state 23

    (6) block -> LBRACE b1 . RBRACE

    RBRACE          shift and go to state 30


state 24

    (7) b1 -> vars . local_vars b2
    (9) local_vars -> .

    ID              reduce using rule 9 (local_vars -> .)
    IF              reduce using rule 9 (local_vars -> .)
    TRIANGLE        reduce using rule 9 (local_vars -> .)
    RECTANGLE       reduce using rule 9 (local_vars -> .)
    SQUARE          reduce using rule 9 (local_vars -> .)
    CIRCLE          reduce using rule 9 (local_vars -> .)
    POLIGON         reduce using rule 9 (local_vars -> .)
    COLOR           reduce using rule 9 (local_vars -> .)
    PENSIZE         reduce using rule 9 (local_vars -> .)
    PENFORWARD      reduce using rule 9 (local_vars -> .)
    PENBACK         reduce using rule 9 (local_vars -> .)
    ROTATE          reduce using rule 9 (local_vars -> .)
    WHILE           reduce using rule 9 (local_vars -> .)
    RETURN          reduce using rule 9 (local_vars -> .)
    PENON           reduce using rule 9 (local_vars -> .)
    PENOFF          reduce using rule 9 (local_vars -> .)
    RBRACE          reduce using rule 9 (local_vars -> .)

    local_vars                     shift and go to state 31

state 25

    (8) b1 -> b2 .
    (10) b2 -> b2 . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 8 (b1 -> b2 .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 32
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 26

    (11) b2 -> empty .

    ID              reduce using rule 11 (b2 -> empty .)
    IF              reduce using rule 11 (b2 -> empty .)
    TRIANGLE        reduce using rule 11 (b2 -> empty .)
    RECTANGLE       reduce using rule 11 (b2 -> empty .)
    SQUARE          reduce using rule 11 (b2 -> empty .)
    CIRCLE          reduce using rule 11 (b2 -> empty .)
    POLIGON         reduce using rule 11 (b2 -> empty .)
    COLOR           reduce using rule 11 (b2 -> empty .)
    PENSIZE         reduce using rule 11 (b2 -> empty .)
    PENFORWARD      reduce using rule 11 (b2 -> empty .)
    PENBACK         reduce using rule 11 (b2 -> empty .)
    ROTATE          reduce using rule 11 (b2 -> empty .)
    WHILE           reduce using rule 11 (b2 -> empty .)
    RETURN          reduce using rule 11 (b2 -> empty .)
    PENON           reduce using rule 11 (b2 -> empty .)
    PENOFF          reduce using rule 11 (b2 -> empty .)
    RBRACE          reduce using rule 11 (b2 -> empty .)


state 27

    (51) funcs -> FUNC type ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 66


state 28

    (52) funcs -> FUNC VOID ID . LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    LPAREN          shift and go to state 67


state 29

    (13) vars2 -> vars2 type . save_type vars3 SEMICOLON
    (20) save_type -> .

    ID              reduce using rule 20 (save_type -> .)

    save_type                      shift and go to state 68

state 30

    (6) block -> LBRACE b1 RBRACE .

    $end            reduce using rule 6 (block -> LBRACE b1 RBRACE .)


state 31

    (7) b1 -> vars local_vars . b2
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (120) empty -> .

    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)
    RBRACE          reduce using rule 120 (empty -> .)

    b2                             shift and go to state 69
    empty                          shift and go to state 26

state 32

    (10) b2 -> b2 statute .

    ID              reduce using rule 10 (b2 -> b2 statute .)
    IF              reduce using rule 10 (b2 -> b2 statute .)
    TRIANGLE        reduce using rule 10 (b2 -> b2 statute .)
    RECTANGLE       reduce using rule 10 (b2 -> b2 statute .)
    SQUARE          reduce using rule 10 (b2 -> b2 statute .)
    CIRCLE          reduce using rule 10 (b2 -> b2 statute .)
    POLIGON         reduce using rule 10 (b2 -> b2 statute .)
    COLOR           reduce using rule 10 (b2 -> b2 statute .)
    PENSIZE         reduce using rule 10 (b2 -> b2 statute .)
    PENFORWARD      reduce using rule 10 (b2 -> b2 statute .)
    PENBACK         reduce using rule 10 (b2 -> b2 statute .)
    ROTATE          reduce using rule 10 (b2 -> b2 statute .)
    WHILE           reduce using rule 10 (b2 -> b2 statute .)
    RETURN          reduce using rule 10 (b2 -> b2 statute .)
    PENON           reduce using rule 10 (b2 -> b2 statute .)
    PENOFF          reduce using rule 10 (b2 -> b2 statute .)
    RBRACE          reduce using rule 10 (b2 -> b2 statute .)


state 33

    (22) statute -> assignment .

    ID              reduce using rule 22 (statute -> assignment .)
    IF              reduce using rule 22 (statute -> assignment .)
    TRIANGLE        reduce using rule 22 (statute -> assignment .)
    RECTANGLE       reduce using rule 22 (statute -> assignment .)
    SQUARE          reduce using rule 22 (statute -> assignment .)
    CIRCLE          reduce using rule 22 (statute -> assignment .)
    POLIGON         reduce using rule 22 (statute -> assignment .)
    COLOR           reduce using rule 22 (statute -> assignment .)
    PENSIZE         reduce using rule 22 (statute -> assignment .)
    PENFORWARD      reduce using rule 22 (statute -> assignment .)
    PENBACK         reduce using rule 22 (statute -> assignment .)
    ROTATE          reduce using rule 22 (statute -> assignment .)
    WHILE           reduce using rule 22 (statute -> assignment .)
    RETURN          reduce using rule 22 (statute -> assignment .)
    PENON           reduce using rule 22 (statute -> assignment .)
    PENOFF          reduce using rule 22 (statute -> assignment .)
    RBRACE          reduce using rule 22 (statute -> assignment .)
    VAR             reduce using rule 22 (statute -> assignment .)


state 34

    (23) statute -> call .

    ID              reduce using rule 23 (statute -> call .)
    IF              reduce using rule 23 (statute -> call .)
    TRIANGLE        reduce using rule 23 (statute -> call .)
    RECTANGLE       reduce using rule 23 (statute -> call .)
    SQUARE          reduce using rule 23 (statute -> call .)
    CIRCLE          reduce using rule 23 (statute -> call .)
    POLIGON         reduce using rule 23 (statute -> call .)
    COLOR           reduce using rule 23 (statute -> call .)
    PENSIZE         reduce using rule 23 (statute -> call .)
    PENFORWARD      reduce using rule 23 (statute -> call .)
    PENBACK         reduce using rule 23 (statute -> call .)
    ROTATE          reduce using rule 23 (statute -> call .)
    WHILE           reduce using rule 23 (statute -> call .)
    RETURN          reduce using rule 23 (statute -> call .)
    PENON           reduce using rule 23 (statute -> call .)
    PENOFF          reduce using rule 23 (statute -> call .)
    RBRACE          reduce using rule 23 (statute -> call .)
    VAR             reduce using rule 23 (statute -> call .)


state 35

    (24) statute -> condition .

    ID              reduce using rule 24 (statute -> condition .)
    IF              reduce using rule 24 (statute -> condition .)
    TRIANGLE        reduce using rule 24 (statute -> condition .)
    RECTANGLE       reduce using rule 24 (statute -> condition .)
    SQUARE          reduce using rule 24 (statute -> condition .)
    CIRCLE          reduce using rule 24 (statute -> condition .)
    POLIGON         reduce using rule 24 (statute -> condition .)
    COLOR           reduce using rule 24 (statute -> condition .)
    PENSIZE         reduce using rule 24 (statute -> condition .)
    PENFORWARD      reduce using rule 24 (statute -> condition .)
    PENBACK         reduce using rule 24 (statute -> condition .)
    ROTATE          reduce using rule 24 (statute -> condition .)
    WHILE           reduce using rule 24 (statute -> condition .)
    RETURN          reduce using rule 24 (statute -> condition .)
    PENON           reduce using rule 24 (statute -> condition .)
    PENOFF          reduce using rule 24 (statute -> condition .)
    RBRACE          reduce using rule 24 (statute -> condition .)
    VAR             reduce using rule 24 (statute -> condition .)


state 36

    (25) statute -> triangle .

    ID              reduce using rule 25 (statute -> triangle .)
    IF              reduce using rule 25 (statute -> triangle .)
    TRIANGLE        reduce using rule 25 (statute -> triangle .)
    RECTANGLE       reduce using rule 25 (statute -> triangle .)
    SQUARE          reduce using rule 25 (statute -> triangle .)
    CIRCLE          reduce using rule 25 (statute -> triangle .)
    POLIGON         reduce using rule 25 (statute -> triangle .)
    COLOR           reduce using rule 25 (statute -> triangle .)
    PENSIZE         reduce using rule 25 (statute -> triangle .)
    PENFORWARD      reduce using rule 25 (statute -> triangle .)
    PENBACK         reduce using rule 25 (statute -> triangle .)
    ROTATE          reduce using rule 25 (statute -> triangle .)
    WHILE           reduce using rule 25 (statute -> triangle .)
    RETURN          reduce using rule 25 (statute -> triangle .)
    PENON           reduce using rule 25 (statute -> triangle .)
    PENOFF          reduce using rule 25 (statute -> triangle .)
    RBRACE          reduce using rule 25 (statute -> triangle .)
    VAR             reduce using rule 25 (statute -> triangle .)


state 37

    (26) statute -> rectangle .

    ID              reduce using rule 26 (statute -> rectangle .)
    IF              reduce using rule 26 (statute -> rectangle .)
    TRIANGLE        reduce using rule 26 (statute -> rectangle .)
    RECTANGLE       reduce using rule 26 (statute -> rectangle .)
    SQUARE          reduce using rule 26 (statute -> rectangle .)
    CIRCLE          reduce using rule 26 (statute -> rectangle .)
    POLIGON         reduce using rule 26 (statute -> rectangle .)
    COLOR           reduce using rule 26 (statute -> rectangle .)
    PENSIZE         reduce using rule 26 (statute -> rectangle .)
    PENFORWARD      reduce using rule 26 (statute -> rectangle .)
    PENBACK         reduce using rule 26 (statute -> rectangle .)
    ROTATE          reduce using rule 26 (statute -> rectangle .)
    WHILE           reduce using rule 26 (statute -> rectangle .)
    RETURN          reduce using rule 26 (statute -> rectangle .)
    PENON           reduce using rule 26 (statute -> rectangle .)
    PENOFF          reduce using rule 26 (statute -> rectangle .)
    RBRACE          reduce using rule 26 (statute -> rectangle .)
    VAR             reduce using rule 26 (statute -> rectangle .)


state 38

    (27) statute -> square .

    ID              reduce using rule 27 (statute -> square .)
    IF              reduce using rule 27 (statute -> square .)
    TRIANGLE        reduce using rule 27 (statute -> square .)
    RECTANGLE       reduce using rule 27 (statute -> square .)
    SQUARE          reduce using rule 27 (statute -> square .)
    CIRCLE          reduce using rule 27 (statute -> square .)
    POLIGON         reduce using rule 27 (statute -> square .)
    COLOR           reduce using rule 27 (statute -> square .)
    PENSIZE         reduce using rule 27 (statute -> square .)
    PENFORWARD      reduce using rule 27 (statute -> square .)
    PENBACK         reduce using rule 27 (statute -> square .)
    ROTATE          reduce using rule 27 (statute -> square .)
    WHILE           reduce using rule 27 (statute -> square .)
    RETURN          reduce using rule 27 (statute -> square .)
    PENON           reduce using rule 27 (statute -> square .)
    PENOFF          reduce using rule 27 (statute -> square .)
    RBRACE          reduce using rule 27 (statute -> square .)
    VAR             reduce using rule 27 (statute -> square .)


state 39

    (28) statute -> circle .

    ID              reduce using rule 28 (statute -> circle .)
    IF              reduce using rule 28 (statute -> circle .)
    TRIANGLE        reduce using rule 28 (statute -> circle .)
    RECTANGLE       reduce using rule 28 (statute -> circle .)
    SQUARE          reduce using rule 28 (statute -> circle .)
    CIRCLE          reduce using rule 28 (statute -> circle .)
    POLIGON         reduce using rule 28 (statute -> circle .)
    COLOR           reduce using rule 28 (statute -> circle .)
    PENSIZE         reduce using rule 28 (statute -> circle .)
    PENFORWARD      reduce using rule 28 (statute -> circle .)
    PENBACK         reduce using rule 28 (statute -> circle .)
    ROTATE          reduce using rule 28 (statute -> circle .)
    WHILE           reduce using rule 28 (statute -> circle .)
    RETURN          reduce using rule 28 (statute -> circle .)
    PENON           reduce using rule 28 (statute -> circle .)
    PENOFF          reduce using rule 28 (statute -> circle .)
    RBRACE          reduce using rule 28 (statute -> circle .)
    VAR             reduce using rule 28 (statute -> circle .)


state 40

    (29) statute -> poligon .

    ID              reduce using rule 29 (statute -> poligon .)
    IF              reduce using rule 29 (statute -> poligon .)
    TRIANGLE        reduce using rule 29 (statute -> poligon .)
    RECTANGLE       reduce using rule 29 (statute -> poligon .)
    SQUARE          reduce using rule 29 (statute -> poligon .)
    CIRCLE          reduce using rule 29 (statute -> poligon .)
    POLIGON         reduce using rule 29 (statute -> poligon .)
    COLOR           reduce using rule 29 (statute -> poligon .)
    PENSIZE         reduce using rule 29 (statute -> poligon .)
    PENFORWARD      reduce using rule 29 (statute -> poligon .)
    PENBACK         reduce using rule 29 (statute -> poligon .)
    ROTATE          reduce using rule 29 (statute -> poligon .)
    WHILE           reduce using rule 29 (statute -> poligon .)
    RETURN          reduce using rule 29 (statute -> poligon .)
    PENON           reduce using rule 29 (statute -> poligon .)
    PENOFF          reduce using rule 29 (statute -> poligon .)
    RBRACE          reduce using rule 29 (statute -> poligon .)
    VAR             reduce using rule 29 (statute -> poligon .)


state 41

    (30) statute -> color .

    ID              reduce using rule 30 (statute -> color .)
    IF              reduce using rule 30 (statute -> color .)
    TRIANGLE        reduce using rule 30 (statute -> color .)
    RECTANGLE       reduce using rule 30 (statute -> color .)
    SQUARE          reduce using rule 30 (statute -> color .)
    CIRCLE          reduce using rule 30 (statute -> color .)
    POLIGON         reduce using rule 30 (statute -> color .)
    COLOR           reduce using rule 30 (statute -> color .)
    PENSIZE         reduce using rule 30 (statute -> color .)
    PENFORWARD      reduce using rule 30 (statute -> color .)
    PENBACK         reduce using rule 30 (statute -> color .)
    ROTATE          reduce using rule 30 (statute -> color .)
    WHILE           reduce using rule 30 (statute -> color .)
    RETURN          reduce using rule 30 (statute -> color .)
    PENON           reduce using rule 30 (statute -> color .)
    PENOFF          reduce using rule 30 (statute -> color .)
    RBRACE          reduce using rule 30 (statute -> color .)
    VAR             reduce using rule 30 (statute -> color .)


state 42

    (31) statute -> pensize .

    ID              reduce using rule 31 (statute -> pensize .)
    IF              reduce using rule 31 (statute -> pensize .)
    TRIANGLE        reduce using rule 31 (statute -> pensize .)
    RECTANGLE       reduce using rule 31 (statute -> pensize .)
    SQUARE          reduce using rule 31 (statute -> pensize .)
    CIRCLE          reduce using rule 31 (statute -> pensize .)
    POLIGON         reduce using rule 31 (statute -> pensize .)
    COLOR           reduce using rule 31 (statute -> pensize .)
    PENSIZE         reduce using rule 31 (statute -> pensize .)
    PENFORWARD      reduce using rule 31 (statute -> pensize .)
    PENBACK         reduce using rule 31 (statute -> pensize .)
    ROTATE          reduce using rule 31 (statute -> pensize .)
    WHILE           reduce using rule 31 (statute -> pensize .)
    RETURN          reduce using rule 31 (statute -> pensize .)
    PENON           reduce using rule 31 (statute -> pensize .)
    PENOFF          reduce using rule 31 (statute -> pensize .)
    RBRACE          reduce using rule 31 (statute -> pensize .)
    VAR             reduce using rule 31 (statute -> pensize .)


state 43

    (32) statute -> penforward .

    ID              reduce using rule 32 (statute -> penforward .)
    IF              reduce using rule 32 (statute -> penforward .)
    TRIANGLE        reduce using rule 32 (statute -> penforward .)
    RECTANGLE       reduce using rule 32 (statute -> penforward .)
    SQUARE          reduce using rule 32 (statute -> penforward .)
    CIRCLE          reduce using rule 32 (statute -> penforward .)
    POLIGON         reduce using rule 32 (statute -> penforward .)
    COLOR           reduce using rule 32 (statute -> penforward .)
    PENSIZE         reduce using rule 32 (statute -> penforward .)
    PENFORWARD      reduce using rule 32 (statute -> penforward .)
    PENBACK         reduce using rule 32 (statute -> penforward .)
    ROTATE          reduce using rule 32 (statute -> penforward .)
    WHILE           reduce using rule 32 (statute -> penforward .)
    RETURN          reduce using rule 32 (statute -> penforward .)
    PENON           reduce using rule 32 (statute -> penforward .)
    PENOFF          reduce using rule 32 (statute -> penforward .)
    RBRACE          reduce using rule 32 (statute -> penforward .)
    VAR             reduce using rule 32 (statute -> penforward .)


state 44

    (33) statute -> penback .

    ID              reduce using rule 33 (statute -> penback .)
    IF              reduce using rule 33 (statute -> penback .)
    TRIANGLE        reduce using rule 33 (statute -> penback .)
    RECTANGLE       reduce using rule 33 (statute -> penback .)
    SQUARE          reduce using rule 33 (statute -> penback .)
    CIRCLE          reduce using rule 33 (statute -> penback .)
    POLIGON         reduce using rule 33 (statute -> penback .)
    COLOR           reduce using rule 33 (statute -> penback .)
    PENSIZE         reduce using rule 33 (statute -> penback .)
    PENFORWARD      reduce using rule 33 (statute -> penback .)
    PENBACK         reduce using rule 33 (statute -> penback .)
    ROTATE          reduce using rule 33 (statute -> penback .)
    WHILE           reduce using rule 33 (statute -> penback .)
    RETURN          reduce using rule 33 (statute -> penback .)
    PENON           reduce using rule 33 (statute -> penback .)
    PENOFF          reduce using rule 33 (statute -> penback .)
    RBRACE          reduce using rule 33 (statute -> penback .)
    VAR             reduce using rule 33 (statute -> penback .)


state 45

    (34) statute -> rotate .

    ID              reduce using rule 34 (statute -> rotate .)
    IF              reduce using rule 34 (statute -> rotate .)
    TRIANGLE        reduce using rule 34 (statute -> rotate .)
    RECTANGLE       reduce using rule 34 (statute -> rotate .)
    SQUARE          reduce using rule 34 (statute -> rotate .)
    CIRCLE          reduce using rule 34 (statute -> rotate .)
    POLIGON         reduce using rule 34 (statute -> rotate .)
    COLOR           reduce using rule 34 (statute -> rotate .)
    PENSIZE         reduce using rule 34 (statute -> rotate .)
    PENFORWARD      reduce using rule 34 (statute -> rotate .)
    PENBACK         reduce using rule 34 (statute -> rotate .)
    ROTATE          reduce using rule 34 (statute -> rotate .)
    WHILE           reduce using rule 34 (statute -> rotate .)
    RETURN          reduce using rule 34 (statute -> rotate .)
    PENON           reduce using rule 34 (statute -> rotate .)
    PENOFF          reduce using rule 34 (statute -> rotate .)
    RBRACE          reduce using rule 34 (statute -> rotate .)
    VAR             reduce using rule 34 (statute -> rotate .)


state 46

    (35) statute -> while .

    ID              reduce using rule 35 (statute -> while .)
    IF              reduce using rule 35 (statute -> while .)
    TRIANGLE        reduce using rule 35 (statute -> while .)
    RECTANGLE       reduce using rule 35 (statute -> while .)
    SQUARE          reduce using rule 35 (statute -> while .)
    CIRCLE          reduce using rule 35 (statute -> while .)
    POLIGON         reduce using rule 35 (statute -> while .)
    COLOR           reduce using rule 35 (statute -> while .)
    PENSIZE         reduce using rule 35 (statute -> while .)
    PENFORWARD      reduce using rule 35 (statute -> while .)
    PENBACK         reduce using rule 35 (statute -> while .)
    ROTATE          reduce using rule 35 (statute -> while .)
    WHILE           reduce using rule 35 (statute -> while .)
    RETURN          reduce using rule 35 (statute -> while .)
    PENON           reduce using rule 35 (statute -> while .)
    PENOFF          reduce using rule 35 (statute -> while .)
    RBRACE          reduce using rule 35 (statute -> while .)
    VAR             reduce using rule 35 (statute -> while .)


state 47

    (36) statute -> return .

    ID              reduce using rule 36 (statute -> return .)
    IF              reduce using rule 36 (statute -> return .)
    TRIANGLE        reduce using rule 36 (statute -> return .)
    RECTANGLE       reduce using rule 36 (statute -> return .)
    SQUARE          reduce using rule 36 (statute -> return .)
    CIRCLE          reduce using rule 36 (statute -> return .)
    POLIGON         reduce using rule 36 (statute -> return .)
    COLOR           reduce using rule 36 (statute -> return .)
    PENSIZE         reduce using rule 36 (statute -> return .)
    PENFORWARD      reduce using rule 36 (statute -> return .)
    PENBACK         reduce using rule 36 (statute -> return .)
    ROTATE          reduce using rule 36 (statute -> return .)
    WHILE           reduce using rule 36 (statute -> return .)
    RETURN          reduce using rule 36 (statute -> return .)
    PENON           reduce using rule 36 (statute -> return .)
    PENOFF          reduce using rule 36 (statute -> return .)
    RBRACE          reduce using rule 36 (statute -> return .)
    VAR             reduce using rule 36 (statute -> return .)


state 48

    (37) statute -> penon .

    ID              reduce using rule 37 (statute -> penon .)
    IF              reduce using rule 37 (statute -> penon .)
    TRIANGLE        reduce using rule 37 (statute -> penon .)
    RECTANGLE       reduce using rule 37 (statute -> penon .)
    SQUARE          reduce using rule 37 (statute -> penon .)
    CIRCLE          reduce using rule 37 (statute -> penon .)
    POLIGON         reduce using rule 37 (statute -> penon .)
    COLOR           reduce using rule 37 (statute -> penon .)
    PENSIZE         reduce using rule 37 (statute -> penon .)
    PENFORWARD      reduce using rule 37 (statute -> penon .)
    PENBACK         reduce using rule 37 (statute -> penon .)
    ROTATE          reduce using rule 37 (statute -> penon .)
    WHILE           reduce using rule 37 (statute -> penon .)
    RETURN          reduce using rule 37 (statute -> penon .)
    PENON           reduce using rule 37 (statute -> penon .)
    PENOFF          reduce using rule 37 (statute -> penon .)
    RBRACE          reduce using rule 37 (statute -> penon .)
    VAR             reduce using rule 37 (statute -> penon .)


state 49

    (38) statute -> penoff .

    ID              reduce using rule 38 (statute -> penoff .)
    IF              reduce using rule 38 (statute -> penoff .)
    TRIANGLE        reduce using rule 38 (statute -> penoff .)
    RECTANGLE       reduce using rule 38 (statute -> penoff .)
    SQUARE          reduce using rule 38 (statute -> penoff .)
    CIRCLE          reduce using rule 38 (statute -> penoff .)
    POLIGON         reduce using rule 38 (statute -> penoff .)
    COLOR           reduce using rule 38 (statute -> penoff .)
    PENSIZE         reduce using rule 38 (statute -> penoff .)
    PENFORWARD      reduce using rule 38 (statute -> penoff .)
    PENBACK         reduce using rule 38 (statute -> penoff .)
    ROTATE          reduce using rule 38 (statute -> penoff .)
    WHILE           reduce using rule 38 (statute -> penoff .)
    RETURN          reduce using rule 38 (statute -> penoff .)
    PENON           reduce using rule 38 (statute -> penoff .)
    PENOFF          reduce using rule 38 (statute -> penoff .)
    RBRACE          reduce using rule 38 (statute -> penoff .)
    VAR             reduce using rule 38 (statute -> penoff .)


state 50

    (40) assignment -> ID . cte_id ASSIGN expression SEMICOLON
    (41) assignment -> ID . cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (42) cte_id -> .

    LPAREN          shift and go to state 71
    ASSIGN          reduce using rule 42 (cte_id -> .)
    LBRACKET        reduce using rule 42 (cte_id -> .)

    cte_id                         shift and go to state 70

state 51

    (85) condition -> IF . LPAREN expression RPAREN LBRACE b2 RBRACE condition1

    LPAREN          shift and go to state 72


state 52

    (63) triangle -> TRIANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 73


state 53

    (64) rectangle -> RECTANGLE . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 74


state 54

    (62) square -> SQUARE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 75


state 55

    (61) circle -> CIRCLE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 76


state 56

    (65) poligon -> POLIGON . LPAREN exp COMMA exp RPAREN SEMICOLON

    LPAREN          shift and go to state 77


state 57

    (60) color -> COLOR . LPAREN color_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 58

    (68) pensize -> PENSIZE . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 79


state 59

    (69) penforward -> PENFORWARD . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 80


state 60

    (70) penback -> PENBACK . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 81


state 61

    (66) rotate -> ROTATE . LPAREN exp RPAREN SEMICOLON
    (67) rotate -> ROTATE . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 82


state 62

    (39) while -> WHILE . LPAREN expression RPAREN LBRACE b2 RBRACE

    LPAREN          shift and go to state 83


state 63

    (118) return -> RETURN . var_cte SEMICOLON
    (119) return -> RETURN . st_cte SEMICOLON
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (49) st_cte -> . STRING
    (50) st_cte -> . cte_bool
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 86
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    STRING          shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    var_cte                        shift and go to state 84
    st_cte                         shift and go to state 85
    cte_bool                       shift and go to state 89
    call                           shift and go to state 90

state 64

    (71) penon -> PENON . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 94


state 65

    (72) penoff -> PENOFF . LPAREN RPAREN SEMICOLON

    LPAREN          shift and go to state 95


state 66

    (51) funcs -> FUNC type ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20

    type                           shift and go to state 96

state 67

    (52) funcs -> FUNC VOID ID LPAREN . type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20

    type                           shift and go to state 97

state 68

    (13) vars2 -> vars2 type save_type . vars3 SEMICOLON
    (15) vars3 -> . ID ASSIGN expression vars4
    (16) vars3 -> . ID list vars4
    (17) vars3 -> . ID vars4

    ID              shift and go to state 99

    vars3                          shift and go to state 98

state 69

    (7) b1 -> vars local_vars b2 .
    (10) b2 -> b2 . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          reduce using rule 7 (b1 -> vars local_vars b2 .)
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 32
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 70

    (40) assignment -> ID cte_id . ASSIGN expression SEMICOLON
    (41) assignment -> ID cte_id . LBRACKET exp RBRACKET ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 100
    LBRACKET        shift and go to state 101


state 71

    (114) call -> ID LPAREN . call1 RPAREN SEMICOLON
    (115) call1 -> . ID COMMA call1
    (116) call1 -> . exp
    (117) call1 -> . st_cte
    (98) exp -> . term top_exp exp1
    (49) st_cte -> . STRING
    (50) st_cte -> . cte_bool
    (110) term -> . factor term1
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 102
    STRING          shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LPAREN          shift and go to state 103
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88

    call1                          shift and go to state 104
    exp                            shift and go to state 105
    st_cte                         shift and go to state 106
    term                           shift and go to state 107
    cte_bool                       shift and go to state 108
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    call                           shift and go to state 90

state 72

    (85) condition -> IF LPAREN . expression RPAREN LBRACE b2 RBRACE condition1
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    expression                     shift and go to state 111
    exp                            shift and go to state 112
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 73

    (63) triangle -> TRIANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 115
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 74

    (64) rectangle -> RECTANGLE LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 116
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 75

    (62) square -> SQUARE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 117
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 76

    (61) circle -> CIRCLE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 118
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 77

    (65) poligon -> POLIGON LPAREN . exp COMMA exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 119
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 78

    (60) color -> COLOR LPAREN . color_cte RPAREN SEMICOLON
    (43) color_cte -> . RED
    (44) color_cte -> . BLUE
    (45) color_cte -> . YELLOW
    (46) color_cte -> . GREEN
    (47) color_cte -> . PINK
    (48) color_cte -> . PURPLE

    RED             shift and go to state 121
    BLUE            shift and go to state 122
    YELLOW          shift and go to state 123
    GREEN           shift and go to state 124
    PINK            shift and go to state 125
    PURPLE          shift and go to state 126

    color_cte                      shift and go to state 120

state 79

    (68) pensize -> PENSIZE LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 127
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 80

    (69) penforward -> PENFORWARD LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 128
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 81

    (70) penback -> PENBACK LPAREN . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 129
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 82

    (66) rotate -> ROTATE LPAREN . exp RPAREN SEMICOLON
    (67) rotate -> ROTATE LPAREN . CTE_STRING RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    CTE_STRING      shift and go to state 131
    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 130
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 83

    (39) while -> WHILE LPAREN . expression RPAREN LBRACE b2 RBRACE
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    expression                     shift and go to state 132
    exp                            shift and go to state 112
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 84

    (118) return -> RETURN var_cte . SEMICOLON

    SEMICOLON       shift and go to state 133


state 85

    (119) return -> RETURN st_cte . SEMICOLON

    SEMICOLON       shift and go to state 134


state 86

    (77) var_cte -> ID .
    (81) var_cte -> ID . list
    (114) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (21) list -> . LIST

    SEMICOLON       reduce using rule 77 (var_cte -> ID .)
    LPAREN          shift and go to state 71
    LIST            shift and go to state 136

    list                           shift and go to state 135

state 87

    (78) var_cte -> CTE_INT .

    SEMICOLON       reduce using rule 78 (var_cte -> CTE_INT .)
    DIVIDE          reduce using rule 78 (var_cte -> CTE_INT .)
    TIMES           reduce using rule 78 (var_cte -> CTE_INT .)
    MINUS           reduce using rule 78 (var_cte -> CTE_INT .)
    PLUS            reduce using rule 78 (var_cte -> CTE_INT .)
    RPAREN          reduce using rule 78 (var_cte -> CTE_INT .)
    LESSER          reduce using rule 78 (var_cte -> CTE_INT .)
    GREATER         reduce using rule 78 (var_cte -> CTE_INT .)
    EQUAL           reduce using rule 78 (var_cte -> CTE_INT .)
    NOTEQUAL        reduce using rule 78 (var_cte -> CTE_INT .)
    GREATEROREQUAL  reduce using rule 78 (var_cte -> CTE_INT .)
    LESSEROREQUAL   reduce using rule 78 (var_cte -> CTE_INT .)
    COMMA           reduce using rule 78 (var_cte -> CTE_INT .)
    RBRACKET        reduce using rule 78 (var_cte -> CTE_INT .)


state 88

    (79) var_cte -> CTE_FLOAT .

    SEMICOLON       reduce using rule 79 (var_cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 79 (var_cte -> CTE_FLOAT .)
    TIMES           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    MINUS           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    PLUS            reduce using rule 79 (var_cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 79 (var_cte -> CTE_FLOAT .)
    LESSER          reduce using rule 79 (var_cte -> CTE_FLOAT .)
    GREATER         reduce using rule 79 (var_cte -> CTE_FLOAT .)
    EQUAL           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    NOTEQUAL        reduce using rule 79 (var_cte -> CTE_FLOAT .)
    GREATEROREQUAL  reduce using rule 79 (var_cte -> CTE_FLOAT .)
    LESSEROREQUAL   reduce using rule 79 (var_cte -> CTE_FLOAT .)
    COMMA           reduce using rule 79 (var_cte -> CTE_FLOAT .)
    RBRACKET        reduce using rule 79 (var_cte -> CTE_FLOAT .)


state 89

    (80) var_cte -> cte_bool .
    (50) st_cte -> cte_bool .

  ! reduce/reduce conflict for SEMICOLON resolved using rule 50 (st_cte -> cte_bool .)
    SEMICOLON       reduce using rule 50 (st_cte -> cte_bool .)

  ! SEMICOLON       [ reduce using rule 80 (var_cte -> cte_bool .) ]


state 90

    (82) var_cte -> call .

    SEMICOLON       reduce using rule 82 (var_cte -> call .)
    DIVIDE          reduce using rule 82 (var_cte -> call .)
    TIMES           reduce using rule 82 (var_cte -> call .)
    MINUS           reduce using rule 82 (var_cte -> call .)
    PLUS            reduce using rule 82 (var_cte -> call .)
    RPAREN          reduce using rule 82 (var_cte -> call .)
    LESSER          reduce using rule 82 (var_cte -> call .)
    GREATER         reduce using rule 82 (var_cte -> call .)
    EQUAL           reduce using rule 82 (var_cte -> call .)
    NOTEQUAL        reduce using rule 82 (var_cte -> call .)
    GREATEROREQUAL  reduce using rule 82 (var_cte -> call .)
    LESSEROREQUAL   reduce using rule 82 (var_cte -> call .)
    COMMA           reduce using rule 82 (var_cte -> call .)
    RBRACKET        reduce using rule 82 (var_cte -> call .)


state 91

    (49) st_cte -> STRING .

    SEMICOLON       reduce using rule 49 (st_cte -> STRING .)
    RPAREN          reduce using rule 49 (st_cte -> STRING .)


state 92

    (83) cte_bool -> TRUE .

    SEMICOLON       reduce using rule 83 (cte_bool -> TRUE .)
    RPAREN          reduce using rule 83 (cte_bool -> TRUE .)
    DIVIDE          reduce using rule 83 (cte_bool -> TRUE .)
    TIMES           reduce using rule 83 (cte_bool -> TRUE .)
    MINUS           reduce using rule 83 (cte_bool -> TRUE .)
    PLUS            reduce using rule 83 (cte_bool -> TRUE .)
    LESSER          reduce using rule 83 (cte_bool -> TRUE .)
    GREATER         reduce using rule 83 (cte_bool -> TRUE .)
    EQUAL           reduce using rule 83 (cte_bool -> TRUE .)
    NOTEQUAL        reduce using rule 83 (cte_bool -> TRUE .)
    GREATEROREQUAL  reduce using rule 83 (cte_bool -> TRUE .)
    LESSEROREQUAL   reduce using rule 83 (cte_bool -> TRUE .)
    COMMA           reduce using rule 83 (cte_bool -> TRUE .)
    RBRACKET        reduce using rule 83 (cte_bool -> TRUE .)


state 93

    (84) cte_bool -> FALSE .

    SEMICOLON       reduce using rule 84 (cte_bool -> FALSE .)
    RPAREN          reduce using rule 84 (cte_bool -> FALSE .)
    DIVIDE          reduce using rule 84 (cte_bool -> FALSE .)
    TIMES           reduce using rule 84 (cte_bool -> FALSE .)
    MINUS           reduce using rule 84 (cte_bool -> FALSE .)
    PLUS            reduce using rule 84 (cte_bool -> FALSE .)
    LESSER          reduce using rule 84 (cte_bool -> FALSE .)
    GREATER         reduce using rule 84 (cte_bool -> FALSE .)
    EQUAL           reduce using rule 84 (cte_bool -> FALSE .)
    NOTEQUAL        reduce using rule 84 (cte_bool -> FALSE .)
    GREATEROREQUAL  reduce using rule 84 (cte_bool -> FALSE .)
    LESSEROREQUAL   reduce using rule 84 (cte_bool -> FALSE .)
    COMMA           reduce using rule 84 (cte_bool -> FALSE .)
    RBRACKET        reduce using rule 84 (cte_bool -> FALSE .)


state 94

    (71) penon -> PENON LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 137


state 95

    (72) penoff -> PENOFF LPAREN . RPAREN SEMICOLON

    RPAREN          shift and go to state 138


state 96

    (51) funcs -> FUNC type ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 139


state 97

    (52) funcs -> FUNC VOID ID LPAREN type . ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3

    ID              shift and go to state 140


state 98

    (13) vars2 -> vars2 type save_type vars3 . SEMICOLON

    SEMICOLON       shift and go to state 141


state 99

    (15) vars3 -> ID . ASSIGN expression vars4
    (16) vars3 -> ID . list vars4
    (17) vars3 -> ID . vars4
    (21) list -> . LIST
    (18) vars4 -> . vars4 COMMA ID
    (19) vars4 -> . empty
    (120) empty -> .

    ASSIGN          shift and go to state 142
    LIST            shift and go to state 136
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)

    vars4                          shift and go to state 143
    list                           shift and go to state 144
    empty                          shift and go to state 145

state 100

    (40) assignment -> ID cte_id ASSIGN . expression SEMICOLON
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    expression                     shift and go to state 146
    exp                            shift and go to state 112
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 101

    (41) assignment -> ID cte_id LBRACKET . exp RBRACKET ASSIGN expression SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 147
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 102

    (115) call1 -> ID . COMMA call1
    (107) factor -> ID . push_id
    (77) var_cte -> ID .
    (81) var_cte -> ID . list
    (114) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (109) push_id -> .
    (21) list -> . LIST

  ! reduce/reduce conflict for DIVIDE resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 77 (var_cte -> ID .)
    COMMA           shift and go to state 148
    DIVIDE          reduce using rule 77 (var_cte -> ID .)
    TIMES           reduce using rule 77 (var_cte -> ID .)
    MINUS           reduce using rule 77 (var_cte -> ID .)
    PLUS            reduce using rule 77 (var_cte -> ID .)
    RPAREN          reduce using rule 77 (var_cte -> ID .)
    LPAREN          shift and go to state 71
    LIST            shift and go to state 136

  ! DIVIDE          [ reduce using rule 109 (push_id -> .) ]
  ! TIMES           [ reduce using rule 109 (push_id -> .) ]
  ! MINUS           [ reduce using rule 109 (push_id -> .) ]
  ! PLUS            [ reduce using rule 109 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 109 (push_id -> .) ]

    push_id                        shift and go to state 149
    list                           shift and go to state 135

state 103

    (105) factor -> LPAREN . false_bottom expression RPAREN
    (108) false_bottom -> .

    LPAREN          reduce using rule 108 (false_bottom -> .)
    ID              reduce using rule 108 (false_bottom -> .)
    CTE_INT         reduce using rule 108 (false_bottom -> .)
    CTE_FLOAT       reduce using rule 108 (false_bottom -> .)
    TRUE            reduce using rule 108 (false_bottom -> .)
    FALSE           reduce using rule 108 (false_bottom -> .)

    false_bottom                   shift and go to state 150

state 104

    (114) call -> ID LPAREN call1 . RPAREN SEMICOLON

    RPAREN          shift and go to state 151


state 105

    (116) call1 -> exp .

    RPAREN          reduce using rule 116 (call1 -> exp .)


state 106

    (117) call1 -> st_cte .

    RPAREN          reduce using rule 117 (call1 -> st_cte .)


state 107

    (98) exp -> term . top_exp exp1
    (102) top_exp -> .

    MINUS           reduce using rule 102 (top_exp -> .)
    PLUS            reduce using rule 102 (top_exp -> .)
    RPAREN          reduce using rule 102 (top_exp -> .)
    LESSER          reduce using rule 102 (top_exp -> .)
    GREATER         reduce using rule 102 (top_exp -> .)
    EQUAL           reduce using rule 102 (top_exp -> .)
    NOTEQUAL        reduce using rule 102 (top_exp -> .)
    GREATEROREQUAL  reduce using rule 102 (top_exp -> .)
    LESSEROREQUAL   reduce using rule 102 (top_exp -> .)
    COMMA           reduce using rule 102 (top_exp -> .)
    SEMICOLON       reduce using rule 102 (top_exp -> .)
    RBRACKET        reduce using rule 102 (top_exp -> .)

    top_exp                        shift and go to state 152

state 108

    (50) st_cte -> cte_bool .
    (80) var_cte -> cte_bool .

  ! reduce/reduce conflict for RPAREN resolved using rule 50 (st_cte -> cte_bool .)
    RPAREN          reduce using rule 50 (st_cte -> cte_bool .)
    DIVIDE          reduce using rule 80 (var_cte -> cte_bool .)
    TIMES           reduce using rule 80 (var_cte -> cte_bool .)
    MINUS           reduce using rule 80 (var_cte -> cte_bool .)
    PLUS            reduce using rule 80 (var_cte -> cte_bool .)

  ! RPAREN          [ reduce using rule 80 (var_cte -> cte_bool .) ]


state 109

    (110) term -> factor . term1
    (111) term1 -> . DIVIDE push_sign term
    (112) term1 -> . TIMES push_sign term
    (113) term1 -> . empty
    (120) empty -> .

    DIVIDE          shift and go to state 154
    TIMES           shift and go to state 155
    MINUS           reduce using rule 120 (empty -> .)
    PLUS            reduce using rule 120 (empty -> .)
    RPAREN          reduce using rule 120 (empty -> .)
    LESSER          reduce using rule 120 (empty -> .)
    GREATER         reduce using rule 120 (empty -> .)
    EQUAL           reduce using rule 120 (empty -> .)
    NOTEQUAL        reduce using rule 120 (empty -> .)
    GREATEROREQUAL  reduce using rule 120 (empty -> .)
    LESSEROREQUAL   reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)

    term1                          shift and go to state 153
    empty                          shift and go to state 156

state 110

    (106) factor -> var_cte .

    DIVIDE          reduce using rule 106 (factor -> var_cte .)
    TIMES           reduce using rule 106 (factor -> var_cte .)
    MINUS           reduce using rule 106 (factor -> var_cte .)
    PLUS            reduce using rule 106 (factor -> var_cte .)
    RPAREN          reduce using rule 106 (factor -> var_cte .)
    LESSER          reduce using rule 106 (factor -> var_cte .)
    GREATER         reduce using rule 106 (factor -> var_cte .)
    EQUAL           reduce using rule 106 (factor -> var_cte .)
    NOTEQUAL        reduce using rule 106 (factor -> var_cte .)
    GREATEROREQUAL  reduce using rule 106 (factor -> var_cte .)
    LESSEROREQUAL   reduce using rule 106 (factor -> var_cte .)
    COMMA           reduce using rule 106 (factor -> var_cte .)
    SEMICOLON       reduce using rule 106 (factor -> var_cte .)
    RBRACKET        reduce using rule 106 (factor -> var_cte .)


state 111

    (85) condition -> IF LPAREN expression . RPAREN LBRACE b2 RBRACE condition1

    RPAREN          shift and go to state 157


state 112

    (88) expression -> exp . expression1
    (89) expression1 -> . LESSER relop exp top_relop
    (90) expression1 -> . GREATER relop exp top_relop
    (91) expression1 -> . EQUAL relop exp top_relop
    (92) expression1 -> . NOTEQUAL relop exp top_relop
    (93) expression1 -> . GREATEROREQUAL relop exp top_relop
    (94) expression1 -> . LESSEROREQUAL relop exp top_relop
    (95) expression1 -> . empty
    (120) empty -> .

    LESSER          shift and go to state 159
    GREATER         shift and go to state 160
    EQUAL           shift and go to state 161
    NOTEQUAL        shift and go to state 162
    GREATEROREQUAL  shift and go to state 163
    LESSEROREQUAL   shift and go to state 164
    RPAREN          reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)

    expression1                    shift and go to state 158
    empty                          shift and go to state 165

state 113

    (107) factor -> ID . push_id
    (77) var_cte -> ID .
    (81) var_cte -> ID . list
    (114) call -> ID . LPAREN call1 RPAREN SEMICOLON
    (109) push_id -> .
    (21) list -> . LIST

  ! reduce/reduce conflict for DIVIDE resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for TIMES resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for MINUS resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for PLUS resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for LESSER resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for GREATER resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for EQUAL resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for NOTEQUAL resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for GREATEROREQUAL resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for LESSEROREQUAL resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for RPAREN resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for COMMA resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 77 (var_cte -> ID .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 77 (var_cte -> ID .)
    DIVIDE          reduce using rule 77 (var_cte -> ID .)
    TIMES           reduce using rule 77 (var_cte -> ID .)
    MINUS           reduce using rule 77 (var_cte -> ID .)
    PLUS            reduce using rule 77 (var_cte -> ID .)
    LESSER          reduce using rule 77 (var_cte -> ID .)
    GREATER         reduce using rule 77 (var_cte -> ID .)
    EQUAL           reduce using rule 77 (var_cte -> ID .)
    NOTEQUAL        reduce using rule 77 (var_cte -> ID .)
    GREATEROREQUAL  reduce using rule 77 (var_cte -> ID .)
    LESSEROREQUAL   reduce using rule 77 (var_cte -> ID .)
    RPAREN          reduce using rule 77 (var_cte -> ID .)
    COMMA           reduce using rule 77 (var_cte -> ID .)
    SEMICOLON       reduce using rule 77 (var_cte -> ID .)
    RBRACKET        reduce using rule 77 (var_cte -> ID .)
    LPAREN          shift and go to state 71
    LIST            shift and go to state 136

  ! DIVIDE          [ reduce using rule 109 (push_id -> .) ]
  ! TIMES           [ reduce using rule 109 (push_id -> .) ]
  ! MINUS           [ reduce using rule 109 (push_id -> .) ]
  ! PLUS            [ reduce using rule 109 (push_id -> .) ]
  ! LESSER          [ reduce using rule 109 (push_id -> .) ]
  ! GREATER         [ reduce using rule 109 (push_id -> .) ]
  ! EQUAL           [ reduce using rule 109 (push_id -> .) ]
  ! NOTEQUAL        [ reduce using rule 109 (push_id -> .) ]
  ! GREATEROREQUAL  [ reduce using rule 109 (push_id -> .) ]
  ! LESSEROREQUAL   [ reduce using rule 109 (push_id -> .) ]
  ! RPAREN          [ reduce using rule 109 (push_id -> .) ]
  ! COMMA           [ reduce using rule 109 (push_id -> .) ]
  ! SEMICOLON       [ reduce using rule 109 (push_id -> .) ]
  ! RBRACKET        [ reduce using rule 109 (push_id -> .) ]

    push_id                        shift and go to state 149
    list                           shift and go to state 135

state 114

    (80) var_cte -> cte_bool .

    DIVIDE          reduce using rule 80 (var_cte -> cte_bool .)
    TIMES           reduce using rule 80 (var_cte -> cte_bool .)
    MINUS           reduce using rule 80 (var_cte -> cte_bool .)
    PLUS            reduce using rule 80 (var_cte -> cte_bool .)
    LESSER          reduce using rule 80 (var_cte -> cte_bool .)
    GREATER         reduce using rule 80 (var_cte -> cte_bool .)
    EQUAL           reduce using rule 80 (var_cte -> cte_bool .)
    NOTEQUAL        reduce using rule 80 (var_cte -> cte_bool .)
    GREATEROREQUAL  reduce using rule 80 (var_cte -> cte_bool .)
    LESSEROREQUAL   reduce using rule 80 (var_cte -> cte_bool .)
    RPAREN          reduce using rule 80 (var_cte -> cte_bool .)
    COMMA           reduce using rule 80 (var_cte -> cte_bool .)
    SEMICOLON       reduce using rule 80 (var_cte -> cte_bool .)
    RBRACKET        reduce using rule 80 (var_cte -> cte_bool .)


state 115

    (63) triangle -> TRIANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 166


state 116

    (64) rectangle -> RECTANGLE LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 167


state 117

    (62) square -> SQUARE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 168


state 118

    (61) circle -> CIRCLE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 169


state 119

    (65) poligon -> POLIGON LPAREN exp . COMMA exp RPAREN SEMICOLON

    COMMA           shift and go to state 170


state 120

    (60) color -> COLOR LPAREN color_cte . RPAREN SEMICOLON

    RPAREN          shift and go to state 171


state 121

    (43) color_cte -> RED .

    RPAREN          reduce using rule 43 (color_cte -> RED .)


state 122

    (44) color_cte -> BLUE .

    RPAREN          reduce using rule 44 (color_cte -> BLUE .)


state 123

    (45) color_cte -> YELLOW .

    RPAREN          reduce using rule 45 (color_cte -> YELLOW .)


state 124

    (46) color_cte -> GREEN .

    RPAREN          reduce using rule 46 (color_cte -> GREEN .)


state 125

    (47) color_cte -> PINK .

    RPAREN          reduce using rule 47 (color_cte -> PINK .)


state 126

    (48) color_cte -> PURPLE .

    RPAREN          reduce using rule 48 (color_cte -> PURPLE .)


state 127

    (68) pensize -> PENSIZE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 172


state 128

    (69) penforward -> PENFORWARD LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 173


state 129

    (70) penback -> PENBACK LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 174


state 130

    (66) rotate -> ROTATE LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 175


state 131

    (67) rotate -> ROTATE LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 176


state 132

    (39) while -> WHILE LPAREN expression . RPAREN LBRACE b2 RBRACE

    RPAREN          shift and go to state 177


state 133

    (118) return -> RETURN var_cte SEMICOLON .

    ID              reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    IF              reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    TRIANGLE        reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    RECTANGLE       reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    SQUARE          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    CIRCLE          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    POLIGON         reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    COLOR           reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    PENSIZE         reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    PENFORWARD      reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    PENBACK         reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    ROTATE          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    WHILE           reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    RETURN          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    PENON           reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    PENOFF          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    RBRACE          reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)
    VAR             reduce using rule 118 (return -> RETURN var_cte SEMICOLON .)


state 134

    (119) return -> RETURN st_cte SEMICOLON .

    ID              reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    IF              reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    TRIANGLE        reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    RECTANGLE       reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    SQUARE          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    CIRCLE          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    POLIGON         reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    COLOR           reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    PENSIZE         reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    PENFORWARD      reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    PENBACK         reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    ROTATE          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    WHILE           reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    RETURN          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    PENON           reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    PENOFF          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    RBRACE          reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)
    VAR             reduce using rule 119 (return -> RETURN st_cte SEMICOLON .)


state 135

    (81) var_cte -> ID list .

    SEMICOLON       reduce using rule 81 (var_cte -> ID list .)
    DIVIDE          reduce using rule 81 (var_cte -> ID list .)
    TIMES           reduce using rule 81 (var_cte -> ID list .)
    MINUS           reduce using rule 81 (var_cte -> ID list .)
    PLUS            reduce using rule 81 (var_cte -> ID list .)
    RPAREN          reduce using rule 81 (var_cte -> ID list .)
    LESSER          reduce using rule 81 (var_cte -> ID list .)
    GREATER         reduce using rule 81 (var_cte -> ID list .)
    EQUAL           reduce using rule 81 (var_cte -> ID list .)
    NOTEQUAL        reduce using rule 81 (var_cte -> ID list .)
    GREATEROREQUAL  reduce using rule 81 (var_cte -> ID list .)
    LESSEROREQUAL   reduce using rule 81 (var_cte -> ID list .)
    COMMA           reduce using rule 81 (var_cte -> ID list .)
    RBRACKET        reduce using rule 81 (var_cte -> ID list .)


state 136

    (21) list -> LIST .

    SEMICOLON       reduce using rule 21 (list -> LIST .)
    COMMA           reduce using rule 21 (list -> LIST .)
    DIVIDE          reduce using rule 21 (list -> LIST .)
    TIMES           reduce using rule 21 (list -> LIST .)
    MINUS           reduce using rule 21 (list -> LIST .)
    PLUS            reduce using rule 21 (list -> LIST .)
    RPAREN          reduce using rule 21 (list -> LIST .)
    LESSER          reduce using rule 21 (list -> LIST .)
    GREATER         reduce using rule 21 (list -> LIST .)
    EQUAL           reduce using rule 21 (list -> LIST .)
    NOTEQUAL        reduce using rule 21 (list -> LIST .)
    GREATEROREQUAL  reduce using rule 21 (list -> LIST .)
    LESSEROREQUAL   reduce using rule 21 (list -> LIST .)
    RBRACKET        reduce using rule 21 (list -> LIST .)


state 137

    (71) penon -> PENON LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 138

    (72) penoff -> PENOFF LPAREN RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 139

    (51) funcs -> FUNC type ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (53) funcs1 -> . funcs1 COMMA type ID
    (54) funcs1 -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)

    funcs1                         shift and go to state 180
    empty                          shift and go to state 181

state 140

    (52) funcs -> FUNC VOID ID LPAREN type ID . funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (53) funcs1 -> . funcs1 COMMA type ID
    (54) funcs1 -> . empty
    (120) empty -> .

    RPAREN          reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)

    funcs1                         shift and go to state 182
    empty                          shift and go to state 181

state 141

    (13) vars2 -> vars2 type save_type vars3 SEMICOLON .

    INT             reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    FLOAT           reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    STRING          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    BOOL            reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    DAVINCI         reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    FUNC            reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    VAR             reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    ID              reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    IF              reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    TRIANGLE        reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    RECTANGLE       reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    SQUARE          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    CIRCLE          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    POLIGON         reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    COLOR           reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    PENSIZE         reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    PENFORWARD      reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    PENBACK         reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    ROTATE          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    WHILE           reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    RETURN          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    PENON           reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    PENOFF          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)
    RBRACE          reduce using rule 13 (vars2 -> vars2 type save_type vars3 SEMICOLON .)


state 142

    (15) vars3 -> ID ASSIGN . expression vars4
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    expression                     shift and go to state 183
    exp                            shift and go to state 112
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 143

    (17) vars3 -> ID vars4 .
    (18) vars4 -> vars4 . COMMA ID

    SEMICOLON       reduce using rule 17 (vars3 -> ID vars4 .)
    COMMA           shift and go to state 184


state 144

    (16) vars3 -> ID list . vars4
    (18) vars4 -> . vars4 COMMA ID
    (19) vars4 -> . empty
    (120) empty -> .

    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)

    vars4                          shift and go to state 185
    empty                          shift and go to state 145

state 145

    (19) vars4 -> empty .

    COMMA           reduce using rule 19 (vars4 -> empty .)
    SEMICOLON       reduce using rule 19 (vars4 -> empty .)


state 146

    (40) assignment -> ID cte_id ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 186


state 147

    (41) assignment -> ID cte_id LBRACKET exp . RBRACKET ASSIGN expression SEMICOLON

    RBRACKET        shift and go to state 187


state 148

    (115) call1 -> ID COMMA . call1
    (115) call1 -> . ID COMMA call1
    (116) call1 -> . exp
    (117) call1 -> . st_cte
    (98) exp -> . term top_exp exp1
    (49) st_cte -> . STRING
    (50) st_cte -> . cte_bool
    (110) term -> . factor term1
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    ID              shift and go to state 102
    STRING          shift and go to state 91
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93
    LPAREN          shift and go to state 103
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88

    call1                          shift and go to state 188
    exp                            shift and go to state 105
    st_cte                         shift and go to state 106
    term                           shift and go to state 107
    cte_bool                       shift and go to state 108
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    call                           shift and go to state 90

state 149

    (107) factor -> ID push_id .

    DIVIDE          reduce using rule 107 (factor -> ID push_id .)
    TIMES           reduce using rule 107 (factor -> ID push_id .)
    MINUS           reduce using rule 107 (factor -> ID push_id .)
    PLUS            reduce using rule 107 (factor -> ID push_id .)
    RPAREN          reduce using rule 107 (factor -> ID push_id .)
    LESSER          reduce using rule 107 (factor -> ID push_id .)
    GREATER         reduce using rule 107 (factor -> ID push_id .)
    EQUAL           reduce using rule 107 (factor -> ID push_id .)
    NOTEQUAL        reduce using rule 107 (factor -> ID push_id .)
    GREATEROREQUAL  reduce using rule 107 (factor -> ID push_id .)
    LESSEROREQUAL   reduce using rule 107 (factor -> ID push_id .)
    COMMA           reduce using rule 107 (factor -> ID push_id .)
    SEMICOLON       reduce using rule 107 (factor -> ID push_id .)
    RBRACKET        reduce using rule 107 (factor -> ID push_id .)


state 150

    (105) factor -> LPAREN false_bottom . expression RPAREN
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    expression                     shift and go to state 189
    exp                            shift and go to state 112
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 151

    (114) call -> ID LPAREN call1 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 190


state 152

    (98) exp -> term top_exp . exp1
    (99) exp1 -> . MINUS push_sign exp
    (100) exp1 -> . PLUS push_sign exp
    (101) exp1 -> . empty
    (120) empty -> .

    MINUS           shift and go to state 192
    PLUS            shift and go to state 193
    RPAREN          reduce using rule 120 (empty -> .)
    LESSER          reduce using rule 120 (empty -> .)
    GREATER         reduce using rule 120 (empty -> .)
    EQUAL           reduce using rule 120 (empty -> .)
    NOTEQUAL        reduce using rule 120 (empty -> .)
    GREATEROREQUAL  reduce using rule 120 (empty -> .)
    LESSEROREQUAL   reduce using rule 120 (empty -> .)
    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)
    RBRACKET        reduce using rule 120 (empty -> .)

    exp1                           shift and go to state 191
    empty                          shift and go to state 194

state 153

    (110) term -> factor term1 .

    MINUS           reduce using rule 110 (term -> factor term1 .)
    PLUS            reduce using rule 110 (term -> factor term1 .)
    RPAREN          reduce using rule 110 (term -> factor term1 .)
    LESSER          reduce using rule 110 (term -> factor term1 .)
    GREATER         reduce using rule 110 (term -> factor term1 .)
    EQUAL           reduce using rule 110 (term -> factor term1 .)
    NOTEQUAL        reduce using rule 110 (term -> factor term1 .)
    GREATEROREQUAL  reduce using rule 110 (term -> factor term1 .)
    LESSEROREQUAL   reduce using rule 110 (term -> factor term1 .)
    COMMA           reduce using rule 110 (term -> factor term1 .)
    SEMICOLON       reduce using rule 110 (term -> factor term1 .)
    RBRACKET        reduce using rule 110 (term -> factor term1 .)


state 154

    (111) term1 -> DIVIDE . push_sign term
    (103) push_sign -> .

    LPAREN          reduce using rule 103 (push_sign -> .)
    ID              reduce using rule 103 (push_sign -> .)
    CTE_INT         reduce using rule 103 (push_sign -> .)
    CTE_FLOAT       reduce using rule 103 (push_sign -> .)
    TRUE            reduce using rule 103 (push_sign -> .)
    FALSE           reduce using rule 103 (push_sign -> .)

    push_sign                      shift and go to state 195

state 155

    (112) term1 -> TIMES . push_sign term
    (103) push_sign -> .

    LPAREN          reduce using rule 103 (push_sign -> .)
    ID              reduce using rule 103 (push_sign -> .)
    CTE_INT         reduce using rule 103 (push_sign -> .)
    CTE_FLOAT       reduce using rule 103 (push_sign -> .)
    TRUE            reduce using rule 103 (push_sign -> .)
    FALSE           reduce using rule 103 (push_sign -> .)

    push_sign                      shift and go to state 196

state 156

    (113) term1 -> empty .

    MINUS           reduce using rule 113 (term1 -> empty .)
    PLUS            reduce using rule 113 (term1 -> empty .)
    RPAREN          reduce using rule 113 (term1 -> empty .)
    LESSER          reduce using rule 113 (term1 -> empty .)
    GREATER         reduce using rule 113 (term1 -> empty .)
    EQUAL           reduce using rule 113 (term1 -> empty .)
    NOTEQUAL        reduce using rule 113 (term1 -> empty .)
    GREATEROREQUAL  reduce using rule 113 (term1 -> empty .)
    LESSEROREQUAL   reduce using rule 113 (term1 -> empty .)
    COMMA           reduce using rule 113 (term1 -> empty .)
    SEMICOLON       reduce using rule 113 (term1 -> empty .)
    RBRACKET        reduce using rule 113 (term1 -> empty .)


state 157

    (85) condition -> IF LPAREN expression RPAREN . LBRACE b2 RBRACE condition1

    LBRACE          shift and go to state 197


state 158

    (88) expression -> exp expression1 .

    RPAREN          reduce using rule 88 (expression -> exp expression1 .)
    SEMICOLON       reduce using rule 88 (expression -> exp expression1 .)
    COMMA           reduce using rule 88 (expression -> exp expression1 .)


state 159

    (89) expression1 -> LESSER . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 198

state 160

    (90) expression1 -> GREATER . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 199

state 161

    (91) expression1 -> EQUAL . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 200

state 162

    (92) expression1 -> NOTEQUAL . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 201

state 163

    (93) expression1 -> GREATEROREQUAL . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 202

state 164

    (94) expression1 -> LESSEROREQUAL . relop exp top_relop
    (96) relop -> .

    LPAREN          reduce using rule 96 (relop -> .)
    ID              reduce using rule 96 (relop -> .)
    CTE_INT         reduce using rule 96 (relop -> .)
    CTE_FLOAT       reduce using rule 96 (relop -> .)
    TRUE            reduce using rule 96 (relop -> .)
    FALSE           reduce using rule 96 (relop -> .)

    relop                          shift and go to state 203

state 165

    (95) expression1 -> empty .

    RPAREN          reduce using rule 95 (expression1 -> empty .)
    SEMICOLON       reduce using rule 95 (expression1 -> empty .)
    COMMA           reduce using rule 95 (expression1 -> empty .)


state 166

    (63) triangle -> TRIANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 204
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 167

    (64) rectangle -> RECTANGLE LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 205
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 168

    (62) square -> SQUARE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 206


state 169

    (61) circle -> CIRCLE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 170

    (65) poligon -> POLIGON LPAREN exp COMMA . exp RPAREN SEMICOLON
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 208
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 171

    (60) color -> COLOR LPAREN color_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 209


state 172

    (68) pensize -> PENSIZE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 210


state 173

    (69) penforward -> PENFORWARD LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 211


state 174

    (70) penback -> PENBACK LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 212


state 175

    (66) rotate -> ROTATE LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 213


state 176

    (67) rotate -> ROTATE LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 214


state 177

    (39) while -> WHILE LPAREN expression RPAREN . LBRACE b2 RBRACE

    LBRACE          shift and go to state 215


state 178

    (71) penon -> PENON LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 71 (penon -> PENON LPAREN RPAREN SEMICOLON .)


state 179

    (72) penoff -> PENOFF LPAREN RPAREN SEMICOLON .

    ID              reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    IF              reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    SQUARE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    POLIGON         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    COLOR           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENBACK         reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    ROTATE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    WHILE           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RETURN          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENON           reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    PENOFF          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    RBRACE          reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)
    VAR             reduce using rule 72 (penoff -> PENOFF LPAREN RPAREN SEMICOLON .)


state 180

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (53) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 216
    COMMA           shift and go to state 217


state 181

    (54) funcs1 -> empty .

    RPAREN          reduce using rule 54 (funcs1 -> empty .)
    COMMA           reduce using rule 54 (funcs1 -> empty .)


state 182

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 . RPAREN LBRACE funcs2 RBRACE funcs3
    (53) funcs1 -> funcs1 . COMMA type ID

    RPAREN          shift and go to state 218
    COMMA           shift and go to state 217


state 183

    (15) vars3 -> ID ASSIGN expression . vars4
    (18) vars4 -> . vars4 COMMA ID
    (19) vars4 -> . empty
    (120) empty -> .

    COMMA           reduce using rule 120 (empty -> .)
    SEMICOLON       reduce using rule 120 (empty -> .)

    vars4                          shift and go to state 219
    empty                          shift and go to state 145

state 184

    (18) vars4 -> vars4 COMMA . ID

    ID              shift and go to state 220


state 185

    (16) vars3 -> ID list vars4 .
    (18) vars4 -> vars4 . COMMA ID

    SEMICOLON       reduce using rule 16 (vars3 -> ID list vars4 .)
    COMMA           shift and go to state 184


state 186

    (40) assignment -> ID cte_id ASSIGN expression SEMICOLON .

    ID              reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    IF              reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 40 (assignment -> ID cte_id ASSIGN expression SEMICOLON .)


state 187

    (41) assignment -> ID cte_id LBRACKET exp RBRACKET . ASSIGN expression SEMICOLON

    ASSIGN          shift and go to state 221


state 188

    (115) call1 -> ID COMMA call1 .

    RPAREN          reduce using rule 115 (call1 -> ID COMMA call1 .)


state 189

    (105) factor -> LPAREN false_bottom expression . RPAREN

    RPAREN          shift and go to state 222


state 190

    (114) call -> ID LPAREN call1 RPAREN SEMICOLON .

    ID              reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    IF              reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SQUARE          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    POLIGON         reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COLOR           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENBACK         reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    ROTATE          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    WHILE           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RETURN          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENON           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PENOFF          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACE          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    SEMICOLON       reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    DIVIDE          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    TIMES           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    MINUS           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    PLUS            reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RPAREN          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSER          reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATER         reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    EQUAL           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    NOTEQUAL        reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    GREATEROREQUAL  reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    LESSEROREQUAL   reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    COMMA           reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    RBRACKET        reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)
    VAR             reduce using rule 114 (call -> ID LPAREN call1 RPAREN SEMICOLON .)


state 191

    (98) exp -> term top_exp exp1 .

    RPAREN          reduce using rule 98 (exp -> term top_exp exp1 .)
    LESSER          reduce using rule 98 (exp -> term top_exp exp1 .)
    GREATER         reduce using rule 98 (exp -> term top_exp exp1 .)
    EQUAL           reduce using rule 98 (exp -> term top_exp exp1 .)
    NOTEQUAL        reduce using rule 98 (exp -> term top_exp exp1 .)
    GREATEROREQUAL  reduce using rule 98 (exp -> term top_exp exp1 .)
    LESSEROREQUAL   reduce using rule 98 (exp -> term top_exp exp1 .)
    COMMA           reduce using rule 98 (exp -> term top_exp exp1 .)
    SEMICOLON       reduce using rule 98 (exp -> term top_exp exp1 .)
    RBRACKET        reduce using rule 98 (exp -> term top_exp exp1 .)


state 192

    (99) exp1 -> MINUS . push_sign exp
    (103) push_sign -> .

    LPAREN          reduce using rule 103 (push_sign -> .)
    ID              reduce using rule 103 (push_sign -> .)
    CTE_INT         reduce using rule 103 (push_sign -> .)
    CTE_FLOAT       reduce using rule 103 (push_sign -> .)
    TRUE            reduce using rule 103 (push_sign -> .)
    FALSE           reduce using rule 103 (push_sign -> .)

    push_sign                      shift and go to state 223

state 193

    (100) exp1 -> PLUS . push_sign exp
    (103) push_sign -> .

    LPAREN          reduce using rule 103 (push_sign -> .)
    ID              reduce using rule 103 (push_sign -> .)
    CTE_INT         reduce using rule 103 (push_sign -> .)
    CTE_FLOAT       reduce using rule 103 (push_sign -> .)
    TRUE            reduce using rule 103 (push_sign -> .)
    FALSE           reduce using rule 103 (push_sign -> .)

    push_sign                      shift and go to state 224

state 194

    (101) exp1 -> empty .

    RPAREN          reduce using rule 101 (exp1 -> empty .)
    LESSER          reduce using rule 101 (exp1 -> empty .)
    GREATER         reduce using rule 101 (exp1 -> empty .)
    EQUAL           reduce using rule 101 (exp1 -> empty .)
    NOTEQUAL        reduce using rule 101 (exp1 -> empty .)
    GREATEROREQUAL  reduce using rule 101 (exp1 -> empty .)
    LESSEROREQUAL   reduce using rule 101 (exp1 -> empty .)
    COMMA           reduce using rule 101 (exp1 -> empty .)
    SEMICOLON       reduce using rule 101 (exp1 -> empty .)
    RBRACKET        reduce using rule 101 (exp1 -> empty .)


state 195

    (111) term1 -> DIVIDE push_sign . term
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    term                           shift and go to state 225
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 196

    (112) term1 -> TIMES push_sign . term
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    term                           shift and go to state 226
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 197

    (85) condition -> IF LPAREN expression RPAREN LBRACE . b2 RBRACE condition1
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (120) empty -> .

    RBRACE          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)

    b2                             shift and go to state 227
    empty                          shift and go to state 26

state 198

    (89) expression1 -> LESSER relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 228
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 199

    (90) expression1 -> GREATER relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 229
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 200

    (91) expression1 -> EQUAL relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 230
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 201

    (92) expression1 -> NOTEQUAL relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 231
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 202

    (93) expression1 -> GREATEROREQUAL relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 232
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 203

    (94) expression1 -> LESSEROREQUAL relop . exp top_relop
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 233
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 204

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 234


state 205

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 235


state 206

    (62) square -> SQUARE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 62 (square -> SQUARE LPAREN exp RPAREN SEMICOLON .)


state 207

    (61) circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 61 (circle -> CIRCLE LPAREN exp RPAREN SEMICOLON .)


state 208

    (65) poligon -> POLIGON LPAREN exp COMMA exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 236


state 209

    (60) color -> COLOR LPAREN color_cte RPAREN SEMICOLON .

    ID              reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    IF              reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    SQUARE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    POLIGON         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    COLOR           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENBACK         reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    ROTATE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    WHILE           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RETURN          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENON           reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    PENOFF          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    RBRACE          reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)
    VAR             reduce using rule 60 (color -> COLOR LPAREN color_cte RPAREN SEMICOLON .)


state 210

    (68) pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 68 (pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON .)


state 211

    (69) penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 69 (penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON .)


state 212

    (70) penback -> PENBACK LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 70 (penback -> PENBACK LPAREN exp RPAREN SEMICOLON .)


state 213

    (66) rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .

    ID              reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    IF              reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENON           reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)
    VAR             reduce using rule 66 (rotate -> ROTATE LPAREN exp RPAREN SEMICOLON .)


state 214

    (67) rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .

    ID              reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    IF              reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    SQUARE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    POLIGON         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    COLOR           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENBACK         reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    ROTATE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENON           reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    PENOFF          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    RBRACE          reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)
    VAR             reduce using rule 67 (rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON .)


state 215

    (39) while -> WHILE LPAREN expression RPAREN LBRACE . b2 RBRACE
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (120) empty -> .

    RBRACE          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)

    b2                             shift and go to state 237
    empty                          shift and go to state 26

state 216

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 238


state 217

    (53) funcs1 -> funcs1 COMMA . type ID
    (73) type -> . INT
    (74) type -> . FLOAT
    (75) type -> . STRING
    (76) type -> . BOOL

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20

    type                           shift and go to state 239

state 218

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN . LBRACE funcs2 RBRACE funcs3

    LBRACE          shift and go to state 240


state 219

    (15) vars3 -> ID ASSIGN expression vars4 .
    (18) vars4 -> vars4 . COMMA ID

    SEMICOLON       reduce using rule 15 (vars3 -> ID ASSIGN expression vars4 .)
    COMMA           shift and go to state 184


state 220

    (18) vars4 -> vars4 COMMA ID .

    COMMA           reduce using rule 18 (vars4 -> vars4 COMMA ID .)
    SEMICOLON       reduce using rule 18 (vars4 -> vars4 COMMA ID .)


state 221

    (41) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN . expression SEMICOLON
    (88) expression -> . exp expression1
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 112
    expression                     shift and go to state 241
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 222

    (105) factor -> LPAREN false_bottom expression RPAREN .

    DIVIDE          reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    TIMES           reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    MINUS           reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    PLUS            reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    RPAREN          reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    LESSER          reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    GREATER         reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    EQUAL           reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    NOTEQUAL        reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    GREATEROREQUAL  reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    LESSEROREQUAL   reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    COMMA           reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    SEMICOLON       reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)
    RBRACKET        reduce using rule 105 (factor -> LPAREN false_bottom expression RPAREN .)


state 223

    (99) exp1 -> MINUS push_sign . exp
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 242
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 224

    (100) exp1 -> PLUS push_sign . exp
    (98) exp -> . term top_exp exp1
    (110) term -> . factor term1
    (105) factor -> . LPAREN false_bottom expression RPAREN
    (106) factor -> . var_cte
    (107) factor -> . ID push_id
    (77) var_cte -> . ID
    (78) var_cte -> . CTE_INT
    (79) var_cte -> . CTE_FLOAT
    (80) var_cte -> . cte_bool
    (81) var_cte -> . ID list
    (82) var_cte -> . call
    (83) cte_bool -> . TRUE
    (84) cte_bool -> . FALSE
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON

    LPAREN          shift and go to state 103
    ID              shift and go to state 113
    CTE_INT         shift and go to state 87
    CTE_FLOAT       shift and go to state 88
    TRUE            shift and go to state 92
    FALSE           shift and go to state 93

    exp                            shift and go to state 243
    term                           shift and go to state 107
    factor                         shift and go to state 109
    var_cte                        shift and go to state 110
    cte_bool                       shift and go to state 114
    call                           shift and go to state 90

state 225

    (111) term1 -> DIVIDE push_sign term .

    MINUS           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    PLUS            reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    RPAREN          reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    LESSER          reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    GREATER         reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    EQUAL           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    NOTEQUAL        reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    GREATEROREQUAL  reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    LESSEROREQUAL   reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    COMMA           reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    SEMICOLON       reduce using rule 111 (term1 -> DIVIDE push_sign term .)
    RBRACKET        reduce using rule 111 (term1 -> DIVIDE push_sign term .)


state 226

    (112) term1 -> TIMES push_sign term .

    MINUS           reduce using rule 112 (term1 -> TIMES push_sign term .)
    PLUS            reduce using rule 112 (term1 -> TIMES push_sign term .)
    RPAREN          reduce using rule 112 (term1 -> TIMES push_sign term .)
    LESSER          reduce using rule 112 (term1 -> TIMES push_sign term .)
    GREATER         reduce using rule 112 (term1 -> TIMES push_sign term .)
    EQUAL           reduce using rule 112 (term1 -> TIMES push_sign term .)
    NOTEQUAL        reduce using rule 112 (term1 -> TIMES push_sign term .)
    GREATEROREQUAL  reduce using rule 112 (term1 -> TIMES push_sign term .)
    LESSEROREQUAL   reduce using rule 112 (term1 -> TIMES push_sign term .)
    COMMA           reduce using rule 112 (term1 -> TIMES push_sign term .)
    SEMICOLON       reduce using rule 112 (term1 -> TIMES push_sign term .)
    RBRACKET        reduce using rule 112 (term1 -> TIMES push_sign term .)


state 227

    (85) condition -> IF LPAREN expression RPAREN LBRACE b2 . RBRACE condition1
    (10) b2 -> b2 . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 244
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 32
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 228

    (89) expression1 -> LESSER relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 245

state 229

    (90) expression1 -> GREATER relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 246

state 230

    (91) expression1 -> EQUAL relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 247

state 231

    (92) expression1 -> NOTEQUAL relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 248

state 232

    (93) expression1 -> GREATEROREQUAL relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 249

state 233

    (94) expression1 -> LESSEROREQUAL relop exp . top_relop
    (97) top_relop -> .

    RPAREN          reduce using rule 97 (top_relop -> .)
    SEMICOLON       reduce using rule 97 (top_relop -> .)
    COMMA           reduce using rule 97 (top_relop -> .)

    top_relop                      shift and go to state 250

state 234

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 251


state 235

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 252


state 236

    (65) poligon -> POLIGON LPAREN exp COMMA exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 253


state 237

    (39) while -> WHILE LPAREN expression RPAREN LBRACE b2 . RBRACE
    (10) b2 -> b2 . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 254
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 32
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 238

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (55) funcs2 -> . funcs2 vars
    (56) funcs2 -> . funcs2 statute
    (57) funcs2 -> . empty
    (120) empty -> .

    RBRACE          reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)

    funcs2                         shift and go to state 255
    empty                          shift and go to state 256

state 239

    (53) funcs1 -> funcs1 COMMA type . ID

    ID              shift and go to state 257


state 240

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE . funcs2 RBRACE funcs3
    (55) funcs2 -> . funcs2 vars
    (56) funcs2 -> . funcs2 statute
    (57) funcs2 -> . empty
    (120) empty -> .

    RBRACE          reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)

    funcs2                         shift and go to state 258
    empty                          shift and go to state 256

state 241

    (41) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression . SEMICOLON

    SEMICOLON       shift and go to state 259


state 242

    (99) exp1 -> MINUS push_sign exp .

    RPAREN          reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    LESSER          reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    GREATER         reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    EQUAL           reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    NOTEQUAL        reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    COMMA           reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    SEMICOLON       reduce using rule 99 (exp1 -> MINUS push_sign exp .)
    RBRACKET        reduce using rule 99 (exp1 -> MINUS push_sign exp .)


state 243

    (100) exp1 -> PLUS push_sign exp .

    RPAREN          reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    LESSER          reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    GREATER         reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    EQUAL           reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    NOTEQUAL        reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    GREATEROREQUAL  reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    LESSEROREQUAL   reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    COMMA           reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    SEMICOLON       reduce using rule 100 (exp1 -> PLUS push_sign exp .)
    RBRACKET        reduce using rule 100 (exp1 -> PLUS push_sign exp .)


state 244

    (85) condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE . condition1
    (86) condition1 -> . ELSE LBRACE b2 RBRACE
    (87) condition1 -> . empty
    (120) empty -> .

    ELSE            shift and go to state 261
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)
    RBRACE          reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)

    condition1                     shift and go to state 260
    empty                          shift and go to state 262

state 245

    (89) expression1 -> LESSER relop exp top_relop .

    RPAREN          reduce using rule 89 (expression1 -> LESSER relop exp top_relop .)
    SEMICOLON       reduce using rule 89 (expression1 -> LESSER relop exp top_relop .)
    COMMA           reduce using rule 89 (expression1 -> LESSER relop exp top_relop .)


state 246

    (90) expression1 -> GREATER relop exp top_relop .

    RPAREN          reduce using rule 90 (expression1 -> GREATER relop exp top_relop .)
    SEMICOLON       reduce using rule 90 (expression1 -> GREATER relop exp top_relop .)
    COMMA           reduce using rule 90 (expression1 -> GREATER relop exp top_relop .)


state 247

    (91) expression1 -> EQUAL relop exp top_relop .

    RPAREN          reduce using rule 91 (expression1 -> EQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 91 (expression1 -> EQUAL relop exp top_relop .)
    COMMA           reduce using rule 91 (expression1 -> EQUAL relop exp top_relop .)


state 248

    (92) expression1 -> NOTEQUAL relop exp top_relop .

    RPAREN          reduce using rule 92 (expression1 -> NOTEQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 92 (expression1 -> NOTEQUAL relop exp top_relop .)
    COMMA           reduce using rule 92 (expression1 -> NOTEQUAL relop exp top_relop .)


state 249

    (93) expression1 -> GREATEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 93 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 93 (expression1 -> GREATEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 93 (expression1 -> GREATEROREQUAL relop exp top_relop .)


state 250

    (94) expression1 -> LESSEROREQUAL relop exp top_relop .

    RPAREN          reduce using rule 94 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    SEMICOLON       reduce using rule 94 (expression1 -> LESSEROREQUAL relop exp top_relop .)
    COMMA           reduce using rule 94 (expression1 -> LESSEROREQUAL relop exp top_relop .)


state 251

    (63) triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 63 (triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 252

    (64) rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 64 (rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 253

    (65) poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .

    ID              reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    IF              reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    TRIANGLE        reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RECTANGLE       reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    SQUARE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    CIRCLE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    POLIGON         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    COLOR           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENSIZE         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENFORWARD      reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENBACK         reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    ROTATE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    WHILE           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RETURN          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENON           reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    PENOFF          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    RBRACE          reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)
    VAR             reduce using rule 65 (poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON .)


state 254

    (39) while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .

    ID              reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    IF              reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    COLOR           reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    WHILE           reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RETURN          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENON           reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)
    VAR             reduce using rule 39 (while -> WHILE LPAREN expression RPAREN LBRACE b2 RBRACE .)


state 255

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (55) funcs2 -> funcs2 . vars
    (56) funcs2 -> funcs2 . statute
    (12) vars -> . VAR vars2
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 263
    VAR             shift and go to state 11
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    vars                           shift and go to state 264
    statute                        shift and go to state 265
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 256

    (57) funcs2 -> empty .

    RBRACE          reduce using rule 57 (funcs2 -> empty .)
    VAR             reduce using rule 57 (funcs2 -> empty .)
    ID              reduce using rule 57 (funcs2 -> empty .)
    IF              reduce using rule 57 (funcs2 -> empty .)
    TRIANGLE        reduce using rule 57 (funcs2 -> empty .)
    RECTANGLE       reduce using rule 57 (funcs2 -> empty .)
    SQUARE          reduce using rule 57 (funcs2 -> empty .)
    CIRCLE          reduce using rule 57 (funcs2 -> empty .)
    POLIGON         reduce using rule 57 (funcs2 -> empty .)
    COLOR           reduce using rule 57 (funcs2 -> empty .)
    PENSIZE         reduce using rule 57 (funcs2 -> empty .)
    PENFORWARD      reduce using rule 57 (funcs2 -> empty .)
    PENBACK         reduce using rule 57 (funcs2 -> empty .)
    ROTATE          reduce using rule 57 (funcs2 -> empty .)
    WHILE           reduce using rule 57 (funcs2 -> empty .)
    RETURN          reduce using rule 57 (funcs2 -> empty .)
    PENON           reduce using rule 57 (funcs2 -> empty .)
    PENOFF          reduce using rule 57 (funcs2 -> empty .)


state 257

    (53) funcs1 -> funcs1 COMMA type ID .

    RPAREN          reduce using rule 53 (funcs1 -> funcs1 COMMA type ID .)
    COMMA           reduce using rule 53 (funcs1 -> funcs1 COMMA type ID .)


state 258

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 . RBRACE funcs3
    (55) funcs2 -> funcs2 . vars
    (56) funcs2 -> funcs2 . statute
    (12) vars -> . VAR vars2
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 266
    VAR             shift and go to state 11
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    vars                           shift and go to state 264
    statute                        shift and go to state 265
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 259

    (41) assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .

    ID              reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    IF              reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    TRIANGLE        reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RECTANGLE       reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    SQUARE          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    CIRCLE          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    POLIGON         reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    COLOR           reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENSIZE         reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENFORWARD      reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENBACK         reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    ROTATE          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    WHILE           reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RETURN          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENON           reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    PENOFF          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    RBRACE          reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)
    VAR             reduce using rule 41 (assignment -> ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON .)


state 260

    (85) condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .

    ID              reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    IF              reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    TRIANGLE        reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RECTANGLE       reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    SQUARE          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    CIRCLE          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    POLIGON         reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    COLOR           reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENSIZE         reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENFORWARD      reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENBACK         reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    ROTATE          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    WHILE           reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RETURN          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENON           reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    PENOFF          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    RBRACE          reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)
    VAR             reduce using rule 85 (condition -> IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1 .)


state 261

    (86) condition1 -> ELSE . LBRACE b2 RBRACE

    LBRACE          shift and go to state 267


state 262

    (87) condition1 -> empty .

    ID              reduce using rule 87 (condition1 -> empty .)
    IF              reduce using rule 87 (condition1 -> empty .)
    TRIANGLE        reduce using rule 87 (condition1 -> empty .)
    RECTANGLE       reduce using rule 87 (condition1 -> empty .)
    SQUARE          reduce using rule 87 (condition1 -> empty .)
    CIRCLE          reduce using rule 87 (condition1 -> empty .)
    POLIGON         reduce using rule 87 (condition1 -> empty .)
    COLOR           reduce using rule 87 (condition1 -> empty .)
    PENSIZE         reduce using rule 87 (condition1 -> empty .)
    PENFORWARD      reduce using rule 87 (condition1 -> empty .)
    PENBACK         reduce using rule 87 (condition1 -> empty .)
    ROTATE          reduce using rule 87 (condition1 -> empty .)
    WHILE           reduce using rule 87 (condition1 -> empty .)
    RETURN          reduce using rule 87 (condition1 -> empty .)
    PENON           reduce using rule 87 (condition1 -> empty .)
    PENOFF          reduce using rule 87 (condition1 -> empty .)
    RBRACE          reduce using rule 87 (condition1 -> empty .)
    VAR             reduce using rule 87 (condition1 -> empty .)


state 263

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (58) funcs3 -> . funcs
    (59) funcs3 -> . empty
    (51) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (120) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 10
    DAVINCI         reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)

  ! FUNC            [ reduce using rule 120 (empty -> .) ]

    funcs3                         shift and go to state 268
    funcs                          shift and go to state 269
    empty                          shift and go to state 270

state 264

    (55) funcs2 -> funcs2 vars .

    RBRACE          reduce using rule 55 (funcs2 -> funcs2 vars .)
    VAR             reduce using rule 55 (funcs2 -> funcs2 vars .)
    ID              reduce using rule 55 (funcs2 -> funcs2 vars .)
    IF              reduce using rule 55 (funcs2 -> funcs2 vars .)
    TRIANGLE        reduce using rule 55 (funcs2 -> funcs2 vars .)
    RECTANGLE       reduce using rule 55 (funcs2 -> funcs2 vars .)
    SQUARE          reduce using rule 55 (funcs2 -> funcs2 vars .)
    CIRCLE          reduce using rule 55 (funcs2 -> funcs2 vars .)
    POLIGON         reduce using rule 55 (funcs2 -> funcs2 vars .)
    COLOR           reduce using rule 55 (funcs2 -> funcs2 vars .)
    PENSIZE         reduce using rule 55 (funcs2 -> funcs2 vars .)
    PENFORWARD      reduce using rule 55 (funcs2 -> funcs2 vars .)
    PENBACK         reduce using rule 55 (funcs2 -> funcs2 vars .)
    ROTATE          reduce using rule 55 (funcs2 -> funcs2 vars .)
    WHILE           reduce using rule 55 (funcs2 -> funcs2 vars .)
    RETURN          reduce using rule 55 (funcs2 -> funcs2 vars .)
    PENON           reduce using rule 55 (funcs2 -> funcs2 vars .)
    PENOFF          reduce using rule 55 (funcs2 -> funcs2 vars .)


state 265

    (56) funcs2 -> funcs2 statute .

    RBRACE          reduce using rule 56 (funcs2 -> funcs2 statute .)
    VAR             reduce using rule 56 (funcs2 -> funcs2 statute .)
    ID              reduce using rule 56 (funcs2 -> funcs2 statute .)
    IF              reduce using rule 56 (funcs2 -> funcs2 statute .)
    TRIANGLE        reduce using rule 56 (funcs2 -> funcs2 statute .)
    RECTANGLE       reduce using rule 56 (funcs2 -> funcs2 statute .)
    SQUARE          reduce using rule 56 (funcs2 -> funcs2 statute .)
    CIRCLE          reduce using rule 56 (funcs2 -> funcs2 statute .)
    POLIGON         reduce using rule 56 (funcs2 -> funcs2 statute .)
    COLOR           reduce using rule 56 (funcs2 -> funcs2 statute .)
    PENSIZE         reduce using rule 56 (funcs2 -> funcs2 statute .)
    PENFORWARD      reduce using rule 56 (funcs2 -> funcs2 statute .)
    PENBACK         reduce using rule 56 (funcs2 -> funcs2 statute .)
    ROTATE          reduce using rule 56 (funcs2 -> funcs2 statute .)
    WHILE           reduce using rule 56 (funcs2 -> funcs2 statute .)
    RETURN          reduce using rule 56 (funcs2 -> funcs2 statute .)
    PENON           reduce using rule 56 (funcs2 -> funcs2 statute .)
    PENOFF          reduce using rule 56 (funcs2 -> funcs2 statute .)


state 266

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE . funcs3
    (58) funcs3 -> . funcs
    (59) funcs3 -> . empty
    (51) funcs -> . FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (52) funcs -> . FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3
    (120) empty -> .

  ! shift/reduce conflict for FUNC resolved as shift
    FUNC            shift and go to state 10
    DAVINCI         reduce using rule 120 (empty -> .)
    VAR             reduce using rule 120 (empty -> .)

  ! FUNC            [ reduce using rule 120 (empty -> .) ]

    funcs3                         shift and go to state 271
    funcs                          shift and go to state 269
    empty                          shift and go to state 270

state 267

    (86) condition1 -> ELSE LBRACE . b2 RBRACE
    (10) b2 -> . b2 statute
    (11) b2 -> . empty
    (120) empty -> .

    RBRACE          reduce using rule 120 (empty -> .)
    ID              reduce using rule 120 (empty -> .)
    IF              reduce using rule 120 (empty -> .)
    TRIANGLE        reduce using rule 120 (empty -> .)
    RECTANGLE       reduce using rule 120 (empty -> .)
    SQUARE          reduce using rule 120 (empty -> .)
    CIRCLE          reduce using rule 120 (empty -> .)
    POLIGON         reduce using rule 120 (empty -> .)
    COLOR           reduce using rule 120 (empty -> .)
    PENSIZE         reduce using rule 120 (empty -> .)
    PENFORWARD      reduce using rule 120 (empty -> .)
    PENBACK         reduce using rule 120 (empty -> .)
    ROTATE          reduce using rule 120 (empty -> .)
    WHILE           reduce using rule 120 (empty -> .)
    RETURN          reduce using rule 120 (empty -> .)
    PENON           reduce using rule 120 (empty -> .)
    PENOFF          reduce using rule 120 (empty -> .)

    b2                             shift and go to state 272
    empty                          shift and go to state 26

state 268

    (51) funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 51 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 51 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 51 (funcs -> FUNC type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 269

    (58) funcs3 -> funcs .

    DAVINCI         reduce using rule 58 (funcs3 -> funcs .)
    FUNC            reduce using rule 58 (funcs3 -> funcs .)
    VAR             reduce using rule 58 (funcs3 -> funcs .)


state 270

    (59) funcs3 -> empty .

    DAVINCI         reduce using rule 59 (funcs3 -> empty .)
    FUNC            reduce using rule 59 (funcs3 -> empty .)
    VAR             reduce using rule 59 (funcs3 -> empty .)


state 271

    (52) funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .

    DAVINCI         reduce using rule 52 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    FUNC            reduce using rule 52 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)
    VAR             reduce using rule 52 (funcs -> FUNC VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 .)


state 272

    (86) condition1 -> ELSE LBRACE b2 . RBRACE
    (10) b2 -> b2 . statute
    (22) statute -> . assignment
    (23) statute -> . call
    (24) statute -> . condition
    (25) statute -> . triangle
    (26) statute -> . rectangle
    (27) statute -> . square
    (28) statute -> . circle
    (29) statute -> . poligon
    (30) statute -> . color
    (31) statute -> . pensize
    (32) statute -> . penforward
    (33) statute -> . penback
    (34) statute -> . rotate
    (35) statute -> . while
    (36) statute -> . return
    (37) statute -> . penon
    (38) statute -> . penoff
    (40) assignment -> . ID cte_id ASSIGN expression SEMICOLON
    (41) assignment -> . ID cte_id LBRACKET exp RBRACKET ASSIGN expression SEMICOLON
    (114) call -> . ID LPAREN call1 RPAREN SEMICOLON
    (85) condition -> . IF LPAREN expression RPAREN LBRACE b2 RBRACE condition1
    (63) triangle -> . TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (64) rectangle -> . RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON
    (62) square -> . SQUARE LPAREN exp RPAREN SEMICOLON
    (61) circle -> . CIRCLE LPAREN exp RPAREN SEMICOLON
    (65) poligon -> . POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON
    (60) color -> . COLOR LPAREN color_cte RPAREN SEMICOLON
    (68) pensize -> . PENSIZE LPAREN exp RPAREN SEMICOLON
    (69) penforward -> . PENFORWARD LPAREN exp RPAREN SEMICOLON
    (70) penback -> . PENBACK LPAREN exp RPAREN SEMICOLON
    (66) rotate -> . ROTATE LPAREN exp RPAREN SEMICOLON
    (67) rotate -> . ROTATE LPAREN CTE_STRING RPAREN SEMICOLON
    (39) while -> . WHILE LPAREN expression RPAREN LBRACE b2 RBRACE
    (118) return -> . RETURN var_cte SEMICOLON
    (119) return -> . RETURN st_cte SEMICOLON
    (71) penon -> . PENON LPAREN RPAREN SEMICOLON
    (72) penoff -> . PENOFF LPAREN RPAREN SEMICOLON

    RBRACE          shift and go to state 273
    ID              shift and go to state 50
    IF              shift and go to state 51
    TRIANGLE        shift and go to state 52
    RECTANGLE       shift and go to state 53
    SQUARE          shift and go to state 54
    CIRCLE          shift and go to state 55
    POLIGON         shift and go to state 56
    COLOR           shift and go to state 57
    PENSIZE         shift and go to state 58
    PENFORWARD      shift and go to state 59
    PENBACK         shift and go to state 60
    ROTATE          shift and go to state 61
    WHILE           shift and go to state 62
    RETURN          shift and go to state 63
    PENON           shift and go to state 64
    PENOFF          shift and go to state 65

    statute                        shift and go to state 32
    assignment                     shift and go to state 33
    call                           shift and go to state 34
    condition                      shift and go to state 35
    triangle                       shift and go to state 36
    rectangle                      shift and go to state 37
    square                         shift and go to state 38
    circle                         shift and go to state 39
    poligon                        shift and go to state 40
    color                          shift and go to state 41
    pensize                        shift and go to state 42
    penforward                     shift and go to state 43
    penback                        shift and go to state 44
    rotate                         shift and go to state 45
    while                          shift and go to state 46
    return                         shift and go to state 47
    penon                          shift and go to state 48
    penoff                         shift and go to state 49

state 273

    (86) condition1 -> ELSE LBRACE b2 RBRACE .

    ID              reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    IF              reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    TRIANGLE        reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RECTANGLE       reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    SQUARE          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    CIRCLE          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    POLIGON         reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    COLOR           reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENSIZE         reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENFORWARD      reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENBACK         reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    ROTATE          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    WHILE           reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RETURN          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENON           reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    PENOFF          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    RBRACE          reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)
    VAR             reduce using rule 86 (condition1 -> ELSE LBRACE b2 RBRACE .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for FUNC in state 263 resolved as shift
WARNING: shift/reduce conflict for FUNC in state 266 resolved as shift
WARNING: reduce/reduce conflict in state 89 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 89
WARNING: reduce/reduce conflict in state 102 resolved using rule (var_cte -> ID)
WARNING: rejected rule (push_id -> <empty>) in state 102
WARNING: reduce/reduce conflict in state 108 resolved using rule (st_cte -> cte_bool)
WARNING: rejected rule (var_cte -> cte_bool) in state 108
WARNING: reduce/reduce conflict in state 113 resolved using rule (var_cte -> ID)
WARNING: rejected rule (push_id -> <empty>) in state 113
WARNING: Rule (push_id -> <empty>) is never reduced
