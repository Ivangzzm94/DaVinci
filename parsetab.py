
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN ASSIGNMENT BLOCK BLUE BOOL CALL CIRCLE COLOR COLOR_CTE COMMA CONDITION CTE_BOOL CTE_FLOAT CTE_INT CTE_STRING DAVINCI DIVIDE ELSE EQUAL EXP EXPRESSION FACTOR FALSE FLOAT GREATER GREATEROREQUAL GREEN ID IF INT LBRACE LBRACKET LESSER LESSEROREQUAL LPAREN MINUS NOT NOTEQUAL OR PENBACK PENFORWARD PENOFF PENON PENSIZE PINK PLUS POLIGON PROGRAM PURPLE RBRACE RBRACKET RECTANGLE RED ROTATE RPAREN SEMICOLON SIZE SQUARE STATUTE STRING ST_CTE TERM TIMES TRIANGLE TRUE TYPE VAR VARS VAR_CTE VOID WHILE YELLOWprogram : PROGRAM ID SEMICOLON program1 DAVINCI blockprogram1 : funcs\n\t| vars\n\t| funcs vars\n\t| vars funcs block : LBRACE b1 RBRACEb1 : vars b2 \n\t| b2b2 : statute\n\t| statute b2\n\t| emptyvars : VAR vars2 vars2 : type ID vars3 SEMICOLON vars2\n\t| type ID vars3 SEMICOLONvars3 : COMMA ID vars3 \n\t| list vars3\n\t| list COMMA ID vars3 \n\t| emptylist : LBRACKET exp RBRACKETstatute : assignment\n\t | call\n\t | condition\n\t | triangle\n\t | rectangle\n\t | square\n\t | circle\n\t | poligon\n\t | color\n\t | pensize\n\t | penforward\n\t | penback\n\t | rotate\n\t | WHILE\n\t | return\n\t | penon\n\t | penoffassignment : ID EQUAL expression SEMICOLON\n\t | ID LBRACKET exp RBRACKET EQUAL expression SEMICOLONcolor_cte : RED\n\t\t| BLUE\n\t\t| YELLOW\n\t\t| GREEN\n\t\t| PINK\n\t\t| PURPLEst_cte : STRING SEMICOLON\n\t\t| CTE_BOOL SEMICOLONfuncs : type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3\n\t| VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3 funcs1 : COMMA type ID funcs1\n\t| emptyfuncs2 : vars\n\t| vars statute\n\t| statute vars\n\t| statute\n\t| empty funcs3 : funcs\n\t| emptycolor : COLOR LPAREN color_cte RPAREN SEMICOLONcircle : CIRCLE LPAREN exp RPAREN SEMICOLONsquare : SQUARE LPAREN exp RPAREN SEMICOLONtriangle : TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLONrectangle : RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLONpoligon : POLIGON LPAREN exp COMMA exp RPAREN SEMICOLONrotate : ROTATE LPAREN exp RPAREN SEMICOLON\n\t| ROTATE LPAREN CTE_STRING RPAREN SEMICOLONpensize : PENSIZE LPAREN exp RPAREN SEMICOLONpenforward : PENFORWARD LPAREN exp RPAREN SEMICOLONpenback : PENBACK LPAREN exp RPAREN SEMICOLONpenon : PENON LPAREN RPAREN SEMICOLONpenoff : PENOFF LPAREN RPAREN SEMICOLONtype : INT\n\t\t| FLOAT\n\t\t| BOOL\n\t\t| STRINGcte_bool : TRUE\n\t\t\t\t| FALSEvar_cte : ID var_cte1\n\t\t\t\t| CTE_INT\n\t\t\t\t| CTE_FLOAT\n\t\t\t\t| callvar_cte1 : LBRACKET exp RBRACKET\n\t\t\t\t | LPAREN exp RPAREN\n\t\t\t\t | emptycondition : IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLONcondition1 : ELSE BLOCK\n\t| emptyexpression : exp expression1 IDexpression1 : expression2 expression2 : LESSER \n\t| GREATER \n\t| EQUAL \n\t| NOTEQUALexp : term exp1exp1 : MINUS term exp1\n\t| PLUS term exp1\n\t| emptyfactor : LPAREN EXPRESSION RPAREN\n\t| var_cte\n\t| factor1 var_ctefactor1 : MINUS \n\t| PLUSterm : DIVIDE \n\t| TIMES \n\t| factorcall : ID LPAREN call1 RPAREN SEMICOLONcall1 : ID COMMA call1\n\t| exp\n\t| ST_CTEreturn : exp SEMICOLONempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,22,82,],[0,-1,-6,]),'ID':([2,8,9,11,12,13,14,20,21,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,70,73,74,75,76,78,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,114,117,149,154,158,159,160,161,162,163,164,166,170,171,174,181,182,187,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[3,18,19,-71,-72,-73,-74,-12,26,49,49,49,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,110,-100,-101,112,113,115,110,110,110,122,-109,110,110,110,110,110,110,110,110,110,110,110,-14,156,110,-13,-37,190,-88,-89,-90,-91,-92,122,110,110,110,-69,-70,209,110,-105,-60,-59,-58,-66,-67,-68,-64,-65,49,49,49,-38,-84,-61,-62,-63,]),'SEMICOLON':([3,26,33,49,50,65,66,67,68,69,71,72,77,79,80,88,89,105,108,109,110,111,115,116,119,126,145,146,147,148,155,156,157,165,167,168,172,173,175,176,177,178,179,180,183,184,189,190,194,195,207,211,212,214,215,216,217,226,],[4,-110,-80,-110,90,-110,-102,-103,-104,-98,-78,-79,114,-110,-18,-77,-83,-93,-96,-99,-110,-80,-110,-16,158,-97,181,182,-110,-110,-15,-110,-19,-81,194,-82,198,199,201,202,203,204,205,206,-94,-95,-15,-87,-105,-110,-81,224,225,-86,227,228,229,-85,]),'VOID':([4,7,20,114,154,230,233,],[9,9,-12,-14,-13,9,9,]),'VAR':([4,6,23,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,158,181,182,194,198,199,201,202,203,204,205,206,208,210,220,224,225,227,228,229,230,233,234,235,236,237,],[10,10,10,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,10,10,10,-38,-84,-61,-62,-63,-110,-110,-47,-56,-57,-48,]),'INT':([4,7,10,20,24,25,114,151,154,230,233,],[11,11,11,-12,11,11,11,11,-13,11,11,]),'FLOAT':([4,7,10,20,24,25,114,151,154,230,233,],[12,12,12,-12,12,12,12,12,-13,12,12,]),'BOOL':([4,7,10,20,24,25,114,151,154,230,233,],[13,13,13,-12,13,13,13,13,-13,13,13,]),'STRING':([4,7,10,20,24,25,114,151,154,230,233,],[14,14,14,-12,14,14,14,14,-13,14,14,]),'DAVINCI':([5,6,7,16,17,20,114,154,230,233,234,235,236,237,],[15,-2,-3,-4,-5,-12,-14,-13,-110,-110,-47,-56,-57,-48,]),'LBRACE':([15,186,188,],[23,208,210,]),'LPAREN':([18,19,20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,53,54,55,56,57,58,59,60,61,62,63,64,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,110,114,122,149,154,158,166,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[24,25,-12,51,51,51,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,87,92,93,94,95,96,97,98,99,100,101,102,103,104,51,51,51,51,-109,51,51,51,51,51,51,51,51,51,51,51,87,-14,87,51,-13,-37,51,51,51,51,-69,-70,51,-105,-60,-59,-58,-66,-67,-68,-64,-65,51,51,51,-38,-84,-61,-62,-63,]),'WHILE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,45,45,45,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,45,45,45,-38,-84,-61,-62,-63,]),'IF':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,52,52,52,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,52,52,52,-38,-84,-61,-62,-63,]),'TRIANGLE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,53,53,53,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,53,53,53,-38,-84,-61,-62,-63,]),'RECTANGLE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,54,54,54,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,54,54,54,-38,-84,-61,-62,-63,]),'SQUARE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,55,55,55,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,55,55,55,-38,-84,-61,-62,-63,]),'CIRCLE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,56,56,56,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,56,56,56,-38,-84,-61,-62,-63,]),'POLIGON':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,57,57,57,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,57,57,57,-38,-84,-61,-62,-63,]),'COLOR':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,58,58,58,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,58,58,58,-38,-84,-61,-62,-63,]),'PENSIZE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,59,59,59,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,59,59,59,-38,-84,-61,-62,-63,]),'PENFORWARD':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,60,60,60,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,60,60,60,-38,-84,-61,-62,-63,]),'PENBACK':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,61,61,61,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,61,61,61,-38,-84,-61,-62,-63,]),'ROTATE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,62,62,62,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,62,62,62,-38,-84,-61,-62,-63,]),'PENON':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,63,63,63,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,63,63,63,-38,-84,-61,-62,-63,]),'PENOFF':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,64,64,64,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,64,64,64,-38,-84,-61,-62,-63,]),'DIVIDE':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,114,149,154,158,166,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,66,66,66,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,66,66,66,66,-109,66,66,66,66,66,66,66,66,66,66,66,-14,66,-13,-37,66,66,66,66,-69,-70,66,-105,-60,-59,-58,-66,-67,-68,-64,-65,66,66,66,-38,-84,-61,-62,-63,]),'TIMES':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,114,149,154,158,166,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,67,67,67,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,67,67,67,67,-109,67,67,67,67,67,67,67,67,67,67,67,-14,67,-13,-37,67,67,67,67,-69,-70,67,-105,-60,-59,-58,-66,-67,-68,-64,-65,67,67,67,-38,-84,-61,-62,-63,]),'CTE_INT':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,70,73,74,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,114,149,154,158,166,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,71,71,71,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,71,-100,-101,71,71,71,71,-109,71,71,71,71,71,71,71,71,71,71,71,-14,71,-13,-37,71,71,71,71,-69,-70,71,-105,-60,-59,-58,-66,-67,-68,-64,-65,71,71,71,-38,-84,-61,-62,-63,]),'CTE_FLOAT':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,70,73,74,81,85,86,87,90,93,94,95,96,97,99,100,101,102,106,107,114,149,154,158,166,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,208,210,219,224,225,227,228,229,],[-12,72,72,72,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,72,-100,-101,72,72,72,72,-109,72,72,72,72,72,72,72,72,72,72,72,-14,72,-13,-37,72,72,72,72,-69,-70,72,-105,-60,-59,-58,-66,-67,-68,-64,-65,72,72,72,-38,-84,-61,-62,-63,]),'MINUS':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,65,66,67,68,69,71,72,81,85,86,87,88,89,90,93,94,95,96,97,99,100,101,102,106,107,109,110,111,114,122,126,147,148,149,154,158,165,166,168,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,207,208,210,219,224,225,227,228,229,],[-12,73,73,73,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-110,106,-102,-103,-104,-98,-78,-79,73,73,73,73,-77,-83,-109,73,73,73,73,73,73,73,73,73,73,73,-99,-110,-80,-14,-110,-97,106,106,73,-13,-37,-81,73,-82,73,73,73,-69,-70,73,-105,-60,-59,-58,-66,-67,-68,-64,-65,-81,73,73,73,-38,-84,-61,-62,-63,]),'PLUS':([20,23,28,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,65,66,67,68,69,71,72,81,85,86,87,88,89,90,93,94,95,96,97,99,100,101,102,106,107,109,110,111,114,122,126,147,148,149,154,158,165,166,168,170,171,174,181,182,191,194,198,199,201,202,203,204,205,206,207,208,210,219,224,225,227,228,229,],[-12,74,74,74,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-110,107,-102,-103,-104,-98,-78,-79,74,74,74,74,-77,-83,-109,74,74,74,74,74,74,74,74,74,74,74,-99,-110,-80,-14,-110,-97,107,107,74,-13,-37,-81,74,-82,74,74,74,-69,-70,74,-105,-60,-59,-58,-66,-67,-68,-64,-65,-81,74,74,74,-38,-84,-61,-62,-63,]),'RBRACE':([20,23,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,83,84,90,114,154,158,181,182,194,198,199,201,202,203,204,205,206,208,210,218,219,220,221,223,224,225,227,228,229,231,232,],[-12,-110,82,-110,-8,-9,-11,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-7,-10,-109,-14,-13,-37,-69,-70,-105,-60,-59,-58,-66,-67,-68,-64,-65,-110,-110,230,-51,-54,-55,233,-38,-84,-61,-62,-63,-52,-53,]),'COMMA':([26,65,66,67,68,69,71,72,79,88,89,105,108,109,110,111,112,113,115,122,126,128,129,132,147,148,156,157,168,183,184,194,207,209,],[78,-110,-102,-103,-104,-98,-78,-79,117,-77,-83,-93,-96,-99,-110,-80,151,151,78,166,-97,170,171,174,-110,-110,78,-19,-82,-94,-95,-105,-81,151,]),'LBRACKET':([26,49,79,110,115,122,156,157,],[81,86,81,149,81,149,81,-19,]),'EQUAL':([49,65,66,67,68,69,71,72,88,89,105,108,109,110,111,120,126,147,148,165,168,183,184,194,207,],[85,-110,-102,-103,-104,-98,-78,-79,-77,-83,-93,-96,-99,-110,-80,163,-97,-110,-110,191,-82,-94,-95,-105,-81,]),'EXPRESSION':([51,92,],[91,127,]),'RBRACKET':([65,66,67,68,69,71,72,88,89,105,108,109,110,111,118,121,126,147,148,168,183,184,185,194,207,],[-110,-102,-103,-104,-98,-78,-79,-77,-83,-93,-96,-99,-110,-80,157,165,-97,-110,-110,-82,-94,-95,207,-105,-81,]),'LESSER':([65,66,67,68,69,71,72,88,89,105,108,109,110,111,120,126,147,148,168,183,184,194,207,],[-110,-102,-103,-104,-98,-78,-79,-77,-83,-93,-96,-99,-110,-80,161,-97,-110,-110,-82,-94,-95,-105,-81,]),'GREATER':([65,66,67,68,69,71,72,88,89,105,108,109,110,111,120,126,147,148,168,183,184,194,207,],[-110,-102,-103,-104,-98,-78,-79,-77,-83,-93,-96,-99,-110,-80,162,-97,-110,-110,-82,-94,-95,-105,-81,]),'NOTEQUAL':([65,66,67,68,69,71,72,88,89,105,108,109,110,111,120,126,147,148,168,183,184,194,207,],[-110,-102,-103,-104,-98,-78,-79,-77,-83,-93,-96,-99,-110,-80,164,-97,-110,-110,-82,-94,-95,-105,-81,]),'RPAREN':([65,66,67,68,69,71,72,88,89,91,103,104,105,108,109,110,111,112,113,122,123,124,125,126,127,130,131,133,134,135,136,137,138,139,140,141,142,143,144,147,148,150,152,153,168,183,184,192,193,194,196,197,200,207,209,222,],[-110,-102,-103,-104,-98,-78,-79,-77,-83,126,145,146,-93,-96,-99,-110,-80,-110,-110,-110,167,168,-108,-97,169,172,173,175,-39,-40,-41,-42,-43,-44,176,177,178,179,180,-110,-110,186,-50,188,-82,-94,-95,-106,-107,-105,215,216,217,-81,-110,-49,]),'ST_CTE':([87,166,],[125,125,]),'RED':([98,],[134,]),'BLUE':([98,],[135,]),'YELLOW':([98,],[136,]),'GREEN':([98,],[137,]),'PINK':([98,],[138,]),'PURPLE':([98,],[139,]),'CTE_STRING':([102,],[144,]),'BLOCK':([169,213,],[195,226,]),'ELSE':([195,],[213,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'program1':([4,],[5,]),'funcs':([4,7,230,233,],[6,17,235,235,]),'vars':([4,6,23,208,210,220,],[7,16,28,219,219,232,]),'type':([4,7,10,24,25,114,151,230,233,],[8,8,21,75,76,21,187,8,8,]),'vars2':([10,114,],[20,154,]),'block':([15,],[22,]),'b1':([23,],[27,]),'b2':([23,28,30,],[29,83,84,]),'statute':([23,28,30,208,210,219,],[30,30,30,220,220,231,]),'empty':([23,26,28,30,49,65,79,110,112,113,115,122,147,148,156,195,208,209,210,230,233,],[31,80,31,31,89,108,80,89,152,152,80,89,108,108,80,214,221,152,221,236,236,]),'assignment':([23,28,30,208,210,219,],[32,32,32,32,32,32,]),'call':([23,28,30,70,81,85,86,87,93,94,95,96,97,99,100,101,102,106,107,149,166,170,171,174,191,208,210,219,],[33,33,33,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,33,33,33,]),'condition':([23,28,30,208,210,219,],[34,34,34,34,34,34,]),'triangle':([23,28,30,208,210,219,],[35,35,35,35,35,35,]),'rectangle':([23,28,30,208,210,219,],[36,36,36,36,36,36,]),'square':([23,28,30,208,210,219,],[37,37,37,37,37,37,]),'circle':([23,28,30,208,210,219,],[38,38,38,38,38,38,]),'poligon':([23,28,30,208,210,219,],[39,39,39,39,39,39,]),'color':([23,28,30,208,210,219,],[40,40,40,40,40,40,]),'pensize':([23,28,30,208,210,219,],[41,41,41,41,41,41,]),'penforward':([23,28,30,208,210,219,],[42,42,42,42,42,42,]),'penback':([23,28,30,208,210,219,],[43,43,43,43,43,43,]),'rotate':([23,28,30,208,210,219,],[44,44,44,44,44,44,]),'return':([23,28,30,208,210,219,],[46,46,46,46,46,46,]),'penon':([23,28,30,208,210,219,],[47,47,47,47,47,47,]),'penoff':([23,28,30,208,210,219,],[48,48,48,48,48,48,]),'exp':([23,28,30,81,85,86,87,93,94,95,96,97,99,100,101,102,149,166,170,171,174,191,208,210,219,],[50,50,50,118,120,121,124,128,129,130,131,132,140,141,142,143,185,193,196,197,200,120,50,50,50,]),'term':([23,28,30,81,85,86,87,93,94,95,96,97,99,100,101,102,106,107,149,166,170,171,174,191,208,210,219,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,147,148,65,65,65,65,65,65,65,65,65,]),'factor':([23,28,30,81,85,86,87,93,94,95,96,97,99,100,101,102,106,107,149,166,170,171,174,191,208,210,219,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'var_cte':([23,28,30,70,81,85,86,87,93,94,95,96,97,99,100,101,102,106,107,149,166,170,171,174,191,208,210,219,],[69,69,69,109,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'factor1':([23,28,30,81,85,86,87,93,94,95,96,97,99,100,101,102,106,107,149,166,170,171,174,191,208,210,219,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'vars3':([26,79,115,156,],[77,116,155,189,]),'list':([26,79,115,156,],[79,79,79,79,]),'var_cte1':([49,110,122,],[88,88,88,]),'exp1':([65,147,148,],[105,183,184,]),'expression':([85,191,],[119,211,]),'call1':([87,166,],[123,192,]),'color_cte':([98,],[133,]),'funcs1':([112,113,209,],[150,153,222,]),'expression1':([120,],[159,]),'expression2':([120,],[160,]),'condition1':([195,],[212,]),'funcs2':([208,210,],[218,223,]),'funcs3':([230,233,],[234,237,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON program1 DAVINCI block','program',6,'p_program','parser.py',8),
  ('program1 -> funcs','program1',1,'p_program1','parser.py',11),
  ('program1 -> vars','program1',1,'p_program1','parser.py',12),
  ('program1 -> funcs vars','program1',2,'p_program1','parser.py',13),
  ('program1 -> vars funcs','program1',2,'p_program1','parser.py',14),
  ('block -> LBRACE b1 RBRACE','block',3,'p_block','parser.py',17),
  ('b1 -> vars b2','b1',2,'p_b1','parser.py',20),
  ('b1 -> b2','b1',1,'p_b1','parser.py',21),
  ('b2 -> statute','b2',1,'p_b2','parser.py',24),
  ('b2 -> statute b2','b2',2,'p_b2','parser.py',25),
  ('b2 -> empty','b2',1,'p_b2','parser.py',26),
  ('vars -> VAR vars2','vars',2,'p_vars','parser.py',29),
  ('vars2 -> type ID vars3 SEMICOLON vars2','vars2',5,'p_vars2','parser.py',32),
  ('vars2 -> type ID vars3 SEMICOLON','vars2',4,'p_vars2','parser.py',33),
  ('vars3 -> COMMA ID vars3','vars3',3,'p_vars3','parser.py',36),
  ('vars3 -> list vars3','vars3',2,'p_vars3','parser.py',37),
  ('vars3 -> list COMMA ID vars3','vars3',4,'p_vars3','parser.py',38),
  ('vars3 -> empty','vars3',1,'p_vars3','parser.py',39),
  ('list -> LBRACKET exp RBRACKET','list',3,'p_list','parser.py',42),
  ('statute -> assignment','statute',1,'p_statute','parser.py',45),
  ('statute -> call','statute',1,'p_statute','parser.py',46),
  ('statute -> condition','statute',1,'p_statute','parser.py',47),
  ('statute -> triangle','statute',1,'p_statute','parser.py',48),
  ('statute -> rectangle','statute',1,'p_statute','parser.py',49),
  ('statute -> square','statute',1,'p_statute','parser.py',50),
  ('statute -> circle','statute',1,'p_statute','parser.py',51),
  ('statute -> poligon','statute',1,'p_statute','parser.py',52),
  ('statute -> color','statute',1,'p_statute','parser.py',53),
  ('statute -> pensize','statute',1,'p_statute','parser.py',54),
  ('statute -> penforward','statute',1,'p_statute','parser.py',55),
  ('statute -> penback','statute',1,'p_statute','parser.py',56),
  ('statute -> rotate','statute',1,'p_statute','parser.py',57),
  ('statute -> WHILE','statute',1,'p_statute','parser.py',58),
  ('statute -> return','statute',1,'p_statute','parser.py',59),
  ('statute -> penon','statute',1,'p_statute','parser.py',60),
  ('statute -> penoff','statute',1,'p_statute','parser.py',61),
  ('assignment -> ID EQUAL expression SEMICOLON','assignment',4,'p_assignment','parser.py',64),
  ('assignment -> ID LBRACKET exp RBRACKET EQUAL expression SEMICOLON','assignment',7,'p_assignment','parser.py',65),
  ('color_cte -> RED','color_cte',1,'p_color_cte','parser.py',68),
  ('color_cte -> BLUE','color_cte',1,'p_color_cte','parser.py',69),
  ('color_cte -> YELLOW','color_cte',1,'p_color_cte','parser.py',70),
  ('color_cte -> GREEN','color_cte',1,'p_color_cte','parser.py',71),
  ('color_cte -> PINK','color_cte',1,'p_color_cte','parser.py',72),
  ('color_cte -> PURPLE','color_cte',1,'p_color_cte','parser.py',73),
  ('st_cte -> STRING SEMICOLON','st_cte',2,'p_st_cte','parser.py',76),
  ('st_cte -> CTE_BOOL SEMICOLON','st_cte',2,'p_st_cte','parser.py',77),
  ('funcs -> type ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3','funcs',11,'p_funcs','parser.py',80),
  ('funcs -> VOID ID LPAREN type ID funcs1 RPAREN LBRACE funcs2 RBRACE funcs3','funcs',11,'p_funcs','parser.py',81),
  ('funcs1 -> COMMA type ID funcs1','funcs1',4,'p_funcs1','parser.py',84),
  ('funcs1 -> empty','funcs1',1,'p_funcs1','parser.py',85),
  ('funcs2 -> vars','funcs2',1,'p_funcs2','parser.py',88),
  ('funcs2 -> vars statute','funcs2',2,'p_funcs2','parser.py',89),
  ('funcs2 -> statute vars','funcs2',2,'p_funcs2','parser.py',90),
  ('funcs2 -> statute','funcs2',1,'p_funcs2','parser.py',91),
  ('funcs2 -> empty','funcs2',1,'p_funcs2','parser.py',92),
  ('funcs3 -> funcs','funcs3',1,'p_funcs3','parser.py',95),
  ('funcs3 -> empty','funcs3',1,'p_funcs3','parser.py',96),
  ('color -> COLOR LPAREN color_cte RPAREN SEMICOLON','color',5,'p_color','parser.py',99),
  ('circle -> CIRCLE LPAREN exp RPAREN SEMICOLON','circle',5,'p_circle','parser.py',102),
  ('square -> SQUARE LPAREN exp RPAREN SEMICOLON','square',5,'p_square','parser.py',105),
  ('triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON','triangle',7,'p_triangle','parser.py',108),
  ('rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON','rectangle',7,'p_rectangle','parser.py',111),
  ('poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON','poligon',7,'p_poligon','parser.py',114),
  ('rotate -> ROTATE LPAREN exp RPAREN SEMICOLON','rotate',5,'p_rotate','parser.py',117),
  ('rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON','rotate',5,'p_rotate','parser.py',118),
  ('pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON','pensize',5,'p_pensize','parser.py',121),
  ('penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON','penforward',5,'p_penforward','parser.py',124),
  ('penback -> PENBACK LPAREN exp RPAREN SEMICOLON','penback',5,'p_penback','parser.py',127),
  ('penon -> PENON LPAREN RPAREN SEMICOLON','penon',4,'p_penon','parser.py',130),
  ('penoff -> PENOFF LPAREN RPAREN SEMICOLON','penoff',4,'p_penoff','parser.py',133),
  ('type -> INT','type',1,'p_type','parser.py',136),
  ('type -> FLOAT','type',1,'p_type','parser.py',137),
  ('type -> BOOL','type',1,'p_type','parser.py',138),
  ('type -> STRING','type',1,'p_type','parser.py',139),
  ('cte_bool -> TRUE','cte_bool',1,'p_cte_bool','parser.py',142),
  ('cte_bool -> FALSE','cte_bool',1,'p_cte_bool','parser.py',143),
  ('var_cte -> ID var_cte1','var_cte',2,'p_var_cte','parser.py',146),
  ('var_cte -> CTE_INT','var_cte',1,'p_var_cte','parser.py',147),
  ('var_cte -> CTE_FLOAT','var_cte',1,'p_var_cte','parser.py',148),
  ('var_cte -> call','var_cte',1,'p_var_cte','parser.py',149),
  ('var_cte1 -> LBRACKET exp RBRACKET','var_cte1',3,'p_var_cte1','parser.py',152),
  ('var_cte1 -> LPAREN exp RPAREN','var_cte1',3,'p_var_cte1','parser.py',153),
  ('var_cte1 -> empty','var_cte1',1,'p_var_cte1','parser.py',154),
  ('condition -> IF LPAREN EXPRESSION RPAREN BLOCK condition1 SEMICOLON','condition',7,'p_condition','parser.py',157),
  ('condition1 -> ELSE BLOCK','condition1',2,'p_condition1','parser.py',160),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',161),
  ('expression -> exp expression1 ID','expression',3,'p_expression','parser.py',164),
  ('expression1 -> expression2','expression1',1,'p_expression1','parser.py',167),
  ('expression2 -> LESSER','expression2',1,'p_expression2','parser.py',170),
  ('expression2 -> GREATER','expression2',1,'p_expression2','parser.py',171),
  ('expression2 -> EQUAL','expression2',1,'p_expression2','parser.py',172),
  ('expression2 -> NOTEQUAL','expression2',1,'p_expression2','parser.py',173),
  ('exp -> term exp1','exp',2,'p_exp','parser.py',176),
  ('exp1 -> MINUS term exp1','exp1',3,'p_exp1','parser.py',179),
  ('exp1 -> PLUS term exp1','exp1',3,'p_exp1','parser.py',180),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',181),
  ('factor -> LPAREN EXPRESSION RPAREN','factor',3,'p_factor','parser.py',184),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',185),
  ('factor -> factor1 var_cte','factor',2,'p_factor','parser.py',186),
  ('factor1 -> MINUS','factor1',1,'p_factor1','parser.py',189),
  ('factor1 -> PLUS','factor1',1,'p_factor1','parser.py',190),
  ('term -> DIVIDE','term',1,'p_term','parser.py',193),
  ('term -> TIMES','term',1,'p_term','parser.py',194),
  ('term -> factor','term',1,'p_term','parser.py',195),
  ('call -> ID LPAREN call1 RPAREN SEMICOLON','call',5,'p_call','parser.py',198),
  ('call1 -> ID COMMA call1','call1',3,'p_call1','parser.py',201),
  ('call1 -> exp','call1',1,'p_call1','parser.py',202),
  ('call1 -> ST_CTE','call1',1,'p_call1','parser.py',203),
  ('return -> exp SEMICOLON','return',2,'p_return','parser.py',206),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',209),
]
