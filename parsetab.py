
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASSIGN BLACK BLUE BOOL BROWN CIRCLE COLOR COMMA CTE_BOOL CTE_FLOAT CTE_INT CTE_STRING DAVINCI DIVIDE ELSE EQUAL EXPRESSION FALSE FLOAT FUNC GREATER GREATEROREQUAL GREEN ID IF INT LBRACE LBRACKET LESSER LESSEROREQUAL LPAREN MINUS NOT NOTEQUAL OR PENBACK PENFORWARD PENOFF PENON PENSIZE PINK PLUS POLIGON PRINT PROGRAM PURPLE RBRACE RBRACKET RECTANGLE RED RETURN ROTATE RPAREN SEMICOLON SIZE SQUARE STRING ST_CTE TERM TIMES TRIANGLE TRUE VAR VOID WHILE WHITE YELLOWprogram : PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain blockfillmain : gotomain : program1 : program1 funcs save_funcs\n\t| program1 vars global_vars\n\t| emptygetglobalmemory : save_funcs : global_vars : block : LBRACE b1 RBRACEb1 : vars local_vars b2\n\t| b2local_vars : b2 : b2 statute\n\t| emptyvars : VAR vars2vars2 : type save_type vars3 SEMICOLON vars2\n\t| emptyvars3 : ID list savelist vars4\n\t| ID saveid vars4vars4 : COMMA vars3\n\t| emptysavelist : saveid : save_type : list : LBRACKET exp RBRACKETstatute : assignment\n\t | call\n\t | condition\n\t | triangle\n\t | rectangle\n\t | square\n\t | circle\n\t | poligon\n\t | color\n\t | pensize\n\t | penforward\n\t | penback\n\t | rotate\n\t | while\n\t | penon\n\t | penoff\n\t | printwhile : WHILE while_return LPAREN expression RPAREN type_check block end_whilewhile_return :end_while :assignment : ID verify_id ASSIGN push_sign expression set_value SEMICOLON\n\t            | ID LBRACKET expression check_range RBRACKET ASSIGN push_sign expression set_value SEMICOLONverify_id : check_range : set_value : cte_id : color_cte : RED\n\t\t| BLUE\n\t\t| YELLOW\n\t\t| GREEN\n\t\t| PINK\n\t\t| PURPLE\n        | BLACK\n        | BROWN\n        | WHITEst_cte : STRING\n\t\t| cte_boolfuncs : FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3\n\t        | FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3 functype : params : type ID save_par params1\n                | emptyparams1 : COMMA type ID save_par params1\n                | emptyfuncs1 : funcs1 COMMA type save_type ID save_par\n\t| emptystatements : statements statute\n\t| empty test : funcs3 : funcs\n\t| emptyfuncvars : vars local_vars\n    | emptysaveidfunc : end_func : save_par : color : COLOR LPAREN color_cte RPAREN SEMICOLONcircle : CIRCLE LPAREN exp RPAREN SEMICOLONsquare : SQUARE LPAREN exp RPAREN SEMICOLONtriangle : TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLONrectangle : RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLONpoligon : POLIGON LPAREN exp COMMA exp RPAREN SEMICOLONrotate : ROTATE LPAREN exp RPAREN SEMICOLON\n\t| ROTATE LPAREN CTE_STRING RPAREN SEMICOLONpensize : PENSIZE LPAREN exp RPAREN SEMICOLONpenforward : PENFORWARD LPAREN exp RPAREN SEMICOLONpenback : PENBACK LPAREN exp RPAREN SEMICOLONpenon : PENON LPAREN RPAREN SEMICOLONpenoff : PENOFF LPAREN RPAREN SEMICOLONtype : INT\n\t\t\t| FLOAT\n\t\t\t| STRING\n\t\t\t| BOOLgetcallvalue : cte_bool : TRUE\n\t| FALSEcondition : IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_ifcondition1 : gotoElse ELSE LBRACE b2 RBRACE\n\t| emptytype_check :gotoElse :end_if :expression : exp expression1expression1 : LESSER relop exp top_relop\n\t| GREATER relop exp top_relop\n\t| EQUAL relop exp top_relop\n\t| NOTEQUAL relop exp top_relop\n\t| GREATEROREQUAL relop exp top_relop\n    | LESSEROREQUAL relop exp top_relop\n    | emptyexp : term top_exp exp1exp1 : MINUS push_sign exp\n\t| PLUS push_sign exp\n\t| emptytop_exp : term : factor top_factor term1term1 : DIVIDE push_sign term\n\t\t| TIMES push_sign term\n\t\t| emptyfactor : LPAREN false_bottom expression RPAREN end_par\n\t| var_cte\n\t| ID push_idtop_factor :var_cte : ID getidvalue\n\t\t\t\t| CTE_INT getvalue_i\n\t\t\t\t| CTE_FLOAT getvalue_f\n\t\t\t\t| cte_bool getvalue_b\n\t\t\t\t| ID list getarrayvalue\n\t\t\t\t| call getcallvaluegetarrayvalue : getidvalue : getvalue_i : getvalue_f : getvalue_b : relop : top_relop :push_sign :false_bottom :end_par :push_id : call : ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturncheckreturn : check_name : create_era : gosub : call1 : expression argument call2\n\t| call2call2 : COMMA expression argument call2\n\t| emptyargument : check_params : print : PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLONprint_multi : COMMA expression to_screen print_multi\n                    | emptyto_screen : return : RETURN expression savereturn SEMICOLONsavereturn : empty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,29,45,],[0,-1,-10,]),'ID':([2,12,16,17,18,19,20,21,22,23,24,26,27,28,30,36,37,38,41,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,86,91,100,102,104,105,106,107,108,109,111,112,113,114,118,119,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,202,203,210,211,212,213,217,218,219,220,221,222,226,231,232,234,235,236,237,238,239,242,247,249,256,266,273,274,275,276,277,278,288,289,290,291,292,293,297,298,301,303,304,311,312,314,321,322,323,327,328,329,],[3,-164,-66,-66,-96,-97,-98,-99,-16,-25,-18,31,32,34,-164,-13,65,-15,-164,93,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,34,-144,65,93,93,93,93,93,93,93,93,93,93,93,93,165,93,-143,-150,93,-143,-143,-143,-143,93,-141,-141,-141,-141,-141,-141,93,93,93,93,-94,-95,93,93,93,93,93,93,93,93,93,93,93,-85,-84,-83,-91,-92,-93,-89,-90,93,-164,-164,-143,-164,295,65,-74,65,-47,93,65,-86,-87,-88,-46,-158,-73,93,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,65,-104,]),'SEMICOLON':([3,33,34,42,43,84,85,87,89,90,92,93,94,95,96,97,98,99,123,124,125,126,127,129,130,131,132,133,134,135,138,162,163,168,171,172,175,177,180,187,192,193,195,196,197,198,199,200,214,215,250,251,252,253,254,255,257,258,259,260,261,262,263,267,268,269,271,279,280,281,282,283,284,285,300,301,308,310,311,317,322,],[4,41,-24,-23,-164,-164,-20,-22,-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-19,-21,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,-164,202,203,-117,-120,-122,-125,-134,-109,-116,231,232,234,235,236,237,238,239,-145,-51,-118,-119,-123,-124,-126,277,-142,-142,-142,-142,-142,-142,-157,289,290,291,293,-110,-111,-112,-113,-114,-115,301,-51,-151,-163,321,-148,326,-147,]),'FUNC':([4,5,6,7,9,10,12,14,15,22,24,41,83,299,307,309,316,318,319,320,325,],[-3,-164,11,-6,-8,-9,-164,-4,-5,-16,-18,-164,-17,-81,-81,11,11,-65,-76,-77,-64,]),'VAR':([4,5,6,7,9,10,12,14,15,22,24,30,41,83,166,167,299,307,309,316,318,319,320,325,],[-3,-164,12,-6,-8,-9,-164,-4,-5,-16,-18,12,-164,-17,12,12,-81,-81,-164,-164,-65,-76,-77,-64,]),'DAVINCI':([4,5,6,7,8,9,10,12,14,15,22,24,41,83,299,307,309,316,318,319,320,325,],[-3,-164,-7,-6,13,-8,-9,-164,-4,-5,-16,-18,-164,-17,-81,-81,-164,-164,-65,-76,-77,-64,]),'VOID':([11,],[17,]),'INT':([11,12,41,81,82,245,],[18,18,18,18,18,18,]),'FLOAT':([11,12,41,81,82,245,],[19,19,19,19,19,19,]),'STRING':([11,12,41,81,82,245,],[20,20,20,20,20,20,]),'BOOL':([11,12,41,81,82,245,],[21,21,21,21,21,21,]),'IF':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,66,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,66,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,66,-74,66,-47,66,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,66,-104,]),'TRIANGLE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,67,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,67,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,67,-74,67,-47,67,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,67,-104,]),'RECTANGLE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,68,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,68,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,68,-74,68,-47,68,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,68,-104,]),'SQUARE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,69,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,69,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,69,-74,69,-47,69,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,69,-104,]),'CIRCLE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,70,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,70,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,70,-74,70,-47,70,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,70,-104,]),'POLIGON':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,71,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,71,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,71,-74,71,-47,71,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,71,-104,]),'COLOR':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,72,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,72,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,72,-74,72,-47,72,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,72,-104,]),'PENSIZE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,73,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,73,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,73,-74,73,-47,73,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,73,-104,]),'PENFORWARD':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,74,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,74,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,74,-74,74,-47,74,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,74,-104,]),'PENBACK':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,75,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,75,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,75,-74,75,-47,75,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,75,-104,]),'ROTATE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,76,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,76,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,76,-74,76,-47,76,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,76,-104,]),'WHILE':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,77,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,77,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,77,-74,77,-47,77,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,77,-104,]),'PENON':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,78,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,78,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,78,-74,78,-47,78,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,78,-104,]),'PENOFF':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,79,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,79,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,79,-74,79,-47,79,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,79,-104,]),'PRINT':([12,22,24,30,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,247,249,266,274,275,276,277,288,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,327,328,329,],[-164,-16,-18,-164,-13,80,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,80,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-164,80,-74,80,-47,80,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-164,80,-104,]),'RBRACE':([12,22,24,30,35,36,37,38,41,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,83,100,202,203,231,232,234,235,236,237,238,239,249,266,275,276,277,288,289,290,291,292,293,296,297,301,303,304,311,312,314,321,322,323,326,327,328,329,],[-164,-16,-18,-164,45,-13,-12,-15,-164,-10,-164,-14,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-17,-11,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,-164,-74,299,-47,303,-86,-87,-88,-46,-158,307,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-162,-164,329,-104,]),'LBRACE':([12,13,22,24,25,41,83,166,167,189,206,207,208,209,228,240,248,270,324,],[-164,-2,-16,-18,30,-164,-17,-164,-164,-106,247,-13,-79,249,266,-106,-78,30,327,]),'LPAREN':([31,32,39,40,44,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,91,93,102,103,104,105,106,107,108,109,111,112,113,114,115,118,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,256,278,298,],[-80,-80,81,82,91,-149,104,105,106,107,108,109,110,111,112,113,114,-45,116,117,118,-144,-149,91,139,91,91,91,91,91,91,91,91,91,91,161,91,91,-143,-150,91,-143,-143,-143,-143,91,-141,-141,-141,-141,-141,-141,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-143,91,91,]),'LBRACKET':([34,65,93,],[44,102,44,]),'COMMA':([34,42,43,84,89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,139,141,142,145,164,165,168,171,172,175,177,180,187,188,204,205,214,224,250,251,252,253,254,257,258,259,260,261,262,264,265,272,279,280,281,282,283,284,287,294,295,301,306,311,322,],[-24,-23,86,86,-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,-164,-150,190,191,194,-161,-82,-117,-120,-122,-125,-134,-109,-116,226,242,245,-145,-156,-118,-119,-123,-124,-126,-142,-142,-142,-142,-142,-142,226,-156,-161,-110,-111,-112,-113,-114,-115,226,242,-82,-151,245,-148,-147,]),'CTE_INT':([44,91,102,104,105,106,107,108,109,111,112,113,114,118,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,256,278,298,],[94,-144,94,94,94,94,94,94,94,94,94,94,94,94,94,-143,-150,94,-143,-143,-143,-143,94,-141,-141,-141,-141,-141,-141,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,-143,94,94,]),'CTE_FLOAT':([44,91,102,104,105,106,107,108,109,111,112,113,114,118,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,256,278,298,],[95,-144,95,95,95,95,95,95,95,95,95,95,95,95,95,-143,-150,95,-143,-143,-143,-143,95,-141,-141,-141,-141,-141,-141,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-143,95,95,]),'TRUE':([44,91,102,104,105,106,107,108,109,111,112,113,114,118,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,256,278,298,],[98,-144,98,98,98,98,98,98,98,98,98,98,98,98,98,-143,-150,98,-143,-143,-143,-143,98,-141,-141,-141,-141,-141,-141,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-143,98,98,]),'FALSE':([44,91,102,104,105,106,107,108,109,111,112,113,114,118,128,136,139,161,169,170,173,174,178,181,182,183,184,185,186,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,256,278,298,],[99,-144,99,99,99,99,99,99,99,99,99,99,99,99,99,-143,-150,99,-143,-143,-143,-143,99,-141,-141,-141,-141,-141,-141,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-143,99,99,]),'RETURN':([45,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,202,203,231,232,234,235,236,237,238,239,247,274,275,277,289,290,291,292,293,297,301,303,304,311,312,314,321,322,323,329,],[-10,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-94,-95,-85,-84,-83,-91,-92,-93,-89,-90,-164,298,-74,-47,-86,-87,-88,-46,-158,-73,-151,-164,-44,-148,-108,-105,-48,-147,-103,-104,]),'ASSIGN':([65,101,216,],[-49,136,256,]),'RPAREN':([81,82,89,90,92,93,94,95,96,97,98,99,116,117,120,121,122,125,126,127,129,130,131,132,133,134,135,138,139,140,143,144,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,164,165,168,171,172,175,176,177,180,187,188,201,204,205,214,223,224,225,227,229,230,233,241,243,244,246,250,251,252,253,254,257,258,259,260,261,262,264,265,272,279,280,281,282,283,284,286,287,294,295,301,302,305,306,311,315,322,],[-164,-164,-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,162,163,166,-68,167,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,-164,-150,189,192,193,195,-53,-54,-55,-56,-57,-58,-59,-60,-61,196,197,198,199,200,-161,-82,-117,-120,-122,-125,214,-134,-109,-116,-164,240,-164,-164,-145,263,-156,-153,-155,267,268,269,271,-160,-67,-70,-118,-119,-123,-124,-126,-142,-142,-142,-142,-142,-142,-164,-156,-161,-110,-111,-112,-113,-114,-115,-152,-164,-164,-82,-151,-154,-159,-164,-148,-69,-147,]),'RBRACKET':([88,89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,137,138,168,171,172,175,177,179,180,187,214,250,251,252,253,254,257,258,259,260,261,262,279,280,281,282,283,284,301,311,322,],[125,-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,-50,-164,-117,-120,-122,-125,-134,216,-109,-116,-145,-118,-119,-123,-124,-126,-142,-142,-142,-142,-142,-142,-110,-111,-112,-113,-114,-115,-151,-148,-147,]),'MINUS':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,172,175,177,214,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,169,-164,-128,-130,-136,-131,-132,-133,-135,-122,-125,-134,-145,-123,-124,-126,-151,-148,-147,]),'PLUS':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,172,175,177,214,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,170,-164,-128,-130,-136,-131,-132,-133,-135,-122,-125,-134,-145,-123,-124,-126,-151,-148,-147,]),'LESSER':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,181,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'GREATER':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,182,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'EQUAL':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,183,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'NOTEQUAL':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,184,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'GREATEROREQUAL':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,185,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'LESSEROREQUAL':([89,90,92,93,94,95,96,97,98,99,125,126,127,129,130,131,132,133,134,135,138,168,171,172,175,177,214,250,251,252,253,254,301,311,322,],[-121,-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,-164,-164,-128,-130,-136,-131,-132,-133,-135,186,-117,-120,-122,-125,-134,-145,-118,-119,-123,-124,-126,-151,-148,-147,]),'DIVIDE':([90,92,93,94,95,96,97,98,99,125,127,129,130,131,132,133,134,135,177,214,254,301,311,322,],[-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,173,-128,-130,-136,-131,-132,-133,-135,-134,-145,-126,-151,-148,-147,]),'TIMES':([90,92,93,94,95,96,97,98,99,125,127,129,130,131,132,133,134,135,177,214,254,301,311,322,],[-129,-127,-137,-138,-139,-140,-100,-101,-102,-26,174,-128,-130,-136,-131,-132,-133,-135,-134,-145,-126,-151,-148,-147,]),'RED':([110,],[147,]),'BLUE':([110,],[148,]),'YELLOW':([110,],[149,]),'GREEN':([110,],[150,]),'PINK':([110,],[151,]),'PURPLE':([110,],[152,]),'BLACK':([110,],[153,]),'BROWN':([110,],[154,]),'WHITE':([110,],[155,]),'CTE_STRING':([114,],[160,]),'ELSE':([303,313,],[-107,324,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'gotomain':([4,],[5,]),'program1':([5,],[6,]),'empty':([5,12,30,41,43,46,81,82,84,126,127,138,166,167,188,204,205,247,249,264,266,287,294,303,306,309,316,327,],[7,24,38,24,87,38,121,121,87,171,175,187,208,208,227,243,246,275,275,227,38,227,243,314,246,320,320,38,]),'getglobalmemory':([6,],[8,]),'funcs':([6,309,316,],[9,319,319,]),'vars':([6,30,166,167,],[10,36,207,207,]),'save_funcs':([9,],[14,]),'global_vars':([10,],[15,]),'type':([11,12,41,81,82,245,],[16,23,23,119,119,273,]),'vars2':([12,41,],[22,83,]),'fillmain':([13,],[25,]),'functype':([16,17,],[26,27,]),'save_type':([23,],[28,]),'block':([25,270,],[29,292,]),'vars3':([28,86,],[33,124,]),'b1':([30,],[35,]),'b2':([30,46,266,327,],[37,100,288,328,]),'saveidfunc':([31,32,],[39,40,]),'list':([34,93,],[42,131,]),'saveid':([34,],[43,]),'local_vars':([36,207,],[46,248,]),'statute':([37,100,274,276,288,328,],[47,47,297,297,47,47,]),'assignment':([37,100,274,276,288,328,],[48,48,48,48,48,48,]),'call':([37,44,100,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,274,276,278,288,298,328,],[49,97,49,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,49,49,97,49,97,49,]),'condition':([37,100,274,276,288,328,],[50,50,50,50,50,50,]),'triangle':([37,100,274,276,288,328,],[51,51,51,51,51,51,]),'rectangle':([37,100,274,276,288,328,],[52,52,52,52,52,52,]),'square':([37,100,274,276,288,328,],[53,53,53,53,53,53,]),'circle':([37,100,274,276,288,328,],[54,54,54,54,54,54,]),'poligon':([37,100,274,276,288,328,],[55,55,55,55,55,55,]),'color':([37,100,274,276,288,328,],[56,56,56,56,56,56,]),'pensize':([37,100,274,276,288,328,],[57,57,57,57,57,57,]),'penforward':([37,100,274,276,288,328,],[58,58,58,58,58,58,]),'penback':([37,100,274,276,288,328,],[59,59,59,59,59,59,]),'rotate':([37,100,274,276,288,328,],[60,60,60,60,60,60,]),'while':([37,100,274,276,288,328,],[61,61,61,61,61,61,]),'penon':([37,100,274,276,288,328,],[62,62,62,62,62,62,]),'penoff':([37,100,274,276,288,328,],[63,63,63,63,63,63,]),'print':([37,100,274,276,288,328,],[64,64,64,64,64,64,]),'savelist':([42,],[84,]),'vars4':([43,84,],[85,123,]),'exp':([44,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,217,218,219,220,221,222,226,242,278,298,],[88,138,138,141,142,143,144,145,156,157,158,159,138,138,138,138,138,229,230,233,250,251,257,258,259,260,261,262,138,138,138,138,]),'term':([44,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,278,298,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,252,253,89,89,89,89,89,89,89,89,89,89,]),'factor':([44,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,278,298,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'var_cte':([44,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,278,298,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'cte_bool':([44,102,104,105,106,107,108,109,111,112,113,114,118,128,161,178,188,190,191,194,210,211,212,213,217,218,219,220,221,222,226,242,278,298,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'verify_id':([65,],[101,]),'check_name':([65,93,],[103,103,]),'while_return':([77,],[115,]),'params':([81,82,],[120,122,]),'top_exp':([89,],[126,]),'top_factor':([90,],[127,]),'false_bottom':([91,],[128,]),'push_id':([93,],[129,]),'getidvalue':([93,],[130,]),'getvalue_i':([94,],[132,]),'getvalue_f':([95,],[133,]),'getvalue_b':([96,],[134,]),'getcallvalue':([97,],[135,]),'expression':([102,104,118,128,161,178,188,226,242,278,298,],[137,140,164,176,201,215,224,265,272,300,308,]),'color_cte':([110,],[146,]),'exp1':([126,],[168,]),'term1':([127,],[172,]),'getarrayvalue':([131,],[177,]),'push_sign':([136,169,170,173,174,256,],[178,210,211,212,213,278,]),'check_range':([137,],[179,]),'expression1':([138,],[180,]),'create_era':([139,],[188,]),'to_screen':([164,272,],[204,294,]),'save_par':([165,295,],[205,306,]),'funcvars':([166,167,],[206,209,]),'relop':([181,182,183,184,185,186,],[217,218,219,220,221,222,]),'call1':([188,],[223,]),'call2':([188,264,287,],[225,286,302,]),'type_check':([189,240,],[228,270,]),'print_multi':([204,294,],[241,305,]),'params1':([205,306,],[244,315,]),'end_par':([214,],[254,]),'set_value':([215,300,],[255,310,]),'argument':([224,265,],[264,287,]),'statements':([247,249,],[274,276,]),'top_relop':([257,258,259,260,261,262,],[279,280,281,282,283,284,]),'check_params':([263,],[285,]),'return':([274,],[296,]),'end_while':([292,],[304,]),'end_func':([299,307,],[309,316,]),'gosub':([301,],[311,]),'condition1':([303,],[312,]),'gotoElse':([303,],[313,]),'savereturn':([308,],[317,]),'funcs3':([309,316,],[318,325,]),'checkreturn':([311,],[322,]),'end_if':([312,],[323,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON gotomain program1 getglobalmemory DAVINCI fillmain block','program',9,'p_program','parser.py',41),
  ('fillmain -> <empty>','fillmain',0,'p_fillmain','parser.py',63),
  ('gotomain -> <empty>','gotomain',0,'p_gotomain','parser.py',68),
  ('program1 -> program1 funcs save_funcs','program1',3,'p_program1','parser.py',74),
  ('program1 -> program1 vars global_vars','program1',3,'p_program1','parser.py',75),
  ('program1 -> empty','program1',1,'p_program1','parser.py',76),
  ('getglobalmemory -> <empty>','getglobalmemory',0,'p_getglobalmemory','parser.py',80),
  ('save_funcs -> <empty>','save_funcs',0,'p_save_funcs','parser.py',87),
  ('global_vars -> <empty>','global_vars',0,'p_global_vars','parser.py',91),
  ('block -> LBRACE b1 RBRACE','block',3,'p_block','parser.py',106),
  ('b1 -> vars local_vars b2','b1',3,'p_b1','parser.py',110),
  ('b1 -> b2','b1',1,'p_b1','parser.py',111),
  ('local_vars -> <empty>','local_vars',0,'p_local_vars','parser.py',115),
  ('b2 -> b2 statute','b2',2,'p_b2','parser.py',130),
  ('b2 -> empty','b2',1,'p_b2','parser.py',131),
  ('vars -> VAR vars2','vars',2,'p_vars','parser.py',135),
  ('vars2 -> type save_type vars3 SEMICOLON vars2','vars2',5,'p_vars2','parser.py',139),
  ('vars2 -> empty','vars2',1,'p_vars2','parser.py',140),
  ('vars3 -> ID list savelist vars4','vars3',4,'p_vars3','parser.py',144),
  ('vars3 -> ID saveid vars4','vars3',3,'p_vars3','parser.py',145),
  ('vars4 -> COMMA vars3','vars4',2,'p_vars4','parser.py',149),
  ('vars4 -> empty','vars4',1,'p_vars4','parser.py',150),
  ('savelist -> <empty>','savelist',0,'p_savelist','parser.py',154),
  ('saveid -> <empty>','saveid',0,'p_saveid','parser.py',166),
  ('save_type -> <empty>','save_type',0,'p_save_type','parser.py',172),
  ('list -> LBRACKET exp RBRACKET','list',3,'p_list','parser.py',178),
  ('statute -> assignment','statute',1,'p_statute','parser.py',183),
  ('statute -> call','statute',1,'p_statute','parser.py',184),
  ('statute -> condition','statute',1,'p_statute','parser.py',185),
  ('statute -> triangle','statute',1,'p_statute','parser.py',186),
  ('statute -> rectangle','statute',1,'p_statute','parser.py',187),
  ('statute -> square','statute',1,'p_statute','parser.py',188),
  ('statute -> circle','statute',1,'p_statute','parser.py',189),
  ('statute -> poligon','statute',1,'p_statute','parser.py',190),
  ('statute -> color','statute',1,'p_statute','parser.py',191),
  ('statute -> pensize','statute',1,'p_statute','parser.py',192),
  ('statute -> penforward','statute',1,'p_statute','parser.py',193),
  ('statute -> penback','statute',1,'p_statute','parser.py',194),
  ('statute -> rotate','statute',1,'p_statute','parser.py',195),
  ('statute -> while','statute',1,'p_statute','parser.py',196),
  ('statute -> penon','statute',1,'p_statute','parser.py',197),
  ('statute -> penoff','statute',1,'p_statute','parser.py',198),
  ('statute -> print','statute',1,'p_statute','parser.py',199),
  ('while -> WHILE while_return LPAREN expression RPAREN type_check block end_while','while',8,'p_while','parser.py',203),
  ('while_return -> <empty>','while_return',0,'p_while_return','parser.py',207),
  ('end_while -> <empty>','end_while',0,'p_end_while','parser.py',212),
  ('assignment -> ID verify_id ASSIGN push_sign expression set_value SEMICOLON','assignment',7,'p_assignment','parser.py',220),
  ('assignment -> ID LBRACKET expression check_range RBRACKET ASSIGN push_sign expression set_value SEMICOLON','assignment',10,'p_assignment','parser.py',221),
  ('verify_id -> <empty>','verify_id',0,'p_verify_id','parser.py',225),
  ('check_range -> <empty>','check_range',0,'p_check_range','parser.py',243),
  ('set_value -> <empty>','set_value',0,'p_set_value','parser.py',273),
  ('cte_id -> <empty>','cte_id',0,'p_cte_id','parser.py',290),
  ('color_cte -> RED','color_cte',1,'p_color_cte','parser.py',294),
  ('color_cte -> BLUE','color_cte',1,'p_color_cte','parser.py',295),
  ('color_cte -> YELLOW','color_cte',1,'p_color_cte','parser.py',296),
  ('color_cte -> GREEN','color_cte',1,'p_color_cte','parser.py',297),
  ('color_cte -> PINK','color_cte',1,'p_color_cte','parser.py',298),
  ('color_cte -> PURPLE','color_cte',1,'p_color_cte','parser.py',299),
  ('color_cte -> BLACK','color_cte',1,'p_color_cte','parser.py',300),
  ('color_cte -> BROWN','color_cte',1,'p_color_cte','parser.py',301),
  ('color_cte -> WHITE','color_cte',1,'p_color_cte','parser.py',302),
  ('st_cte -> STRING','st_cte',1,'p_st_cte','parser.py',324),
  ('st_cte -> cte_bool','st_cte',1,'p_st_cte','parser.py',325),
  ('funcs -> FUNC type functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements return RBRACE end_func funcs3','funcs',15,'p_funcs','parser.py',329),
  ('funcs -> FUNC VOID functype ID saveidfunc LPAREN params RPAREN funcvars LBRACE statements RBRACE end_func funcs3','funcs',14,'p_funcs','parser.py',330),
  ('functype -> <empty>','functype',0,'p_functype','parser.py',334),
  ('params -> type ID save_par params1','params',4,'p_params','parser.py',340),
  ('params -> empty','params',1,'p_params','parser.py',341),
  ('params1 -> COMMA type ID save_par params1','params1',5,'p_params1','parser.py',346),
  ('params1 -> empty','params1',1,'p_params1','parser.py',347),
  ('funcs1 -> funcs1 COMMA type save_type ID save_par','funcs1',6,'p_funcs1','parser.py',351),
  ('funcs1 -> empty','funcs1',1,'p_funcs1','parser.py',352),
  ('statements -> statements statute','statements',2,'p_statements','parser.py',356),
  ('statements -> empty','statements',1,'p_statements','parser.py',357),
  ('test -> <empty>','test',0,'p_test','parser.py',361),
  ('funcs3 -> funcs','funcs3',1,'p_funcs3','parser.py',366),
  ('funcs3 -> empty','funcs3',1,'p_funcs3','parser.py',367),
  ('funcvars -> vars local_vars','funcvars',2,'p_funcvars','parser.py',371),
  ('funcvars -> empty','funcvars',1,'p_funcvars','parser.py',372),
  ('saveidfunc -> <empty>','saveidfunc',0,'p_saveidfunc','parser.py',376),
  ('end_func -> <empty>','end_func',0,'p_end_func','parser.py',386),
  ('save_par -> <empty>','save_par',0,'p_save_par','parser.py',393),
  ('color -> COLOR LPAREN color_cte RPAREN SEMICOLON','color',5,'p_color','parser.py',402),
  ('circle -> CIRCLE LPAREN exp RPAREN SEMICOLON','circle',5,'p_circle','parser.py',407),
  ('square -> SQUARE LPAREN exp RPAREN SEMICOLON','square',5,'p_square','parser.py',412),
  ('triangle -> TRIANGLE LPAREN exp COMMA exp RPAREN SEMICOLON','triangle',7,'p_triangle','parser.py',417),
  ('rectangle -> RECTANGLE LPAREN exp COMMA exp RPAREN SEMICOLON','rectangle',7,'p_rectangle','parser.py',422),
  ('poligon -> POLIGON LPAREN exp COMMA exp RPAREN SEMICOLON','poligon',7,'p_poligon','parser.py',427),
  ('rotate -> ROTATE LPAREN exp RPAREN SEMICOLON','rotate',5,'p_rotate','parser.py',432),
  ('rotate -> ROTATE LPAREN CTE_STRING RPAREN SEMICOLON','rotate',5,'p_rotate','parser.py',433),
  ('pensize -> PENSIZE LPAREN exp RPAREN SEMICOLON','pensize',5,'p_pensize','parser.py',438),
  ('penforward -> PENFORWARD LPAREN exp RPAREN SEMICOLON','penforward',5,'p_penforward','parser.py',443),
  ('penback -> PENBACK LPAREN exp RPAREN SEMICOLON','penback',5,'p_penback','parser.py',450),
  ('penon -> PENON LPAREN RPAREN SEMICOLON','penon',4,'p_penon','parser.py',455),
  ('penoff -> PENOFF LPAREN RPAREN SEMICOLON','penoff',4,'p_penoff','parser.py',460),
  ('type -> INT','type',1,'p_type','parser.py',465),
  ('type -> FLOAT','type',1,'p_type','parser.py',466),
  ('type -> STRING','type',1,'p_type','parser.py',467),
  ('type -> BOOL','type',1,'p_type','parser.py',468),
  ('getcallvalue -> <empty>','getcallvalue',0,'p_getcallvalue','parser.py',482),
  ('cte_bool -> TRUE','cte_bool',1,'p_cte_bool','parser.py',495),
  ('cte_bool -> FALSE','cte_bool',1,'p_cte_bool','parser.py',496),
  ('condition -> IF LPAREN expression RPAREN type_check LBRACE b2 RBRACE condition1 end_if','condition',10,'p_condition','parser.py',506),
  ('condition1 -> gotoElse ELSE LBRACE b2 RBRACE','condition1',5,'p_condition1','parser.py',510),
  ('condition1 -> empty','condition1',1,'p_condition1','parser.py',511),
  ('type_check -> <empty>','type_check',0,'p_type_check','parser.py',515),
  ('gotoElse -> <empty>','gotoElse',0,'p_gotoElse','parser.py',528),
  ('end_if -> <empty>','end_if',0,'p_end_if','parser.py',537),
  ('expression -> exp expression1','expression',2,'p_expression','parser.py',543),
  ('expression1 -> LESSER relop exp top_relop','expression1',4,'p_expression1','parser.py',549),
  ('expression1 -> GREATER relop exp top_relop','expression1',4,'p_expression1','parser.py',550),
  ('expression1 -> EQUAL relop exp top_relop','expression1',4,'p_expression1','parser.py',551),
  ('expression1 -> NOTEQUAL relop exp top_relop','expression1',4,'p_expression1','parser.py',552),
  ('expression1 -> GREATEROREQUAL relop exp top_relop','expression1',4,'p_expression1','parser.py',553),
  ('expression1 -> LESSEROREQUAL relop exp top_relop','expression1',4,'p_expression1','parser.py',554),
  ('expression1 -> empty','expression1',1,'p_expression1','parser.py',555),
  ('exp -> term top_exp exp1','exp',3,'p_exp','parser.py',559),
  ('exp1 -> MINUS push_sign exp','exp1',3,'p_exp1','parser.py',564),
  ('exp1 -> PLUS push_sign exp','exp1',3,'p_exp1','parser.py',565),
  ('exp1 -> empty','exp1',1,'p_exp1','parser.py',566),
  ('top_exp -> <empty>','top_exp',0,'p_top_exp','parser.py',570),
  ('term -> factor top_factor term1','term',3,'p_term','parser.py',590),
  ('term1 -> DIVIDE push_sign term','term1',3,'p_term1','parser.py',595),
  ('term1 -> TIMES push_sign term','term1',3,'p_term1','parser.py',596),
  ('term1 -> empty','term1',1,'p_term1','parser.py',597),
  ('factor -> LPAREN false_bottom expression RPAREN end_par','factor',5,'p_factor','parser.py',601),
  ('factor -> var_cte','factor',1,'p_factor','parser.py',602),
  ('factor -> ID push_id','factor',2,'p_factor','parser.py',603),
  ('top_factor -> <empty>','top_factor',0,'p_top_factor','parser.py',612),
  ('var_cte -> ID getidvalue','var_cte',2,'p_var_cte','parser.py',633),
  ('var_cte -> CTE_INT getvalue_i','var_cte',2,'p_var_cte','parser.py',634),
  ('var_cte -> CTE_FLOAT getvalue_f','var_cte',2,'p_var_cte','parser.py',635),
  ('var_cte -> cte_bool getvalue_b','var_cte',2,'p_var_cte','parser.py',636),
  ('var_cte -> ID list getarrayvalue','var_cte',3,'p_var_cte','parser.py',637),
  ('var_cte -> call getcallvalue','var_cte',2,'p_var_cte','parser.py',638),
  ('getarrayvalue -> <empty>','getarrayvalue',0,'p_getarrayvalue','parser.py',646),
  ('getidvalue -> <empty>','getidvalue',0,'p_getidvalue','parser.py',677),
  ('getvalue_i -> <empty>','getvalue_i',0,'p_getvalue_i','parser.py',695),
  ('getvalue_f -> <empty>','getvalue_f',0,'p_getvalue_f','parser.py',703),
  ('getvalue_b -> <empty>','getvalue_b',0,'p_getvalue_b','parser.py',711),
  ('relop -> <empty>','relop',0,'p_relop','parser.py',719),
  ('top_relop -> <empty>','top_relop',0,'p_top_relop','parser.py',736),
  ('push_sign -> <empty>','push_sign',0,'p_push_sign','parser.py',756),
  ('false_bottom -> <empty>','false_bottom',0,'p_false_bottom','parser.py',772),
  ('end_par -> <empty>','end_par',0,'p_end_par','parser.py',778),
  ('push_id -> <empty>','push_id',0,'p_push_id','parser.py',784),
  ('call -> ID check_name LPAREN create_era call1 RPAREN check_params SEMICOLON gosub checkreturn','call',10,'p_call','parser.py',801),
  ('checkreturn -> <empty>','checkreturn',0,'p_checkreturn','parser.py',805),
  ('check_name -> <empty>','check_name',0,'p_check_name','parser.py',811),
  ('create_era -> <empty>','create_era',0,'p_create_era','parser.py',823),
  ('gosub -> <empty>','gosub',0,'p_gosub','parser.py',829),
  ('call1 -> expression argument call2','call1',3,'p_call1','parser.py',835),
  ('call1 -> call2','call1',1,'p_call1','parser.py',836),
  ('call2 -> COMMA expression argument call2','call2',4,'p_call2','parser.py',840),
  ('call2 -> empty','call2',1,'p_call2','parser.py',841),
  ('argument -> <empty>','argument',0,'p_argument','parser.py',845),
  ('check_params -> <empty>','check_params',0,'p_check_params','parser.py',865),
  ('print -> PRINT LPAREN expression to_screen print_multi RPAREN SEMICOLON','print',7,'p_print','parser.py',876),
  ('print_multi -> COMMA expression to_screen print_multi','print_multi',4,'p_print_multi','parser.py',880),
  ('print_multi -> empty','print_multi',1,'p_print_multi','parser.py',881),
  ('to_screen -> <empty>','to_screen',0,'p_to_screen','parser.py',885),
  ('return -> RETURN expression savereturn SEMICOLON','return',4,'p_return','parser.py',892),
  ('savereturn -> <empty>','savereturn',0,'p_savereturn','parser.py',896),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',908),
]
