from quads import *


class SemanticCube:

    def __init__(self):
        self.cube = {
            Type.INT.value: {
                Type.INT.value: {
                    Operations.PLUS.value: Type.INT.value,
                    Operations.MINUS.value: Type.INT.value,
                    Operations.TIMES.value: Type.INT.value,
                    Operations.DIVIDE.value: Type.FLOAT.value,
                    Operations.GREATER.value: Type.BOOL.value,
                    Operations.GREATEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSER.value: Type.BOOL.value,
                    Operations.ASSIGN.value: Type.INT.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.FLOAT.value: {
                    Operations.PLUS.value: Type.FLOAT.value,
                    Operations.MINUS.value: Type.FLOAT.value,
                    Operations.TIMES.value: Type.FLOAT.value,
                    Operations.DIVIDE.value: Type.FLOAT.value,
                    Operations.GREATER.value: Type.BOOL.value,
                    Operations.GREATEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSER.value: Type.BOOL.value,
                    Operations.ASSIGN.value: Type.INT.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.STRING.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.BOOL.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
            },
            Type.FLOAT.value: {
                Type.INT.value: {
                    Operations.PLUS.value: Type.FLOAT.value,
                    Operations.MINUS.value: Type.FLOAT.value,
                    Operations.TIMES.value: Type.FLOAT.value,
                    Operations.DIVIDE.value: Type.FLOAT.value,
                    Operations.GREATER.value: Type.BOOL.value,
                    Operations.GREATEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSER.value: Type.BOOL.value,
                    Operations.ASSIGN.value: Type.FLOAT.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.FLOAT.value: {
                    Operations.PLUS.value: Type.FLOAT.value,
                    Operations.MINUS.value: Type.FLOAT.value,
                    Operations.TIMES.value: Type.FLOAT.value,
                    Operations.DIVIDE.value: Type.FLOAT.value,
                    Operations.GREATER.value: Type.BOOL.value,
                    Operations.GREATEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSEROREQUAL.value: Type.BOOL.value,
                    Operations.LESSER.value: Type.BOOL.value,
                    Operations.ASSIGN.value: Type.FLOAT.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.STRING.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.BOOL.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
            },
            Type.STRING.value: {
                Type.INT.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.FLOAT.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.STRING.value: {
                    Operations.PLUS.value: Type.STRING.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.STRING.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.BOOL.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
            },
            Type.BOOL.value: {
                Type.INT.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.FLOAT.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.STRING.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.ERROR.value,
                    Operations.EQUAL.value: Type.ERROR.value,
                    Operations.NOTEQUAL.value: Type.ERROR.value,
                    Operations.AND.value: Type.ERROR.value,
                    Operations.OR.value: Type.ERROR.value,
                },
                Type.BOOL.value: {
                    Operations.PLUS.value: Type.ERROR.value,
                    Operations.MINUS.value: Type.ERROR.value,
                    Operations.TIMES.value: Type.ERROR.value,
                    Operations.DIVIDE.value: Type.ERROR.value,
                    Operations.GREATER.value: Type.ERROR.value,
                    Operations.GREATEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSEROREQUAL.value: Type.ERROR.value,
                    Operations.LESSER.value: Type.ERROR.value,
                    Operations.ASSIGN.value: Type.BOOL.value,
                    Operations.EQUAL.value: Type.BOOL.value,
                    Operations.NOTEQUAL.value: Type.BOOL.value,
                    Operations.AND.value: Type.BOOL.value,
                    Operations.OR.value: Type.BOOL.value,
                },
            },
        }

    def getType(self, type1, type2, operator):
        return self.cube[type1][type2][operator]
