from quads import *
class SemanticCube  :  

	def __init__(self) :  
		self.cube = {
            Type.INT.value :  {
              Type.INT.value :  {
                Operations.PLUS.value : Type.INT.value,
                Operations.MINUS.value : Type.INT.value,
                Operations.TIMES.value : Type.INT.value,
                Operations.DIVIDE.value : "Float",
                Operations.GREATER.value : "Bool",
                Operations.GREATEROREQUAL.value : "Bool",
                Operations.LESSEROREQUAL.value : "Bool",
                Operations.LESSER.value : "Bool",
                Operations.ASSIGN.value : Type.INT.value,
                Operations.EQUAL.value :  "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Float" :  {
                Operations.PLUS.value : "Float",
                Operations.MINUS.value : "Float",
                Operations.TIMES.value : "Float",
                Operations.DIVIDE.value : "Float",
                Operations.GREATER.value : "Bool",
                Operations.GREATEROREQUAL.value : "Bool",
                Operations.LESSEROREQUAL.value : "Bool",
                Operations.LESSER.value : "Bool",
                Operations.ASSIGN.value : Type.INT.value,
                Operations.EQUAL.value :  "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "String" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL.value : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Bool" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL.value : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              },
            "Float" : {
              Type.INT.value :  {
                Operations.PLUS.value : "Float",
                Operations.MINUS.value : "Float",
                Operations.TIMES.value : "Float",
                Operations.DIVIDE.value : "Float",
                Operations.GREATER.value : "Bool",
                Operations.GREATEROREQUAL.value : "Bool",
                Operations.LESSEROREQUAL.value : "Bool",
                Operations.LESSER.value : "Bool",
                Operations.ASSIGN.value : "Float",
                Operations.EQUAL.value :  "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Float" :  {
                Operations.PLUS.value : "Float",
                Operations.MINUS.value : "Float",
                Operations.TIMES.value : "Float",
                Operations.DIVIDE.value : "Float",
                Operations.GREATER.value : "Bool",
                Operations.GREATEROREQUAL.value : "Bool",
                Operations.LESSEROREQUAL.value : "Bool",
                Operations.LESSER.value : "Bool",
                Operations.ASSIGN.value : "Float",
                Operations.EQUAL.value :  "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "String" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL.value : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Bool" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL.value : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              },
            "String" : {
              Type.INT.value :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Float" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "String" :  {
                Operations.PLUS.value : "String",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "String",
                Operations.EQUAL.value :  "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Bool" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              },
            "Bool" : {
              Type.INT.value :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Float" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value :  "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "String" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Error",
                Operations.EQUAL.value : "Error",
                Operations.NOTEQUAL.value : "Error",
                Operations.AND.value : "Error",
                Operations.OR.value : "Error",
                },
              "Bool" :  {
                Operations.PLUS.value : "Error",
                Operations.MINUS.value : "Error",
                Operations.TIMES.value : "Error",
                Operations.DIVIDE.value : "Error",
                Operations.GREATER.value : "Error",
                Operations.GREATEROREQUAL.value : "Error",
                Operations.LESSEROREQUAL.value : "Error",
                Operations.LESSER.value : "Error",
                Operations.ASSIGN.value : "Bool",
                Operations.EQUAL.value : "Bool",
                Operations.NOTEQUAL.value : "Bool",
                Operations.AND.value : "Bool",
                Operations.OR.value : "Bool",
                },
              },
            }

def getType(self, type1, type2, operator): 
    return self.cube[type1][type2][operator]
